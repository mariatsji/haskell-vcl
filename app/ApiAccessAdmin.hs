{-# LANGUAGE OverloadedStrings, QuasiQuotes #-}

module ApiAccessAdmin(vcl, small) where

import Data.Text
import NeatInterpolation

small = [text|
sub policy_recv {
  if (!req.http.x-finn-apikey) {
    std.log("vcs-key:no_key");
    std.log("vcs-key:no_key__" + client.ip);
    return(synth(403, "Forbidden"));
  }

  # client: abb-as
  else if (req.http.x-finn-apikey == "VR4AOW6FjaDLasHz") {
    std.log("vcs-key: client__abb-as");
    set req.http.x-client = "abb-as";
  if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
    # NOOP
  } else {
    std.log("vcs-key: client__abb-as_urldenied");
    std.log("TRACE: Valid client abb-as does not have access to this URL and/or method");
    return(synth(403, "Forbidden"));
  }
  } # done with abb-as
  else {
    std.log("TRACE: DENIED. Key was not recognised.");
    std.log("vcs-key:invalid_key");
    std.log("vcs-key:invalid_key__" + client.ip);
    return(synth(403, "Forbidden"));
  }
}

sub policy_deliver {
  if (!req.http.x-client) {
    std.log("DENIED: Unknown client.");
    std.log("Unknown key used was " + req.http.x-finn-apikey);
    set req.http.x-forbid-please = "true";
    return(restart);
  }

  else if (req.http.x-client == "abb-as") {
    # Client has orgIds
    if ((req.method == "GET") && a) {
      if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
        std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
        set req.http.x-forbid-please = "resp-has-no-RO";
        return(restart);
      }
      if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
        return(synth(resp.status, resp.reason));
      }
      set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
      if (!(req.http.x-tmp ~ ",1444156934,")) {
        std.log("TRACE: DENIED. Client doesn't have access");
        set req.http.x-forbid-please = "notowner";
        return(restart);
      }
    }
    
    std.log("TRACE: ACCEPT. Client has access.");
  }

  else {
    std.log("DENIED: Unknown client.");
    std.log("Unknown key used was " + req.http.x-finn-apikey);
    set req.http.x-forbid-please = "true";
    return(restart);
  }
  std.log("TRACE: ACCEPT. Client has access.");
}


  |]

vcl = [text|
# Autogenerated VCL from api-access-admin
  sub policy_recv {
    if (!req.http.x-finn-apikey) {
      std.log("vcs-key:no_key");
      std.log("vcs-key:no_key__" + client.ip);
      return(synth(403, "Forbidden"));
    }

    # client: abb-as
    else if (req.http.x-finn-apikey == "VR4AOW6FjaDLasHz") {
      std.log("vcs-key: client__abb-as");
      set req.http.x-client = "abb-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__abb-as_urldenied");
      std.log("TRACE: Valid client abb-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with abb-as
    # client: abcenter-eiendom
    else if (req.http.x-finn-apikey == "DZB9QLT08tAy5aSx") {
      std.log("vcs-key: client__abcenter-eiendom");
      set req.http.x-client = "abcenter-eiendom";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__abcenter-eiendom_urldenied");
      std.log("TRACE: Valid client abcenter-eiendom does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with abcenter-eiendom
    # client: aberdeen-asset
    else if (req.http.x-finn-apikey == "jZcusUUGehjep489") {
      std.log("vcs-key: client__aberdeen-asset");
      set req.http.x-client = "aberdeen-asset";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__aberdeen-asset_urldenied");
      std.log("TRACE: Valid client aberdeen-asset does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with aberdeen-asset
    # client: academic-work-norway-as
    else if (req.http.x-finn-apikey == "j5Fl1DBloHrVNl9F") {
      std.log("vcs-key: client__academic-work-norway-as");
      set req.http.x-client = "academic-work-norway-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__academic-work-norway-as_urldenied");
      std.log("TRACE: Valid client academic-work-norway-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with academic-work-norway-as
    # client: accenture-as
    else if (req.http.x-finn-apikey == "546Rz5YQ7ycWVwa0") {
      std.log("vcs-key: client__accenture-as");
      set req.http.x-client = "accenture-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__accenture-as_urldenied");
      std.log("TRACE: Valid client accenture-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with accenture-as
    # client: accountor-as
    else if (req.http.x-finn-apikey == "D4xwOz5Xuwo81P3p") {
      std.log("vcs-key: client__accountor-as");
      set req.http.x-client = "accountor-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__accountor-as_urldenied");
      std.log("TRACE: Valid client accountor-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with accountor-as
    # client: acea-development
    else if (req.http.x-finn-apikey == "AdUnh3NROBhQQTts") {
      std.log("vcs-key: client__acea-development");
      set req.http.x-client = "acea-development";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__acea-development_urldenied");
      std.log("TRACE: Valid client acea-development does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with acea-development
    # client: ac-nor
    else if (req.http.x-finn-apikey == "WB7w0TiX0Rt9ZQTD") {
      std.log("vcs-key: client__ac-nor");
      set req.http.x-client = "ac-nor";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__ac-nor_urldenied");
      std.log("TRACE: Valid client ac-nor does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with ac-nor
    # client: add-persona
    else if (req.http.x-finn-apikey == "E3VJLCv9X9i2x5YD") {
      std.log("vcs-key: client__add-persona");
      set req.http.x-client = "add-persona";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__add-persona_urldenied");
      std.log("TRACE: Valid client add-persona does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with add-persona
    # client: adresseavisen-bil
    else if (req.http.x-finn-apikey == "Yz1x85LOeSIlrUZB") {
      std.log("vcs-key: client__adresseavisen-bil");
      set req.http.x-client = "adresseavisen-bil";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__adresseavisen-bil_urldenied");
      std.log("TRACE: Valid client adresseavisen-bil does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with adresseavisen-bil
    # client: adserobil
    else if (req.http.x-finn-apikey == "o3fP5ed04LckGJsI") {
      std.log("vcs-key: client__adserobil");
      set req.http.x-client = "adserobil";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__adserobil_urldenied");
      std.log("TRACE: Valid client adserobil does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with adserobil
    # client: adseroe-bil-as
    else if (req.http.x-finn-apikey == "oRJSqVbxxG9sbzY9") {
      std.log("vcs-key: client__adseroe-bil-as");
      set req.http.x-client = "adseroe-bil-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__adseroe-bil-as_urldenied");
      std.log("TRACE: Valid client adseroe-bil-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with adseroe-bil-as
    # client: advokatfirmaet-gjesdahl--co-ans
    else if (req.http.x-finn-apikey == "7NDEWvkwl6JX4pS0") {
      std.log("vcs-key: client__advokatfirmaet-gjesdahl--co-ans");
      set req.http.x-client = "advokatfirmaet-gjesdahl--co-ans";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__advokatfirmaet-gjesdahl--co-ans_urldenied");
      std.log("TRACE: Valid client advokatfirmaet-gjesdahl--co-ans does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with advokatfirmaet-gjesdahl--co-ans
    # client: af-gruppen-norge-as
    else if (req.http.x-finn-apikey == "ic2gzBlzT6Mx0mGw") {
      std.log("vcs-key: client__af-gruppen-norge-as");
      set req.http.x-client = "af-gruppen-norge-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__af-gruppen-norge-as_urldenied");
      std.log("TRACE: Valid client af-gruppen-norge-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with af-gruppen-norge-as
    # client: aftenposten
    else if (req.http.x-finn-apikey == "5q5Ls6xYYbzFvmyV") {
      std.log("vcs-key: client__aftenposten");
      set req.http.x-client = "aftenposten";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/promoted/.*" || req.url ~ "^/iad/search/job-.*" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__aftenposten_urldenied");
      std.log("TRACE: Valid client aftenposten does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with aftenposten
    # client: aha-eiendom
    else if (req.http.x-finn-apikey == "z4NjYZudoR65z0AJ") {
      std.log("vcs-key: client__aha-eiendom");
      set req.http.x-client = "aha-eiendom";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__aha-eiendom_urldenied");
      std.log("TRACE: Valid client aha-eiendom does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with aha-eiendom
    # client: aker-yachts
    else if (req.http.x-finn-apikey == "vBnwLFASejc6c2nN") {
      std.log("vcs-key: client__aker-yachts");
      set req.http.x-client = "aker-yachts";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__aker-yachts_urldenied");
      std.log("TRACE: Valid client aker-yachts does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with aker-yachts
    # client: a-k-maskiner
    else if (req.http.x-finn-apikey == "gwMz1gT4eVEaihWM") {
      std.log("vcs-key: client__a-k-maskiner");
      set req.http.x-client = "a-k-maskiner";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/agriculture-.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/agriculture-.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/agriculture-.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__a-k-maskiner_urldenied");
      std.log("TRACE: Valid client a-k-maskiner does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with a-k-maskiner
    # client: aktiv-bamble-porsgrunn
    else if (req.http.x-finn-apikey == "bpqTbGPfOdSaHCHM") {
      std.log("vcs-key: client__aktiv-bamble-porsgrunn");
      set req.http.x-client = "aktiv-bamble-porsgrunn";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__aktiv-bamble-porsgrunn_urldenied");
      std.log("TRACE: Valid client aktiv-bamble-porsgrunn does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with aktiv-bamble-porsgrunn
    # client: aktiv-eiendomsmegling
    else if (req.http.x-finn-apikey == "6phqdbSHAWyJiYzu") {
      std.log("vcs-key: client__aktiv-eiendomsmegling");
      set req.http.x-client = "aktiv-eiendomsmegling";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__aktiv-eiendomsmegling_urldenied");
      std.log("TRACE: Valid client aktiv-eiendomsmegling does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with aktiv-eiendomsmegling
    # client: aktiv-telemark---partnergruppe
    else if (req.http.x-finn-apikey == "lJoqBsCultMlOg9Z") {
      std.log("vcs-key: client__aktiv-telemark---partnergruppe");
      set req.http.x-client = "aktiv-telemark---partnergruppe";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__aktiv-telemark---partnergruppe_urldenied");
      std.log("TRACE: Valid client aktiv-telemark---partnergruppe does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with aktiv-telemark---partnergruppe
    # client: alanyahus
    else if (req.http.x-finn-apikey == "AiguurkNXMT5zuNB") {
      std.log("vcs-key: client__alanyahus");
      set req.http.x-client = "alanyahus";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__alanyahus_urldenied");
      std.log("TRACE: Valid client alanyahus does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with alanyahus
    # client: ald-automotive
    else if (req.http.x-finn-apikey == "d4geiuMHBeneMAAg") {
      std.log("vcs-key: client__ald-automotive");
      set req.http.x-client = "ald-automotive";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__ald-automotive_urldenied");
      std.log("TRACE: Valid client ald-automotive does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with ald-automotive
    # client: alfa-bilsenter-as
    else if (req.http.x-finn-apikey == "JbfG3ITyByMo87YP") {
      std.log("vcs-key: client__alfa-bilsenter-as");
      set req.http.x-client = "alfa-bilsenter-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__alfa-bilsenter-as_urldenied");
      std.log("TRACE: Valid client alfa-bilsenter-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with alfa-bilsenter-as
    # client: a-meglerne
    else if (req.http.x-finn-apikey == "XSLPnq4dBZjAPdLn") {
      std.log("vcs-key: client__a-meglerne");
      set req.http.x-client = "a-meglerne";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__a-meglerne_urldenied");
      std.log("TRACE: Valid client a-meglerne does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with a-meglerne
    # client: andenaes-eiendom
    else if (req.http.x-finn-apikey == "qlFHyclNizCpZJ8V") {
      std.log("vcs-key: client__andenaes-eiendom");
      set req.http.x-client = "andenaes-eiendom";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__andenaes-eiendom_urldenied");
      std.log("TRACE: Valid client andenaes-eiendom does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with andenaes-eiendom
    # client: arealpartner-naeringsmegling-as
    else if (req.http.x-finn-apikey == "bwrWMDO8SAEn26Sj") {
      std.log("vcs-key: client__arealpartner-naeringsmegling-as");
      set req.http.x-client = "arealpartner-naeringsmegling-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__arealpartner-naeringsmegling-as_urldenied");
      std.log("TRACE: Valid client arealpartner-naeringsmegling-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with arealpartner-naeringsmegling-as
    # client: arena-personal-as
    else if (req.http.x-finn-apikey == "2LYw6NNOq6YisQmz") {
      std.log("vcs-key: client__arena-personal-as");
      set req.http.x-client = "arena-personal-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__arena-personal-as_urldenied");
      std.log("TRACE: Valid client arena-personal-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with arena-personal-as
    # client: arnulf-hansen--co-as
    else if (req.http.x-finn-apikey == "nbJ3YgbtF6Jn7JqP") {
      std.log("vcs-key: client__arnulf-hansen--co-as");
      set req.http.x-client = "arnulf-hansen--co-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__arnulf-hansen--co-as_urldenied");
      std.log("TRACE: Valid client arnulf-hansen--co-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with arnulf-hansen--co-as
    # client: arpi-holding-as
    else if (req.http.x-finn-apikey == "qGjmAkZUDwdC5oYA") {
      std.log("vcs-key: client__arpi-holding-as");
      set req.http.x-client = "arpi-holding-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__arpi-holding-as_urldenied");
      std.log("TRACE: Valid client arpi-holding-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with arpi-holding-as
    # client: arve-opsahl-partnergruppe
    else if (req.http.x-finn-apikey == "sbhhVskMzW3dT3K8") {
      std.log("vcs-key: client__arve-opsahl-partnergruppe");
      set req.http.x-client = "arve-opsahl-partnergruppe";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__arve-opsahl-partnergruppe_urldenied");
      std.log("TRACE: Valid client arve-opsahl-partnergruppe does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with arve-opsahl-partnergruppe
    # client: AS Financiering
    else if (req.http.x-finn-apikey == "UOqY4kTtoZwkW0ds") {
      std.log("vcs-key: client__AS Financiering");
      set req.http.x-client = "AS Financiering";
    if(((req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/mc$" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-sale/description" || req.url ~ "^/iad/search/caravan/description" || req.url ~ "^/iad/search/car-norway/description" || req.url ~ "^/iad/search/mc/description" || req.url ~ "^/iad/search/mobile-home/description" || req.url ~ "^/tp[/]?$" || req.url ~ "^/tp/ad/boat-.*" || req.url ~ "^/tp/ad/car-.*" || req.url ~ "^/tp/ad/caravan.*" || req.url ~ "^/tp/ad/\d+/?$" || req.url ~ "^/tp/ad/mc.*" || req.url ~ "^/tp/ad/mobile-home.*" || req.url ~ "^/tp/search/boat-sale" || req.url ~ "^/tp/search/caravan" || req.url ~ "^/tp/search/car-norway" || req.url ~ "^/tp/search/mc" || req.url ~ "^/tp/search/mobile-home") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__AS Financiering_urldenied");
      std.log("TRACE: Valid client AS Financiering does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with AS Financiering
    # client: aspelin-ramm-eiendom-as
    else if (req.http.x-finn-apikey == "90dPGYGbO8Txj0ZD") {
      std.log("vcs-key: client__aspelin-ramm-eiendom-as");
      set req.http.x-client = "aspelin-ramm-eiendom-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__aspelin-ramm-eiendom-as_urldenied");
      std.log("TRACE: Valid client aspelin-ramm-eiendom-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with aspelin-ramm-eiendom-as
    # client: aspiro-as
    else if (req.http.x-finn-apikey == "gS8z28CPF9B6HA2U") {
      std.log("vcs-key: client__aspiro-as");
      set req.http.x-client = "aspiro-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__aspiro-as_urldenied");
      std.log("TRACE: Valid client aspiro-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with aspiro-as
    # client: asplan-viak-as-avd-sandvika
    else if (req.http.x-finn-apikey == "N18TnPgG3wLCejkn") {
      std.log("vcs-key: client__asplan-viak-as-avd-sandvika");
      set req.http.x-client = "asplan-viak-as-avd-sandvika";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__asplan-viak-as-avd-sandvika_urldenied");
      std.log("TRACE: Valid client asplan-viak-as-avd-sandvika does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with asplan-viak-as-avd-sandvika
    # client: atea
    else if (req.http.x-finn-apikey == "dqWS8EnVFDqZm85G") {
      std.log("vcs-key: client__atea");
      set req.http.x-client = "atea";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__atea_urldenied");
      std.log("TRACE: Valid client atea does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with atea
    # client: auksjonen
    else if (req.http.x-finn-apikey == "DucorGtOBmYGh6nz") {
      std.log("vcs-key: client__auksjonen");
      set req.http.x-client = "auksjonen";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/agriculture-.*" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/bus.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/construction.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/mc.*" || req.url ~ "^/iad/ad/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/agriculture-.*" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/bus.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/construction.*" || req.url ~ "^/iad/ad/model/mc.*" || req.url ~ "^/iad/ad/model/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/truck.*" || req.url ~ "^/iad/ad/truck.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/agriculture-.*" || req.url ~ "^/iad/search/boat-.*" || req.url ~ "^/iad/search/bus.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/construction.*" || req.url ~ "^/iad/search/(mc|atv|snowmobile|moped-scooter).*" || req.url ~ "^/iad/search/(mobile-home|caravan).*" || req.url ~ "^/iad/search/truck.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__auksjonen_urldenied");
      std.log("TRACE: Valid client auksjonen does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with auksjonen
    # client: auto-2010-as
    else if (req.http.x-finn-apikey == "JtRdBSREa60A0kLK") {
      std.log("vcs-key: client__auto-2010-as");
      set req.http.x-client = "auto-2010-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__auto-2010-as_urldenied");
      std.log("TRACE: Valid client auto-2010-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with auto-2010-as
    # client: auto-23
    else if (req.http.x-finn-apikey == "23GSRzgn6X37pBte") {
      std.log("vcs-key: client__auto-23");
      set req.http.x-client = "auto-23";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__auto-23_urldenied");
      std.log("TRACE: Valid client auto-23 does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with auto-23
    # client: auto-8-8-eide
    else if (req.http.x-finn-apikey == "mR1qDAVlWbVlFHjV") {
      std.log("vcs-key: client__auto-8-8-eide");
      set req.http.x-client = "auto-8-8-eide";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__auto-8-8-eide_urldenied");
      std.log("TRACE: Valid client auto-8-8-eide does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with auto-8-8-eide
    # client: autocenteret-sport
    else if (req.http.x-finn-apikey == "jqke7pP3wHYx4OMK") {
      std.log("vcs-key: client__autocenteret-sport");
      set req.http.x-client = "autocenteret-sport";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__autocenteret-sport_urldenied");
      std.log("TRACE: Valid client autocenteret-sport does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with autocenteret-sport
    # client: autogruppen-partnergruppe
    else if (req.http.x-finn-apikey == "ORilUNb5ktLYBOr0") {
      std.log("vcs-key: client__autogruppen-partnergruppe");
      set req.http.x-client = "autogruppen-partnergruppe";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__autogruppen-partnergruppe_urldenied");
      std.log("TRACE: Valid client autogruppen-partnergruppe does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with autogruppen-partnergruppe
    # client: autoital
    else if (req.http.x-finn-apikey == "FyB4nGYRhHDZYhT3") {
      std.log("vcs-key: client__autoital");
      set req.http.x-client = "autoital";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__autoital_urldenied");
      std.log("TRACE: Valid client autoital does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with autoital
    # client: autoland-rogaland-as
    else if (req.http.x-finn-apikey == "ZPmZnmA6laAdFWto") {
      std.log("vcs-key: client__autoland-rogaland-as");
      set req.http.x-client = "autoland-rogaland-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__autoland-rogaland-as_urldenied");
      std.log("TRACE: Valid client autoland-rogaland-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with autoland-rogaland-as
    # client: automegler-bergen-as
    else if (req.http.x-finn-apikey == "D40hUN0YWSjqB30y") {
      std.log("vcs-key: client__automegler-bergen-as");
      set req.http.x-client = "automegler-bergen-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__automegler-bergen-as_urldenied");
      std.log("TRACE: Valid client automegler-bergen-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with automegler-bergen-as
    # client: automobil-as
    else if (req.http.x-finn-apikey == "PkvaRsnadDNfIyPu") {
      std.log("vcs-key: client__automobil-as");
      set req.http.x-client = "automobil-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__automobil-as_urldenied");
      std.log("TRACE: Valid client automobil-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with automobil-as
    # client: auto-nord-as
    else if (req.http.x-finn-apikey == "cLr5aVoD9XDdIAee") {
      std.log("vcs-key: client__auto-nord-as");
      set req.http.x-client = "auto-nord-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__auto-nord-as_urldenied");
      std.log("TRACE: Valid client auto-nord-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with auto-nord-as
    # client: autopartner-fredrikstad-as
    else if (req.http.x-finn-apikey == "caJ4z4DL4ykmw9sf") {
      std.log("vcs-key: client__autopartner-fredrikstad-as");
      set req.http.x-client = "autopartner-fredrikstad-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__autopartner-fredrikstad-as_urldenied");
      std.log("TRACE: Valid client autopartner-fredrikstad-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with autopartner-fredrikstad-as
    # client: auto-plan-as
    else if (req.http.x-finn-apikey == "RelwfBo1NBLUtDZ0") {
      std.log("vcs-key: client__auto-plan-as");
      set req.http.x-client = "auto-plan-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__auto-plan-as_urldenied");
      std.log("TRACE: Valid client auto-plan-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with auto-plan-as
    # client: autoria
    else if (req.http.x-finn-apikey == "McfncH5jGEZ6Fd1j") {
      std.log("vcs-key: client__autoria");
      set req.http.x-client = "autoria";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__autoria_urldenied");
      std.log("TRACE: Valid client autoria does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with autoria
    # client: autoservice-as
    else if (req.http.x-finn-apikey == "hJvie5CXkjUXeYMi") {
      std.log("vcs-key: client__autoservice-as");
      set req.http.x-client = "autoservice-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__autoservice-as_urldenied");
      std.log("TRACE: Valid client autoservice-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with autoservice-as
    # client: autostrada-oslo
    else if (req.http.x-finn-apikey == "YuK4dzy3i5rFDNYi") {
      std.log("vcs-key: client__autostrada-oslo");
      set req.http.x-client = "autostrada-oslo";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__autostrada-oslo_urldenied");
      std.log("TRACE: Valid client autostrada-oslo does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with autostrada-oslo
    # client: autostrada-partnergruppe
    else if (req.http.x-finn-apikey == "k21Hl2Q5pVymt31T") {
      std.log("vcs-key: client__autostrada-partnergruppe");
      set req.http.x-client = "autostrada-partnergruppe";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__autostrada-partnergruppe_urldenied");
      std.log("TRACE: Valid client autostrada-partnergruppe does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with autostrada-partnergruppe
    # client: autostrada-skien
    else if (req.http.x-finn-apikey == "8zwfOOgcDzApVIcL") {
      std.log("vcs-key: client__autostrada-skien");
      set req.http.x-client = "autostrada-skien";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__autostrada-skien_urldenied");
      std.log("TRACE: Valid client autostrada-skien does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with autostrada-skien
    # client: autostrada-sport
    else if (req.http.x-finn-apikey == "8vDE33lCZSfxtvGM") {
      std.log("vcs-key: client__autostrada-sport");
      set req.http.x-client = "autostrada-sport";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__autostrada-sport_urldenied");
      std.log("TRACE: Valid client autostrada-sport does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with autostrada-sport
    # client: auto-tjuvholmen
    else if (req.http.x-finn-apikey == "ShkvR3hCoctYHYt1") {
      std.log("vcs-key: client__auto-tjuvholmen");
      set req.http.x-client = "auto-tjuvholmen";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__auto-tjuvholmen_urldenied");
      std.log("TRACE: Valid client auto-tjuvholmen does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with auto-tjuvholmen
    # client: autotuning-aka-porsche-center-son
    else if (req.http.x-finn-apikey == "nuuCjifldcnzAulJ") {
      std.log("vcs-key: client__autotuning-aka-porsche-center-son");
      set req.http.x-client = "autotuning-aka-porsche-center-son";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__autotuning-aka-porsche-center-son_urldenied");
      std.log("TRACE: Valid client autotuning-aka-porsche-center-son does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with autotuning-aka-porsche-center-son
    # client: autoxl-as
    else if (req.http.x-finn-apikey == "F7G5ua8CVjUaQ67j") {
      std.log("vcs-key: client__autoxl-as");
      set req.http.x-client = "autoxl-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__autoxl-as_urldenied");
      std.log("TRACE: Valid client autoxl-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with autoxl-as
    # client: autoxo
    else if (req.http.x-finn-apikey == "oi6kunZ8eCMYAd0C") {
      std.log("vcs-key: client__autoxo");
      set req.http.x-client = "autoxo";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__autoxo_urldenied");
      std.log("TRACE: Valid client autoxo does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with autoxo
    # client: avantor
    else if (req.http.x-finn-apikey == "QfnHojHifdMoe21F") {
      std.log("vcs-key: client__avantor");
      set req.http.x-client = "avantor";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__avantor_urldenied");
      std.log("TRACE: Valid client avantor does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with avantor
    # client: azets-people-management
    else if (req.http.x-finn-apikey == "5lVTGNPLcIhsSt9M") {
      std.log("vcs-key: client__azets-people-management");
      set req.http.x-client = "azets-people-management";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__azets-people-management_urldenied");
      std.log("TRACE: Valid client azets-people-management does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with azets-people-management
    # client: bachelorgruppe OsloMet
    else if (req.http.x-finn-apikey == "WJ4D6FaTTSjvorZT") {
      std.log("vcs-key: client__bachelorgruppe OsloMet");
      set req.http.x-client = "bachelorgruppe OsloMet";
    if(((req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-full-time/description" || req.url ~ "^/iad/search/job-management/description" || req.url ~ "^/iad/search/job-part-time/description" || req.url ~ "^/tp[/]?$" || req.url ~ "^/tp/ad/\d+/?$" || req.url ~ "^/tp/ad/job-.*" || req.url ~ "^/tp/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__bachelorgruppe OsloMet_urldenied");
      std.log("TRACE: Valid client bachelorgruppe OsloMet does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with bachelorgruppe OsloMet
    # client: backer-skeie-as
    else if (req.http.x-finn-apikey == "Uy1Dn2keH70mIWy0") {
      std.log("vcs-key: client__backer-skeie-as");
      set req.http.x-client = "backer-skeie-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__backer-skeie-as_urldenied");
      std.log("TRACE: Valid client backer-skeie-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with backer-skeie-as
    # client: bakken-motor-as
    else if (req.http.x-finn-apikey == "m82fBWdXBKvMLfVK") {
      std.log("vcs-key: client__bakken-motor-as");
      set req.http.x-client = "bakken-motor-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/mc.*" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/mc.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-.*" || req.url ~ "^/iad/search/(mc|atv|snowmobile|moped-scooter).*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__bakken-motor-as_urldenied");
      std.log("TRACE: Valid client bakken-motor-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with bakken-motor-as
    # client: bane-nor-sf
    else if (req.http.x-finn-apikey == "VQIuIeNNUizZJpXu") {
      std.log("vcs-key: client__bane-nor-sf");
      set req.http.x-client = "bane-nor-sf";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__bane-nor-sf_urldenied");
      std.log("TRACE: Valid client bane-nor-sf does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with bane-nor-sf
    # client: basale
    else if (req.http.x-finn-apikey == "JyEKU6uN8IeDVvde") {
      std.log("vcs-key: client__basale");
      set req.http.x-client = "basale";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__basale_urldenied");
      std.log("TRACE: Valid client basale does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with basale
    # client: bauge-auto
    else if (req.http.x-finn-apikey == "CJK8d1E6KPGGwcp0") {
      std.log("vcs-key: client__bauge-auto");
      set req.http.x-client = "bauge-auto";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__bauge-auto_urldenied");
      std.log("TRACE: Valid client bauge-auto does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with bauge-auto
    # client: bauge-auto-as
    else if (req.http.x-finn-apikey == "IGrhbSgUR6CN1iFh") {
      std.log("vcs-key: client__bauge-auto-as");
      set req.http.x-client = "bauge-auto-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__bauge-auto-as_urldenied");
      std.log("TRACE: Valid client bauge-auto-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with bauge-auto-as
    # client: bavaria-oslo-as
    else if (req.http.x-finn-apikey == "erI7t8UFAlEFTGp4") {
      std.log("vcs-key: client__bavaria-oslo-as");
      set req.http.x-client = "bavaria-oslo-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__bavaria-oslo-as_urldenied");
      std.log("TRACE: Valid client bavaria-oslo-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with bavaria-oslo-as
    # client: bavaria-partnergruppe
    else if (req.http.x-finn-apikey == "NCTjUGTs3kpFjI9n") {
      std.log("vcs-key: client__bavaria-partnergruppe");
      set req.http.x-client = "bavaria-partnergruppe";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__bavaria-partnergruppe_urldenied");
      std.log("TRACE: Valid client bavaria-partnergruppe does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with bavaria-partnergruppe
    # client: bdo-as
    else if (req.http.x-finn-apikey == "hLWTluQSk0z9l6Do") {
      std.log("vcs-key: client__bdo-as");
      set req.http.x-client = "bdo-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__bdo-as_urldenied");
      std.log("TRACE: Valid client bdo-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with bdo-as
    # client: berge-co-partnergruppe
    else if (req.http.x-finn-apikey == "8PN5dh7OIXA1XSnr") {
      std.log("vcs-key: client__berge-co-partnergruppe");
      set req.http.x-client = "berge-co-partnergruppe";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__berge-co-partnergruppe_urldenied");
      std.log("TRACE: Valid client berge-co-partnergruppe does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with berge-co-partnergruppe
    # client: berge-motorsenter
    else if (req.http.x-finn-apikey == "smPWscXVfnSSV9y1") {
      std.log("vcs-key: client__berge-motorsenter");
      set req.http.x-client = "berge-motorsenter";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__berge-motorsenter_urldenied");
      std.log("TRACE: Valid client berge-motorsenter does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with berge-motorsenter
    # client: bergen-caravan-as
    else if (req.http.x-finn-apikey == "fSSQUbCO66i5eYlb") {
      std.log("vcs-key: client__bergen-caravan-as");
      set req.http.x-client = "bergen-caravan-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/(mobile-home|caravan).*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/(mobile-home|caravan).*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__bergen-caravan-as_urldenied");
      std.log("TRACE: Valid client bergen-caravan-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with bergen-caravan-as
    # client: bergenkommune
    else if (req.http.x-finn-apikey == "f4MX9BgIKabzvMnH") {
      std.log("vcs-key: client__bergenkommune");
      set req.http.x-client = "bergenkommune";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__bergenkommune_urldenied");
      std.log("TRACE: Valid client bergenkommune does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with bergenkommune
    # client: bergen-marinesenter
    else if (req.http.x-finn-apikey == "LJQ7emJQ0l6aUVZ2") {
      std.log("vcs-key: client__bergen-marinesenter");
      set req.http.x-client = "bergen-marinesenter";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__bergen-marinesenter_urldenied");
      std.log("TRACE: Valid client bergen-marinesenter does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with bergen-marinesenter
    # client: bergensgruppen-as
    else if (req.http.x-finn-apikey == "3AqQCCEqkmnXVUNH") {
      std.log("vcs-key: client__bergensgruppen-as");
      set req.http.x-client = "bergensgruppen-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__bergensgruppen-as_urldenied");
      std.log("TRACE: Valid client bergensgruppen-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with bergensgruppen-as
    # client: berge-sag-trelast
    else if (req.http.x-finn-apikey == "KCEtp0gerN9w1rkc") {
      std.log("vcs-key: client__berge-sag-trelast");
      set req.http.x-client = "berge-sag-trelast";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__berge-sag-trelast_urldenied");
      std.log("TRACE: Valid client berge-sag-trelast does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with berge-sag-trelast
    # client: bertel-o-steen-as
    else if (req.http.x-finn-apikey == "UI6RKdB9zydcLNXy") {
      std.log("vcs-key: client__bertel-o-steen-as");
      set req.http.x-client = "bertel-o-steen-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__bertel-o-steen-as_urldenied");
      std.log("TRACE: Valid client bertel-o-steen-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with bertel-o-steen-as
    # client: bertel-o-steen-molde
    else if (req.http.x-finn-apikey == "JRxvnuCCDNnDfKHs") {
      std.log("vcs-key: client__bertel-o-steen-molde");
      set req.http.x-client = "bertel-o-steen-molde";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__bertel-o-steen-molde_urldenied");
      std.log("TRACE: Valid client bertel-o-steen-molde does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with bertel-o-steen-molde
    # client: bertel-o-steen-vare-last-buss-as
    else if (req.http.x-finn-apikey == "hHXH8liilkW3ssjC") {
      std.log("vcs-key: client__bertel-o-steen-vare-last-buss-as");
      set req.http.x-client = "bertel-o-steen-vare-last-buss-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/bus.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/bus.*" || req.url ~ "^/iad/ad/model/truck.*" || req.url ~ "^/iad/ad/truck.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/bus.*" || req.url ~ "^/iad/search/truck.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__bertel-o-steen-vare-last-buss-as_urldenied");
      std.log("TRACE: Valid client bertel-o-steen-vare-last-buss-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with bertel-o-steen-vare-last-buss-as
    # client: best-eiendomsmegler
    else if (req.http.x-finn-apikey == "k5xvu03paKop0pcc") {
      std.log("vcs-key: client__best-eiendomsmegler");
      set req.http.x-client = "best-eiendomsmegler";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__best-eiendomsmegler_urldenied");
      std.log("TRACE: Valid client best-eiendomsmegler does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with best-eiendomsmegler
    # client: bilbutikk1-as
    else if (req.http.x-finn-apikey == "rV9IhEIR5SKOdQTf") {
      std.log("vcs-key: client__bilbutikk1-as");
      set req.http.x-client = "bilbutikk1-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__bilbutikk1-as_urldenied");
      std.log("TRACE: Valid client bilbutikk1-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with bilbutikk1-as
    # client: bilbutikk--as
    else if (req.http.x-finn-apikey == "SC8fAUUx6cYVDKhF") {
      std.log("vcs-key: client__bilbutikk--as");
      set req.http.x-client = "bilbutikk--as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/mc.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/mc.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/(mc|atv|snowmobile|moped-scooter).*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__bilbutikk--as_urldenied");
      std.log("TRACE: Valid client bilbutikk--as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with bilbutikk--as
    # client: bilbutikken-as
    else if (req.http.x-finn-apikey == "ZLy7JeTd5wxMpHuO") {
      std.log("vcs-key: client__bilbutikken-as");
      set req.http.x-client = "bilbutikken-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__bilbutikken-as_urldenied");
      std.log("TRACE: Valid client bilbutikken-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with bilbutikken-as
    # client: bilbyen-molde-partnergruppe
    else if (req.http.x-finn-apikey == "Av6gcn3FXL1RpEXm") {
      std.log("vcs-key: client__bilbyen-molde-partnergruppe");
      set req.http.x-client = "bilbyen-molde-partnergruppe";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__bilbyen-molde-partnergruppe_urldenied");
      std.log("TRACE: Valid client bilbyen-molde-partnergruppe does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with bilbyen-molde-partnergruppe
    # client: bilco-honefoss
    else if (req.http.x-finn-apikey == "hNnjpNEQKla4S7Z3") {
      std.log("vcs-key: client__bilco-honefoss");
      set req.http.x-client = "bilco-honefoss";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__bilco-honefoss_urldenied");
      std.log("TRACE: Valid client bilco-honefoss does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with bilco-honefoss
    # client: bilfinger-industrial-services-norway-as
    else if (req.http.x-finn-apikey == "KLKL5EL6TAlffmRt") {
      std.log("vcs-key: client__bilfinger-industrial-services-norway-as");
      set req.http.x-client = "bilfinger-industrial-services-norway-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__bilfinger-industrial-services-norway-as_urldenied");
      std.log("TRACE: Valid client bilfinger-industrial-services-norway-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with bilfinger-industrial-services-norway-as
    # client: bilhallen-ulsteinvik-as
    else if (req.http.x-finn-apikey == "6pcsmNLoVZ2b11sQ") {
      std.log("vcs-key: client__bilhallen-ulsteinvik-as");
      set req.http.x-client = "bilhallen-ulsteinvik-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__bilhallen-ulsteinvik-as_urldenied");
      std.log("TRACE: Valid client bilhallen-ulsteinvik-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with bilhallen-ulsteinvik-as
    # client: Bilia
    else if (req.http.x-finn-apikey == "EUTXmxdscg8WasdM") {
      std.log("vcs-key: client__Bilia");
      set req.http.x-client = "Bilia";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__Bilia_urldenied");
      std.log("TRACE: Valid client Bilia does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with Bilia
    # client: bil-i-nord-as-svolvaer
    else if (req.http.x-finn-apikey == "cmLoW8DzbNfackXK") {
      std.log("vcs-key: client__bil-i-nord-as-svolvaer");
      set req.http.x-client = "bil-i-nord-as-svolvaer";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/mc.*" || req.url ~ "^/iad/ad/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/mc.*" || req.url ~ "^/iad/ad/model/(mobile-home|caravan).*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/(mc|atv|snowmobile|moped-scooter).*" || req.url ~ "^/iad/search/(mobile-home|caravan).*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__bil-i-nord-as-svolvaer_urldenied");
      std.log("TRACE: Valid client bil-i-nord-as-svolvaer does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with bil-i-nord-as-svolvaer
    # client: billa
    else if (req.http.x-finn-apikey == "oByTfCbsdpa1q5kM") {
      std.log("vcs-key: client__billa");
      set req.http.x-client = "billa";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__billa_urldenied");
      std.log("TRACE: Valid client billa does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with billa
    # client: bilpaviljongen-as
    else if (req.http.x-finn-apikey == "22dpGTe0HqjlmbeN") {
      std.log("vcs-key: client__bilpaviljongen-as");
      set req.http.x-client = "bilpaviljongen-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__bilpaviljongen-as_urldenied");
      std.log("TRACE: Valid client bilpaviljongen-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with bilpaviljongen-as
    # client: bilsalg-kokstad
    else if (req.http.x-finn-apikey == "aMhkToaWSBqEij2b") {
      std.log("vcs-key: client__bilsalg-kokstad");
      set req.http.x-client = "bilsalg-kokstad";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__bilsalg-kokstad_urldenied");
      std.log("TRACE: Valid client bilsalg-kokstad does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with bilsalg-kokstad
    # client: bilsalongen-skien
    else if (req.http.x-finn-apikey == "9ZzPxpy001BGQSTZ") {
      std.log("vcs-key: client__bilsalongen-skien");
      set req.http.x-client = "bilsalongen-skien";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__bilsalongen-skien_urldenied");
      std.log("TRACE: Valid client bilsalongen-skien does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with bilsalongen-skien
    # client: bilsenteret-stavanger
    else if (req.http.x-finn-apikey == "fBpbZydIzPmqZq4u") {
      std.log("vcs-key: client__bilsenteret-stavanger");
      set req.http.x-client = "bilsenteret-stavanger";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__bilsenteret-stavanger_urldenied");
      std.log("TRACE: Valid client bilsenteret-stavanger does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with bilsenteret-stavanger
    # client: bilsenteret-stavanger-as
    else if (req.http.x-finn-apikey == "EtpJ5m0wsuHp83Oy") {
      std.log("vcs-key: client__bilsenteret-stavanger-as");
      set req.http.x-client = "bilsenteret-stavanger-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__bilsenteret-stavanger-as_urldenied");
      std.log("TRACE: Valid client bilsenteret-stavanger-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with bilsenteret-stavanger-as
    # client: bil-service-personbiler
    else if (req.http.x-finn-apikey == "A5yegueXKsvRPPnR") {
      std.log("vcs-key: client__bil-service-personbiler");
      set req.http.x-client = "bil-service-personbiler";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__bil-service-personbiler_urldenied");
      std.log("TRACE: Valid client bil-service-personbiler does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with bil-service-personbiler
    # client: biltrend
    else if (req.http.x-finn-apikey == "HdPPpedUFcg77kp8") {
      std.log("vcs-key: client__biltrend");
      set req.http.x-client = "biltrend";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/mc.*" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/mc.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/(mc|atv|snowmobile|moped-scooter).*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__biltrend_urldenied");
      std.log("TRACE: Valid client biltrend does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with biltrend
    # client: birger-n-haug-partnergruppe
    else if (req.http.x-finn-apikey == "mdMO5DsDs5QSUTZA") {
      std.log("vcs-key: client__birger-n-haug-partnergruppe");
      set req.http.x-client = "birger-n-haug-partnergruppe";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/bap.*" || req.url ~ "^/iad/ad/bap-webstore.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/bap.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/bap.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__birger-n-haug-partnergruppe_urldenied");
      std.log("TRACE: Valid client birger-n-haug-partnergruppe does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with birger-n-haug-partnergruppe
    # client: bjerke-eiendom-as
    else if (req.http.x-finn-apikey == "oekZY2oZC3DPFmD8") {
      std.log("vcs-key: client__bjerke-eiendom-as");
      set req.http.x-client = "bjerke-eiendom-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__bjerke-eiendom-as_urldenied");
      std.log("TRACE: Valid client bjerke-eiendom-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with bjerke-eiendom-as
    # client: bjoergvin-eiendomsmegling-as
    else if (req.http.x-finn-apikey == "4T9X69zD1nwWggMe") {
      std.log("vcs-key: client__bjoergvin-eiendomsmegling-as");
      set req.http.x-client = "bjoergvin-eiendomsmegling-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__bjoergvin-eiendomsmegling-as_urldenied");
      std.log("TRACE: Valid client bjoergvin-eiendomsmegling-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with bjoergvin-eiendomsmegling-as
    # client: blink-hus
    else if (req.http.x-finn-apikey == "DscoPofLWcIBq2mU") {
      std.log("vcs-key: client__blink-hus");
      set req.http.x-client = "blink-hus";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__blink-hus_urldenied");
      std.log("TRACE: Valid client blink-hus does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with blink-hus
    # client: blink-hus--berge-sag-eiendom
    else if (req.http.x-finn-apikey == "KXLvrBfJM3GIDcc1") {
      std.log("vcs-key: client__blink-hus--berge-sag-eiendom");
      set req.http.x-client = "blink-hus--berge-sag-eiendom";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__blink-hus--berge-sag-eiendom_urldenied");
      std.log("TRACE: Valid client blink-hus--berge-sag-eiendom does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with blink-hus--berge-sag-eiendom
    # client: blocket
    else if (req.http.x-finn-apikey == "gTi9d23couKwtLDf") {
      std.log("vcs-key: client__blocket");
      set req.http.x-client = "blocket";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/promoted/.*" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__blocket_urldenied");
      std.log("TRACE: Valid client blocket does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with blocket
    # client: bn-bank-asa
    else if (req.http.x-finn-apikey == "1aVlPgpB6detIylX") {
      std.log("vcs-key: client__bn-bank-asa");
      set req.http.x-client = "bn-bank-asa";
    if(((req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/mc$" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-sale/description" || req.url ~ "^/iad/search/caravan/description" || req.url ~ "^/iad/search/car-norway/description" || req.url ~ "^/iad/search/mc/description" || req.url ~ "^/iad/search/mobile-home/description" || req.url ~ "^/tp[/]?$" || req.url ~ "^/tp/ad/boat-.*" || req.url ~ "^/tp/ad/car-.*" || req.url ~ "^/tp/ad/caravan.*" || req.url ~ "^/tp/ad/\d+/?$" || req.url ~ "^/tp/ad/mc.*" || req.url ~ "^/tp/ad/mobile-home.*" || req.url ~ "^/tp/search/boat-sale" || req.url ~ "^/tp/search/caravan" || req.url ~ "^/tp/search/car-norway" || req.url ~ "^/tp/search/mc" || req.url ~ "^/tp/search/mobile-home") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__bn-bank-asa_urldenied");
      std.log("TRACE: Valid client bn-bank-asa does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with bn-bank-asa
    # client: bn-bolig-as
    else if (req.http.x-finn-apikey == "j24Zf3MHmDcx6Lsn") {
      std.log("vcs-key: client__bn-bolig-as");
      set req.http.x-client = "bn-bolig-as";
    if(((req.url ~ "^/classified-product-commerce/.*" || req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*" || req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(DELETE|GET|HEAD|POST|PUT)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__bn-bolig-as_urldenied");
      std.log("TRACE: Valid client bn-bolig-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with bn-bolig-as
    # client: boa-eiendomsmegling-moss-as
    else if (req.http.x-finn-apikey == "GBF2nycHIp5O3NKW") {
      std.log("vcs-key: client__boa-eiendomsmegling-moss-as");
      set req.http.x-client = "boa-eiendomsmegling-moss-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__boa-eiendomsmegling-moss-as_urldenied");
      std.log("TRACE: Valid client boa-eiendomsmegling-moss-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with boa-eiendomsmegling-moss-as
    # client: bobilnord-fauske
    else if (req.http.x-finn-apikey == "tKyFCta0s39dZKSa") {
      std.log("vcs-key: client__bobilnord-fauske");
      set req.http.x-client = "bobilnord-fauske";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/(mobile-home|caravan).*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/(mobile-home|caravan).*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__bobilnord-fauske_urldenied");
      std.log("TRACE: Valid client bobilnord-fauske does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with bobilnord-fauske
    # client: bobilnord-troms
    else if (req.http.x-finn-apikey == "MfEtheTwRmmCP9Cf") {
      std.log("vcs-key: client__bobilnord-troms");
      set req.http.x-client = "bobilnord-troms";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/bap.*" || req.url ~ "^/iad/ad/bap-webstore.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/bap.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/bap.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__bobilnord-troms_urldenied");
      std.log("TRACE: Valid client bobilnord-troms does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with bobilnord-troms
    # client: bogstadveien-franchise-as
    else if (req.http.x-finn-apikey == "tSO9OaXTcB0b0QX8") {
      std.log("vcs-key: client__bogstadveien-franchise-as");
      set req.http.x-client = "bogstadveien-franchise-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__bogstadveien-franchise-as_urldenied");
      std.log("TRACE: Valid client bogstadveien-franchise-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with bogstadveien-franchise-as
    # client: boli-eiendomsmegling-as
    else if (req.http.x-finn-apikey == "tFm7aLnwBVOjTEx7") {
      std.log("vcs-key: client__boli-eiendomsmegling-as");
      set req.http.x-client = "boli-eiendomsmegling-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__boli-eiendomsmegling-as_urldenied");
      std.log("TRACE: Valid client boli-eiendomsmegling-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with boli-eiendomsmegling-as
    # client: boligbygg-moere-as
    else if (req.http.x-finn-apikey == "knZwpAoRKlcCnFqV") {
      std.log("vcs-key: client__boligbygg-moere-as");
      set req.http.x-client = "boligbygg-moere-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__boligbygg-moere-as_urldenied");
      std.log("TRACE: Valid client boligbygg-moere-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with boligbygg-moere-as
    # client: boligpartner-as
    else if (req.http.x-finn-apikey == "AjWGXCPt7EBbiRf5") {
      std.log("vcs-key: client__boligpartner-as");
      set req.http.x-client = "boligpartner-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__boligpartner-as_urldenied");
      std.log("TRACE: Valid client boligpartner-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with boligpartner-as
    # client: boligpartner---gjoevik
    else if (req.http.x-finn-apikey == "B8NRXK6ID88rnq7T") {
      std.log("vcs-key: client__boligpartner---gjoevik");
      set req.http.x-client = "boligpartner---gjoevik";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__boligpartner---gjoevik_urldenied");
      std.log("TRACE: Valid client boligpartner---gjoevik does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with boligpartner---gjoevik
    # client: boost-ai-as
    else if (req.http.x-finn-apikey == "7lj9bzYWFOtgf4xK") {
      std.log("vcs-key: client__boost-ai-as");
      set req.http.x-client = "boost-ai-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__boost-ai-as_urldenied");
      std.log("TRACE: Valid client boost-ai-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with boost-ai-as
    # client: borg-eiendomsmegling
    else if (req.http.x-finn-apikey == "DrgNLpWwTE5zS8WN") {
      std.log("vcs-key: client__borg-eiendomsmegling");
      set req.http.x-client = "borg-eiendomsmegling";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__borg-eiendomsmegling_urldenied");
      std.log("TRACE: Valid client borg-eiendomsmegling does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with borg-eiendomsmegling
    # client: brankos-auto-as
    else if (req.http.x-finn-apikey == "jmNaI2dNSHvG18FZ") {
      std.log("vcs-key: client__brankos-auto-as");
      set req.http.x-client = "brankos-auto-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__brankos-auto-as_urldenied");
      std.log("TRACE: Valid client brankos-auto-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with brankos-auto-as
    # client: bravida-norge-as
    else if (req.http.x-finn-apikey == "yOpBoIeYvf6YTS3j") {
      std.log("vcs-key: client__bravida-norge-as");
      set req.http.x-client = "bravida-norge-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__bravida-norge-as_urldenied");
      std.log("TRACE: Valid client bravida-norge-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with bravida-norge-as
    # client: brennes-auto-as
    else if (req.http.x-finn-apikey == "gc7WIQPdV1heKNal") {
      std.log("vcs-key: client__brennes-auto-as");
      set req.http.x-client = "brennes-auto-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__brennes-auto-as_urldenied");
      std.log("TRACE: Valid client brennes-auto-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with brennes-auto-as
    # client: broom-bil-as
    else if (req.http.x-finn-apikey == "WGX8Vvg1frqNa6hb") {
      std.log("vcs-key: client__broom-bil-as");
      set req.http.x-client = "broom-bil-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__broom-bil-as_urldenied");
      std.log("TRACE: Valid client broom-bil-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with broom-bil-as
    # client: bruktbil-sunnmore-partnergruppe
    else if (req.http.x-finn-apikey == "MmqwPhfsdGKR180L") {
      std.log("vcs-key: client__bruktbil-sunnmore-partnergruppe");
      set req.http.x-client = "bruktbil-sunnmore-partnergruppe";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__bruktbil-sunnmore-partnergruppe_urldenied");
      std.log("TRACE: Valid client bruktbil-sunnmore-partnergruppe does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with bruktbil-sunnmore-partnergruppe
    # client: bryn-eiendom
    else if (req.http.x-finn-apikey == "c57ht8qEqArfChlB") {
      std.log("vcs-key: client__bryn-eiendom");
      set req.http.x-client = "bryn-eiendom";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__bryn-eiendom_urldenied");
      std.log("TRACE: Valid client bryn-eiendom does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with bryn-eiendom
    # client: budrunder-partnergruppe
    else if (req.http.x-finn-apikey == "Fab2GmNxKl8HakJR") {
      std.log("vcs-key: client__budrunder-partnergruppe");
      set req.http.x-client = "budrunder-partnergruppe";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__budrunder-partnergruppe_urldenied");
      std.log("TRACE: Valid client budrunder-partnergruppe does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with budrunder-partnergruppe
    # client: buen-gruppen-as
    else if (req.http.x-finn-apikey == "7CarSoMB6rBBHQrI") {
      std.log("vcs-key: client__buen-gruppen-as");
      set req.http.x-client = "buen-gruppen-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__buen-gruppen-as_urldenied");
      std.log("TRACE: Valid client buen-gruppen-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with buen-gruppen-as
    # client: buholmen-baat-as
    else if (req.http.x-finn-apikey == "mU5nlo1cANHoRLbc") {
      std.log("vcs-key: client__buholmen-baat-as");
      set req.http.x-client = "buholmen-baat-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__buholmen-baat-as_urldenied");
      std.log("TRACE: Valid client buholmen-baat-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with buholmen-baat-as
    # client: buskerud-naeringsmegling-as
    else if (req.http.x-finn-apikey == "5uROwSALHA34THSW") {
      std.log("vcs-key: client__buskerud-naeringsmegling-as");
      set req.http.x-client = "buskerud-naeringsmegling-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__buskerud-naeringsmegling-as_urldenied");
      std.log("TRACE: Valid client buskerud-naeringsmegling-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with buskerud-naeringsmegling-as
    # client: bybroen-bolig-as
    else if (req.http.x-finn-apikey == "hhkQ6ZbhR6q1Vm42") {
      std.log("vcs-key: client__bybroen-bolig-as");
      set req.http.x-client = "bybroen-bolig-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__bybroen-bolig-as_urldenied");
      std.log("TRACE: Valid client bybroen-bolig-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with bybroen-bolig-as
    # client: capgemini-norge-as
    else if (req.http.x-finn-apikey == "bVsh5uY5GyUAk70b") {
      std.log("vcs-key: client__capgemini-norge-as");
      set req.http.x-client = "capgemini-norge-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__capgemini-norge-as_urldenied");
      std.log("TRACE: Valid client capgemini-norge-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with capgemini-norge-as
    # client: capus-as
    else if (req.http.x-finn-apikey == "qaeaEeqVdwWawP38") {
      std.log("vcs-key: client__capus-as");
      set req.http.x-client = "capus-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__capus-as_urldenied");
      std.log("TRACE: Valid client capus-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with capus-as
    # client: cbp-as
    else if (req.http.x-finn-apikey == "TyzrvWb2NS3nsMBO") {
      std.log("vcs-key: client__cbp-as");
      set req.http.x-client = "cbp-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/mc.*" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/mc.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/(mc|atv|snowmobile|moped-scooter).*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__cbp-as_urldenied");
      std.log("TRACE: Valid client cbp-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with cbp-as
    # client: centric-finance-professionals-as
    else if (req.http.x-finn-apikey == "wXjAR3AnLCvcBZFa") {
      std.log("vcs-key: client__centric-finance-professionals-as");
      set req.http.x-client = "centric-finance-professionals-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__centric-finance-professionals-as_urldenied");
      std.log("TRACE: Valid client centric-finance-professionals-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with centric-finance-professionals-as
    # client: centric-it-professionals-as
    else if (req.http.x-finn-apikey == "hAH8hsjhLwvAxXU6") {
      std.log("vcs-key: client__centric-it-professionals-as");
      set req.http.x-client = "centric-it-professionals-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__centric-it-professionals-as_urldenied");
      std.log("TRACE: Valid client centric-it-professionals-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with centric-it-professionals-as
    # client: cgi-norge-as
    else if (req.http.x-finn-apikey == "Nz5pFZdTXqq2B9oI") {
      std.log("vcs-key: client__cgi-norge-as");
      set req.http.x-client = "cgi-norge-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__cgi-norge-as_urldenied");
      std.log("TRACE: Valid client cgi-norge-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with cgi-norge-as
    # client: ciber-norge-as
    else if (req.http.x-finn-apikey == "xM3QbchLulPSuYrb") {
      std.log("vcs-key: client__ciber-norge-as");
      set req.http.x-client = "ciber-norge-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__ciber-norge-as_urldenied");
      std.log("TRACE: Valid client ciber-norge-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with ciber-norge-as
    # client: coca-cola-european-partners
    else if (req.http.x-finn-apikey == "AVH8RORr5kjTfSqp") {
      std.log("vcs-key: client__coca-cola-european-partners");
      set req.http.x-client = "coca-cola-european-partners";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__coca-cola-european-partners_urldenied");
      std.log("TRACE: Valid client coca-cola-european-partners does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with coca-cola-european-partners
    # client: conduct-as
    else if (req.http.x-finn-apikey == "2uawrEIuLwHqjS53") {
      std.log("vcs-key: client__conduct-as");
      set req.http.x-client = "conduct-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__conduct-as_urldenied");
      std.log("TRACE: Valid client conduct-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with conduct-as
    # client: coop-norge-sa
    else if (req.http.x-finn-apikey == "DJLC8lX8Q52S3klb") {
      std.log("vcs-key: client__coop-norge-sa");
      set req.http.x-client = "coop-norge-sa";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__coop-norge-sa_urldenied");
      std.log("TRACE: Valid client coop-norge-sa does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with coop-norge-sa
    # client: cowi-as
    else if (req.http.x-finn-apikey == "iWECXhVfnQkWJyhd") {
      std.log("vcs-key: client__cowi-as");
      set req.http.x-client = "cowi-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__cowi-as_urldenied");
      std.log("TRACE: Valid client cowi-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with cowi-as
    # client: cramo-as
    else if (req.http.x-finn-apikey == "QqVJKmIfmPzQIcRl") {
      std.log("vcs-key: client__cramo-as");
      set req.http.x-client = "cramo-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__cramo-as_urldenied");
      std.log("TRACE: Valid client cramo-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with cramo-as
    # client: cruit-as
    else if (req.http.x-finn-apikey == "yCaqFwTQVW1wqhIa") {
      std.log("vcs-key: client__cruit-as");
      set req.http.x-client = "cruit-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__cruit-as_urldenied");
      std.log("TRACE: Valid client cruit-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with cruit-as
    # client: cyprus-living
    else if (req.http.x-finn-apikey == "8GDLFPDveLuIYFgf") {
      std.log("vcs-key: client__cyprus-living");
      set req.http.x-client = "cyprus-living";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__cyprus-living_urldenied");
      std.log("TRACE: Valid client cyprus-living does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with cyprus-living
    # client: dahles-auto
    else if (req.http.x-finn-apikey == "wC627kWw9GYb3pUC") {
      std.log("vcs-key: client__dahles-auto");
      set req.http.x-client = "dahles-auto";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__dahles-auto_urldenied");
      std.log("TRACE: Valid client dahles-auto does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with dahles-auto
    # client: dalane-bil-as
    else if (req.http.x-finn-apikey == "Ix6RVU7dj1DCiwhP") {
      std.log("vcs-key: client__dalane-bil-as");
      set req.http.x-client = "dalane-bil-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__dalane-bil-as_urldenied");
      std.log("TRACE: Valid client dalane-bil-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with dalane-bil-as
    # client: delego
    else if (req.http.x-finn-apikey == "9D6TYIU9LRxIgTsO") {
      std.log("vcs-key: client__delego");
      set req.http.x-client = "delego";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__delego_urldenied");
      std.log("TRACE: Valid client delego does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with delego
    # client: deleks-deuchland-gmbh
    else if (req.http.x-finn-apikey == "3t3XR2mkEfhDS2LZ") {
      std.log("vcs-key: client__deleks-deuchland-gmbh");
      set req.http.x-client = "deleks-deuchland-gmbh";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/bap.*" || req.url ~ "^/iad/ad/bap-webstore.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/bap.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/bap.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__deleks-deuchland-gmbh_urldenied");
      std.log("TRACE: Valid client deleks-deuchland-gmbh does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with deleks-deuchland-gmbh
    # client: deloitte-as
    else if (req.http.x-finn-apikey == "byeNqdQbCWTRABph") {
      std.log("vcs-key: client__deloitte-as");
      set req.http.x-client = "deloitte-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__deloitte-as_urldenied");
      std.log("TRACE: Valid client deloitte-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with deloitte-as
    # client: departementene
    else if (req.http.x-finn-apikey == "EIq3gDyS17Fifg6Q") {
      std.log("vcs-key: client__departementene");
      set req.http.x-client = "departementene";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__departementene_urldenied");
      std.log("TRACE: Valid client departementene does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with departementene
    # client: dfind-as
    else if (req.http.x-finn-apikey == "Kjus0rYoTyKKVc8T") {
      std.log("vcs-key: client__dfind-as");
      set req.http.x-client = "dfind-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__dfind-as_urldenied");
      std.log("TRACE: Valid client dfind-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with dfind-as
    # client: din-eiendom-as
    else if (req.http.x-finn-apikey == "XsZjx99pI79w0maI") {
      std.log("vcs-key: client__din-eiendom-as");
      set req.http.x-client = "din-eiendom-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__din-eiendom-as_urldenied");
      std.log("TRACE: Valid client din-eiendom-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with din-eiendom-as
    # client: dnb-eiendom
    else if (req.http.x-finn-apikey == "yP3Oyw8GJ0jA7PNm") {
      std.log("vcs-key: client__dnb-eiendom");
      set req.http.x-client = "dnb-eiendom";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__dnb-eiendom_urldenied");
      std.log("TRACE: Valid client dnb-eiendom does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with dnb-eiendom
    # client: dnb-eiendom-as
    else if (req.http.x-finn-apikey == "80ZZqkbFJW99JHnf") {
      std.log("vcs-key: client__dnb-eiendom-as");
      set req.http.x-client = "dnb-eiendom-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__dnb-eiendom-as_urldenied");
      std.log("TRACE: Valid client dnb-eiendom-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with dnb-eiendom-as
    # client: dnb-eiendom-test
    else if (req.http.x-finn-apikey == "VVyyUnVPCXQJ81Zi") {
      std.log("vcs-key: client__dnb-eiendom-test");
      set req.http.x-client = "dnb-eiendom-test";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__dnb-eiendom-test_urldenied");
      std.log("TRACE: Valid client dnb-eiendom-test does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with dnb-eiendom-test
    # client: dnbleietaker
    else if (req.http.x-finn-apikey == "k3yF2LnLCyEYx1Hp") {
      std.log("vcs-key: client__dnbleietaker");
      set req.http.x-client = "dnbleietaker";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__dnbleietaker_urldenied");
      std.log("TRACE: Valid client dnbleietaker does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with dnbleietaker
    # client: drammen-kommune
    else if (req.http.x-finn-apikey == "lfCpjG7VVv8zU092") {
      std.log("vcs-key: client__drammen-kommune");
      set req.http.x-client = "drammen-kommune";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__drammen-kommune_urldenied");
      std.log("TRACE: Valid client drammen-kommune does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with drammen-kommune
    # client: drive-adventures-as
    else if (req.http.x-finn-apikey == "bpUN3XGpcP9nHtiY") {
      std.log("vcs-key: client__drive-adventures-as");
      set req.http.x-client = "drive-adventures-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__drive-adventures-as_urldenied");
      std.log("TRACE: Valid client drive-adventures-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with drive-adventures-as
    # client: drommebil-as
    else if (req.http.x-finn-apikey == "RuHt7Kcdw2vFJKHv") {
      std.log("vcs-key: client__drommebil-as");
      set req.http.x-client = "drommebil-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__drommebil-as_urldenied");
      std.log("TRACE: Valid client drommebil-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with drommebil-as
    # client: drs-direct-response-services-as
    else if (req.http.x-finn-apikey == "VdQHGC6bKN05aJmi") {
      std.log("vcs-key: client__drs-direct-response-services-as");
      set req.http.x-client = "drs-direct-response-services-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__drs-direct-response-services-as_urldenied");
      std.log("TRACE: Valid client drs-direct-response-services-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with drs-direct-response-services-as
    # client: dynamic-people-as
    else if (req.http.x-finn-apikey == "CRSU8o1nJXnH5jpa") {
      std.log("vcs-key: client__dynamic-people-as");
      set req.http.x-client = "dynamic-people-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__dynamic-people-as_urldenied");
      std.log("TRACE: Valid client dynamic-people-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with dynamic-people-as
    # client: e24
    else if (req.http.x-finn-apikey == "NQCgjTzkt729E7hL") {
      std.log("vcs-key: client__e24");
      set req.http.x-client = "e24";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/promoted/.*" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__e24_urldenied");
      std.log("TRACE: Valid client e24 does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with e24
    # client: easy-ad
    else if (req.http.x-finn-apikey == "9stAygsFIC9trt96") {
      std.log("vcs-key: client__easy-ad");
      set req.http.x-client = "easy-ad";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__easy-ad_urldenied");
      std.log("TRACE: Valid client easy-ad does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with easy-ad
    # client: easy-ad-distribution
    else if (req.http.x-finn-apikey == "RBhY1YMVW0hVlh9R") {
      std.log("vcs-key: client__easy-ad-distribution");
      set req.http.x-client = "easy-ad-distribution";
    if(((req.url ~ "^/distribution/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__easy-ad-distribution_urldenied");
      std.log("TRACE: Valid client easy-ad-distribution does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with easy-ad-distribution
    # client: ec-dahls-eiendom
    else if (req.http.x-finn-apikey == "FScD1bclvBF5DHqE") {
      std.log("vcs-key: client__ec-dahls-eiendom");
      set req.http.x-client = "ec-dahls-eiendom";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__ec-dahls-eiendom_urldenied");
      std.log("TRACE: Valid client ec-dahls-eiendom does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with ec-dahls-eiendom
    # client: ecit-as
    else if (req.http.x-finn-apikey == "F0MsiwAzKxPWBMQY") {
      std.log("vcs-key: client__ecit-as");
      set req.http.x-client = "ecit-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__ecit-as_urldenied");
      std.log("TRACE: Valid client ecit-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with ecit-as
    # client: ecn
    else if (req.http.x-finn-apikey == "9kWS1S4l34dClkvo") {
      std.log("vcs-key: client__ecn");
      set req.http.x-client = "ecn";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__ecn_urldenied");
      std.log("TRACE: Valid client ecn does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with ecn
    # client: eic-as
    else if (req.http.x-finn-apikey == "pfS1qdpn6QtX3ILM") {
      std.log("vcs-key: client__eic-as");
      set req.http.x-client = "eic-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__eic-as_urldenied");
      std.log("TRACE: Valid client eic-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with eic-as
    # client: eie-franchise-as
    else if (req.http.x-finn-apikey == "ckNZef4l39Rsbhnk") {
      std.log("vcs-key: client__eie-franchise-as");
      set req.http.x-client = "eie-franchise-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__eie-franchise-as_urldenied");
      std.log("TRACE: Valid client eie-franchise-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with eie-franchise-as
    # client: eiendomshuset-malling--co
    else if (req.http.x-finn-apikey == "JR7MPl0USXt990gr") {
      std.log("vcs-key: client__eiendomshuset-malling--co");
      set req.http.x-client = "eiendomshuset-malling--co";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__eiendomshuset-malling--co_urldenied");
      std.log("TRACE: Valid client eiendomshuset-malling--co does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with eiendomshuset-malling--co
    # client: eiendomsmegler1
    else if (req.http.x-finn-apikey == "um1UMdcRcq3gFGWu") {
      std.log("vcs-key: client__eiendomsmegler1");
      set req.http.x-client = "eiendomsmegler1";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__eiendomsmegler1_urldenied");
      std.log("TRACE: Valid client eiendomsmegler1 does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with eiendomsmegler1
    # client: eiendomsmegler1-bennett
    else if (req.http.x-finn-apikey == "r2dsfDZJIDBNP4bk") {
      std.log("vcs-key: client__eiendomsmegler1-bennett");
      set req.http.x-client = "eiendomsmegler1-bennett";
    if(((req.url ~ "^/classified-product-commerce/.*" || req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") && req.method ~ "^(DELETE|GET|HEAD|POST|PUT)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__eiendomsmegler1-bennett_urldenied");
      std.log("TRACE: Valid client eiendomsmegler1-bennett does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with eiendomsmegler1-bennett
    # client: eiendomsmegler1-buskerudvestfold
    else if (req.http.x-finn-apikey == "wLwArTuBxwFc5yVm") {
      std.log("vcs-key: client__eiendomsmegler1-buskerudvestfold");
      set req.http.x-client = "eiendomsmegler1-buskerudvestfold";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__eiendomsmegler1-buskerudvestfold_urldenied");
      std.log("TRACE: Valid client eiendomsmegler1-buskerudvestfold does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with eiendomsmegler1-buskerudvestfold
    # client: eiendomsmegler1-haugesund
    else if (req.http.x-finn-apikey == "abEITEcDuFDcc1TZ") {
      std.log("vcs-key: client__eiendomsmegler1-haugesund");
      set req.http.x-client = "eiendomsmegler1-haugesund";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__eiendomsmegler1-haugesund_urldenied");
      std.log("TRACE: Valid client eiendomsmegler1-haugesund does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with eiendomsmegler1-haugesund
    # client: eiendomsmegler1-midtnorge
    else if (req.http.x-finn-apikey == "KZbFiToYJbij6Gi8") {
      std.log("vcs-key: client__eiendomsmegler1-midtnorge");
      set req.http.x-client = "eiendomsmegler1-midtnorge";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__eiendomsmegler1-midtnorge_urldenied");
      std.log("TRACE: Valid client eiendomsmegler1-midtnorge does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with eiendomsmegler1-midtnorge
    # client: eiendomsmegler1-partnergruppe
    else if (req.http.x-finn-apikey == "pP0xV73pDJfrPvvV") {
      std.log("vcs-key: client__eiendomsmegler1-partnergruppe");
      set req.http.x-client = "eiendomsmegler1-partnergruppe";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || req.url ~ "^/statistics/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__eiendomsmegler1-partnergruppe_urldenied");
      std.log("TRACE: Valid client eiendomsmegler1-partnergruppe does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with eiendomsmegler1-partnergruppe
    # client: eiendomsmegler1-sr-eiendom
    else if (req.http.x-finn-apikey == "aQ4c7zK9QqKbuCpQ") {
      std.log("vcs-key: client__eiendomsmegler1-sr-eiendom");
      set req.http.x-client = "eiendomsmegler1-sr-eiendom";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__eiendomsmegler1-sr-eiendom_urldenied");
      std.log("TRACE: Valid client eiendomsmegler1-sr-eiendom does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with eiendomsmegler1-sr-eiendom
    # client: eiendomsmegler-dahl-as
    else if (req.http.x-finn-apikey == "bhqgNATi5ebwAjEz") {
      std.log("vcs-key: client__eiendomsmegler-dahl-as");
      set req.http.x-client = "eiendomsmegler-dahl-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__eiendomsmegler-dahl-as_urldenied");
      std.log("TRACE: Valid client eiendomsmegler-dahl-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with eiendomsmegler-dahl-as
    # client: eiendomsmegler-krogsveen-as
    else if (req.http.x-finn-apikey == "QSbubzgEuRHXTH89") {
      std.log("vcs-key: client__eiendomsmegler-krogsveen-as");
      set req.http.x-client = "eiendomsmegler-krogsveen-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__eiendomsmegler-krogsveen-as_urldenied");
      std.log("TRACE: Valid client eiendomsmegler-krogsveen-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with eiendomsmegler-krogsveen-as
    # client: eiendomsmegler--naering-bergen
    else if (req.http.x-finn-apikey == "76774wsR5X4PRJWJ") {
      std.log("vcs-key: client__eiendomsmegler--naering-bergen");
      set req.http.x-client = "eiendomsmegler--naering-bergen";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__eiendomsmegler--naering-bergen_urldenied");
      std.log("TRACE: Valid client eiendomsmegler--naering-bergen does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with eiendomsmegler--naering-bergen
    # client: eiendomsmegler--ringerike-hadeland-as-mor
    else if (req.http.x-finn-apikey == "Q1MH6jUuxeH6IlSX") {
      std.log("vcs-key: client__eiendomsmegler--ringerike-hadeland-as-mor");
      set req.http.x-client = "eiendomsmegler--ringerike-hadeland-as-mor";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__eiendomsmegler--ringerike-hadeland-as-mor_urldenied");
      std.log("TRACE: Valid client eiendomsmegler--ringerike-hadeland-as-mor does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with eiendomsmegler--ringerike-hadeland-as-mor
    # client: eiendomsmegler-vest
    else if (req.http.x-finn-apikey == "Zyo8uQ5ovbqj3EUG") {
      std.log("vcs-key: client__eiendomsmegler-vest");
      set req.http.x-client = "eiendomsmegler-vest";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__eiendomsmegler-vest_urldenied");
      std.log("TRACE: Valid client eiendomsmegler-vest does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with eiendomsmegler-vest
    # client: eiendomsprofil
    else if (req.http.x-finn-apikey == "EBhoOpZYqFM4YIjy") {
      std.log("vcs-key: client__eiendomsprofil");
      set req.http.x-client = "eiendomsprofil";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/promoted/.*" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__eiendomsprofil_urldenied");
      std.log("TRACE: Valid client eiendomsprofil does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with eiendomsprofil
    # client: eiendomsverdi
    else if (req.http.x-finn-apikey == "rJDddszIy1V8WU5Z") {
      std.log("vcs-key: client__eiendomsverdi");
      set req.http.x-client = "eiendomsverdi";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__eiendomsverdi_urldenied");
      std.log("TRACE: Valid client eiendomsverdi does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with eiendomsverdi
    # client: eigedomsmekling-sogn-fjordane
    else if (req.http.x-finn-apikey == "rnsKzUXY2ZVUo0RO") {
      std.log("vcs-key: client__eigedomsmekling-sogn-fjordane");
      set req.http.x-client = "eigedomsmekling-sogn-fjordane";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__eigedomsmekling-sogn-fjordane_urldenied");
      std.log("TRACE: Valid client eigedomsmekling-sogn-fjordane does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with eigedomsmekling-sogn-fjordane
    # client: eigedomsmekling-sogn-og-fjordane-as
    else if (req.http.x-finn-apikey == "OeQcyDVZCG24la7R") {
      std.log("vcs-key: client__eigedomsmekling-sogn-og-fjordane-as");
      set req.http.x-client = "eigedomsmekling-sogn-og-fjordane-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__eigedomsmekling-sogn-og-fjordane-as_urldenied");
      std.log("TRACE: Valid client eigedomsmekling-sogn-og-fjordane-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with eigedomsmekling-sogn-og-fjordane-as
    # client: eika-kredittbank-as
    else if (req.http.x-finn-apikey == "vDpRiNFdeNnyvRTB") {
      std.log("vcs-key: client__eika-kredittbank-as");
      set req.http.x-client = "eika-kredittbank-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__eika-kredittbank-as_urldenied");
      std.log("TRACE: Valid client eika-kredittbank-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with eika-kredittbank-as
    # client: eik-senteret-midt-norge
    else if (req.http.x-finn-apikey == "FeIgtdl5Qwf4GyV7") {
      std.log("vcs-key: client__eik-senteret-midt-norge");
      set req.http.x-client = "eik-senteret-midt-norge";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/agriculture-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/agriculture-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/agriculture-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__eik-senteret-midt-norge_urldenied");
      std.log("TRACE: Valid client eik-senteret-midt-norge does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with eik-senteret-midt-norge
    # client: elkjoep-norge-as
    else if (req.http.x-finn-apikey == "w9KKYwpSstxaNklZ") {
      std.log("vcs-key: client__elkjoep-norge-as");
      set req.http.x-client = "elkjoep-norge-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__elkjoep-norge-as_urldenied");
      std.log("TRACE: Valid client elkjoep-norge-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with elkjoep-norge-as
    # client: entra-eiendom
    else if (req.http.x-finn-apikey == "y701XItelNexS7sU") {
      std.log("vcs-key: client__entra-eiendom");
      set req.http.x-client = "entra-eiendom";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__entra-eiendom_urldenied");
      std.log("TRACE: Valid client entra-eiendom does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with entra-eiendom
    # client: erik-arnesen-bryn-as
    else if (req.http.x-finn-apikey == "TRTThxlCqtYcB5F1") {
      std.log("vcs-key: client__erik-arnesen-bryn-as");
      set req.http.x-client = "erik-arnesen-bryn-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__erik-arnesen-bryn-as_urldenied");
      std.log("TRACE: Valid client erik-arnesen-bryn-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with erik-arnesen-bryn-as
    # client: essen-bil-as
    else if (req.http.x-finn-apikey == "x1XKCZ9N9hZ544TH") {
      std.log("vcs-key: client__essen-bil-as");
      set req.http.x-client = "essen-bil-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__essen-bil-as_urldenied");
      std.log("TRACE: Valid client essen-bil-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with essen-bil-as
    # client: estate-meglerne-meglerhuset-leinaes-as
    else if (req.http.x-finn-apikey == "5Wa1fjVXkVXP3N4F") {
      std.log("vcs-key: client__estate-meglerne-meglerhuset-leinaes-as");
      set req.http.x-client = "estate-meglerne-meglerhuset-leinaes-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__estate-meglerne-meglerhuset-leinaes-as_urldenied");
      std.log("TRACE: Valid client estate-meglerne-meglerhuset-leinaes-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with estate-meglerne-meglerhuset-leinaes-as
    # client: evry-norge-as
    else if (req.http.x-finn-apikey == "jAV9dO2mvKkhVL4J") {
      std.log("vcs-key: client__evry-norge-as");
      set req.http.x-client = "evry-norge-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__evry-norge-as_urldenied");
      std.log("TRACE: Valid client evry-norge-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with evry-norge-as
    # client: exbo-soerlandet-as
    else if (req.http.x-finn-apikey == "zq7I61egZk8xwopk") {
      std.log("vcs-key: client__exbo-soerlandet-as");
      set req.http.x-client = "exbo-soerlandet-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__exbo-soerlandet-as_urldenied");
      std.log("TRACE: Valid client exbo-soerlandet-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with exbo-soerlandet-as
    # client: experis-as
    else if (req.http.x-finn-apikey == "ljGwN4yVTFZNxqmW") {
      std.log("vcs-key: client__experis-as");
      set req.http.x-client = "experis-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__experis-as_urldenied");
      std.log("TRACE: Valid client experis-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with experis-as
    # client: ey
    else if (req.http.x-finn-apikey == "okwGu8D0iSPtIBms") {
      std.log("vcs-key: client__ey");
      set req.http.x-client = "ey";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__ey_urldenied");
      std.log("TRACE: Valid client ey does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with ey
    # client: eye-share-as
    else if (req.http.x-finn-apikey == "SYFFAXC09iTZzKwo") {
      std.log("vcs-key: client__eye-share-as");
      set req.http.x-client = "eye-share-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__eye-share-as_urldenied");
      std.log("TRACE: Valid client eye-share-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with eye-share-as
    # client: fabi
    else if (req.http.x-finn-apikey == "Cbi4JtTWA0HvhsZY") {
      std.log("vcs-key: client__fabi");
      set req.http.x-client = "fabi";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__fabi_urldenied");
      std.log("TRACE: Valid client fabi does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with fabi
    # client: fana-sparebank-eiendom
    else if (req.http.x-finn-apikey == "rPQ4ZlWwszetAklh") {
      std.log("vcs-key: client__fana-sparebank-eiendom");
      set req.http.x-client = "fana-sparebank-eiendom";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__fana-sparebank-eiendom_urldenied");
      std.log("TRACE: Valid client fana-sparebank-eiendom does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with fana-sparebank-eiendom
    # client: felleskjoepet-agri-sa
    else if (req.http.x-finn-apikey == "WZwyN85n5zqgGPPq") {
      std.log("vcs-key: client__felleskjoepet-agri-sa");
      set req.http.x-client = "felleskjoepet-agri-sa";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__felleskjoepet-agri-sa_urldenied");
      std.log("TRACE: Valid client felleskjoepet-agri-sa does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with felleskjoepet-agri-sa
    # client: feriebolig-utland
    else if (req.http.x-finn-apikey == "9dSTScaCVFzQfUrt") {
      std.log("vcs-key: client__feriebolig-utland");
      set req.http.x-client = "feriebolig-utland";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__feriebolig-utland_urldenied");
      std.log("TRACE: Valid client feriebolig-utland does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with feriebolig-utland
    # client: finance-people-as
    else if (req.http.x-finn-apikey == "CtDKxSG2cuQyrbKD") {
      std.log("vcs-key: client__finance-people-as");
      set req.http.x-client = "finance-people-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__finance-people-as_urldenied");
      std.log("TRACE: Valid client finance-people-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with finance-people-as
    # client: fine-biler-forus-as
    else if (req.http.x-finn-apikey == "p3gztPQa0JpRvwXz") {
      std.log("vcs-key: client__fine-biler-forus-as");
      set req.http.x-client = "fine-biler-forus-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__fine-biler-forus-as_urldenied");
      std.log("TRACE: Valid client fine-biler-forus-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with fine-biler-forus-as
    # client: finn-adswitch-konsept-og-prod-utvikling
    else if (req.http.x-finn-apikey == "aw4nvI8FLFhmRNak") {
      std.log("vcs-key: client__finn-adswitch-konsept-og-prod-utvikling");
      set req.http.x-client = "finn-adswitch-konsept-og-prod-utvikling";
    if(((req.url ~ "^/$" || req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/agriculture-.*" || req.url ~ "^/iad/ad/bap.*" || req.url ~ "^/iad/ad/bap-webstore.*" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/bus.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/construction.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/mc.*" || req.url ~ "^/iad/ad/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/agriculture-.*" || req.url ~ "^/iad/ad/model/bap.*" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/bus.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/construction.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/ad/model/mc.*" || req.url ~ "^/iad/ad/model/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/model/truck.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/ad/truck.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/agriculture-.*" || req.url ~ "^/iad/search/bap.*" || req.url ~ "^/iad/search/boat-.*" || req.url ~ "^/iad/search/bus.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/construction.*" || req.url ~ "^/iad/search/job-.*" || req.url ~ "^/iad/search/(mc|atv|snowmobile|moped-scooter).*" || req.url ~ "^/iad/search/(mobile-home|caravan).*" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/iad/search/truck.*" || req.url ~ "^/iad/search/van-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__finn-adswitch-konsept-og-prod-utvikling_urldenied");
      std.log("TRACE: Valid client finn-adswitch-konsept-og-prod-utvikling does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with finn-adswitch-konsept-og-prod-utvikling
    # client: finn-api-admin
    else if (req.http.x-finn-apikey == "dsjwNJKxml2Ez4Ha") {
      std.log("vcs-key: client__finn-api-admin");
      set req.http.x-client = "finn-api-admin";
    if(((req.url ~ ".*") && req.method ~ "^(DELETE|GET|HEAD|POST|PUT)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__finn-api-admin_urldenied");
      std.log("TRACE: Valid client finn-api-admin does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with finn-api-admin
    # client: finn-api-cache-purger
    else if (req.http.x-finn-apikey == "uaQLlWDCYDZVqh6v") {
      std.log("vcs-key: client__finn-api-cache-purger");
      set req.http.x-client = "finn-api-cache-purger";
    if(((req.url ~ ".*") && req.method ~ "^(GET|HEAD|PURGE)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__finn-api-cache-purger_urldenied");
      std.log("TRACE: Valid client finn-api-cache-purger does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with finn-api-cache-purger
    # client: finn-api-iad
    else if (req.http.x-finn-apikey == "xzmsZhDeNXEyCCbh") {
      std.log("vcs-key: client__finn-api-iad");
      set req.http.x-client = "finn-api-iad";
    if(((req.url ~ ".*") && req.method ~ "^(DELETE|GET|HEAD|POST|PUT)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__finn-api-iad_urldenied");
      std.log("TRACE: Valid client finn-api-iad does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with finn-api-iad
    # client: finn-apps
    else if (req.http.x-finn-apikey == "V9oo6khyU7qMktUF") {
      std.log("vcs-key: client__finn-apps");
      set req.http.x-client = "finn-apps";
    if(((req.url ~ ".*") && req.method ~ "^(DELETE|GET|HEAD|POST|PUT)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__finn-apps_urldenied");
      std.log("TRACE: Valid client finn-apps does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with finn-apps
    # client: finn-beta
    else if (req.http.x-finn-apikey == "uKn7poUsIACC8oby") {
      std.log("vcs-key: client__finn-beta");
      set req.http.x-client = "finn-beta";
    if(((req.url ~ ".*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__finn-beta_urldenied");
      std.log("TRACE: Valid client finn-beta does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with finn-beta
    # client: finn-candidate-profile
    else if (req.http.x-finn-apikey == "ingQfEy6eaXUUrFB") {
      std.log("vcs-key: client__finn-candidate-profile");
      set req.http.x-client = "finn-candidate-profile";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__finn-candidate-profile_urldenied");
      std.log("TRACE: Valid client finn-candidate-profile does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with finn-candidate-profile
    # client: finn-classified-review-management
    else if (req.http.x-finn-apikey == "9JciRCsTazqRDbFr") {
      std.log("vcs-key: client__finn-classified-review-management");
      set req.http.x-client = "finn-classified-review-management";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/agriculture-.*" || req.url ~ "^/iad/ad/bap.*" || req.url ~ "^/iad/ad/bap-webstore.*" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/bus.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/mc.*" || req.url ~ "^/iad/ad/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/agriculture-.*" || req.url ~ "^/iad/ad/model/bap.*" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/bus.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/mc.*" || req.url ~ "^/iad/ad/model/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/truck.*" || req.url ~ "^/iad/ad/truck.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/agriculture-.*" || req.url ~ "^/iad/search/bap.*" || req.url ~ "^/iad/search/boat-.*" || req.url ~ "^/iad/search/bus.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/(mc|atv|snowmobile|moped-scooter).*" || req.url ~ "^/iad/search/(mobile-home|caravan).*" || req.url ~ "^/iad/search/truck.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__finn-classified-review-management_urldenied");
      std.log("TRACE: Valid client finn-classified-review-management does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with finn-classified-review-management
    # client: finn-communication
    else if (req.http.x-finn-apikey == "sv7CKdSv6XQjOZ5V") {
      std.log("vcs-key: client__finn-communication");
      set req.http.x-client = "finn-communication";
    if(((req.url ~ ".*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__finn-communication_urldenied");
      std.log("TRACE: Valid client finn-communication does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with finn-communication
    # client: finn-component-server
    else if (req.http.x-finn-apikey == "dFIFJmnBIO7uEY2d") {
      std.log("vcs-key: client__finn-component-server");
      set req.http.x-client = "finn-component-server";
    if(((req.url ~ ".*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__finn-component-server_urldenied");
      std.log("TRACE: Valid client finn-component-server does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with finn-component-server
    # client: finn-distribution-api
    else if (req.http.x-finn-apikey == "OHPvjmT7dq3vywCN") {
      std.log("vcs-key: client__finn-distribution-api");
      set req.http.x-client = "finn-distribution-api";
    if(((req.url ~ ".*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__finn-distribution-api_urldenied");
      std.log("TRACE: Valid client finn-distribution-api does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with finn-distribution-api
    # client: finn-effekt
    else if (req.http.x-finn-apikey == "ZRuj5NGHyXNULuLH") {
      std.log("vcs-key: client__finn-effekt");
      set req.http.x-client = "finn-effekt";
    if(((req.url ~ ".*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__finn-effekt_urldenied");
      std.log("TRACE: Valid client finn-effekt does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with finn-effekt
    # client: finn-eiendom-as
    else if (req.http.x-finn-apikey == "bTOmslMEGZFVpEIL") {
      std.log("vcs-key: client__finn-eiendom-as");
      set req.http.x-client = "finn-eiendom-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__finn-eiendom-as_urldenied");
      std.log("TRACE: Valid client finn-eiendom-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with finn-eiendom-as
    # client: finn-finnbox-ad-info
    else if (req.http.x-finn-apikey == "QubhshbCyP9bkqFN") {
      std.log("vcs-key: client__finn-finnbox-ad-info");
      set req.http.x-client = "finn-finnbox-ad-info";
    if(((req.url ~ ".*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__finn-finnbox-ad-info_urldenied");
      std.log("TRACE: Valid client finn-finnbox-ad-info does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with finn-finnbox-ad-info
    # client: finn-haproxy-health
    else if (req.http.x-finn-apikey == "3VDKHbuWuneiFtBS") {
      std.log("vcs-key: client__finn-haproxy-health");
      set req.http.x-client = "finn-haproxy-health";
    if(((req.url ~ "^/$") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__finn-haproxy-health_urldenied");
      std.log("TRACE: Valid client finn-haproxy-health does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with finn-haproxy-health
    # client: finn-iad
    else if (req.http.x-finn-apikey == "AghYqcTFzgKrCvny") {
      std.log("vcs-key: client__finn-iad");
      set req.http.x-client = "finn-iad";
    if(((req.url ~ ".*") && req.method ~ "^(DELETE|GET|HEAD|POST|PUT)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__finn-iad_urldenied");
      std.log("TRACE: Valid client finn-iad does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with finn-iad
    # client: finn-image-explore
    else if (req.http.x-finn-apikey == "5hCKyiIDfxLQciUB") {
      std.log("vcs-key: client__finn-image-explore");
      set req.http.x-client = "finn-image-explore";
    if(((req.url ~ "^/recommendation-rest-api/recommender/[^/]+/moreLikeThisFromVector.*$") && req.method ~ "^(GET|HEAD|POST)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__finn-image-explore_urldenied");
      std.log("TRACE: Valid client finn-image-explore does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with finn-image-explore
    # client: finn-import-admodel
    else if (req.http.x-finn-apikey == "BpzDPbM41gx2LRpl") {
      std.log("vcs-key: client__finn-import-admodel");
      set req.http.x-client = "finn-import-admodel";
    if(((req.url ~ ".*") && req.method ~ "^(DELETE|GET|HEAD|POST|PUT)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__finn-import-admodel_urldenied");
      std.log("TRACE: Valid client finn-import-admodel does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with finn-import-admodel
    # client: finn-innfinn
    else if (req.http.x-finn-apikey == "7s6uV6SgdYrlNs6W") {
      std.log("vcs-key: client__finn-innfinn");
      set req.http.x-client = "finn-innfinn";
    if(((req.url ~ ".*") && req.method ~ "^(DELETE|GET|HEAD|POST|PUT)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__finn-innfinn_urldenied");
      std.log("TRACE: Valid client finn-innfinn does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with finn-innfinn
    # client: finn-innscreen-dash
    else if (req.http.x-finn-apikey == "jEz0QOaVGpwDuQXs") {
      std.log("vcs-key: client__finn-innscreen-dash");
      set req.http.x-client = "finn-innscreen-dash";
    if(((req.url ~ "^/classified-product-commerce/_/health") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__finn-innscreen-dash_urldenied");
      std.log("TRACE: Valid client finn-innscreen-dash does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with finn-innscreen-dash
    # client: finn-io-load-balancer-testing
    else if (req.http.x-finn-apikey == "xhMsIgxhqKCbGivX") {
      std.log("vcs-key: client__finn-io-load-balancer-testing");
      set req.http.x-client = "finn-io-load-balancer-testing";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/agriculture-.*" || req.url ~ "^/iad/ad/bap.*" || req.url ~ "^/iad/ad/bap-webstore.*" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/bus.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/construction.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/mc.*" || req.url ~ "^/iad/ad/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/agriculture-.*" || req.url ~ "^/iad/ad/model/bap.*" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/bus.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/construction.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/ad/model/mc.*" || req.url ~ "^/iad/ad/model/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/model/truck.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/ad/truck.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/agriculture-.*" || req.url ~ "^/iad/search/bap.*" || req.url ~ "^/iad/search/boat-.*" || req.url ~ "^/iad/search/bus.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/construction.*" || req.url ~ "^/iad/search/job-.*" || req.url ~ "^/iad/search/(mc|atv|snowmobile|moped-scooter).*" || req.url ~ "^/iad/search/(mobile-home|caravan).*" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/iad/search/truck.*" || req.url ~ "^/iad/search/van-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__finn-io-load-balancer-testing_urldenied");
      std.log("TRACE: Valid client finn-io-load-balancer-testing does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with finn-io-load-balancer-testing
    # client: finn-match-ad-search
    else if (req.http.x-finn-apikey == "KNRhXtroygf3ark3") {
      std.log("vcs-key: client__finn-match-ad-search");
      set req.http.x-client = "finn-match-ad-search";
    if(((req.url ~ ".*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__finn-match-ad-search_urldenied");
      std.log("TRACE: Valid client finn-match-ad-search does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with finn-match-ad-search
    # client: finn-mfinn
    else if (req.http.x-finn-apikey == "KnhrJDDktOXnWOxU") {
      std.log("vcs-key: client__finn-mfinn");
      set req.http.x-client = "finn-mfinn";
    if(((req.url ~ ".*") && req.method ~ "^(DELETE|GET|HEAD|POST|PUT)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__finn-mfinn_urldenied");
      std.log("TRACE: Valid client finn-mfinn does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with finn-mfinn
    # client: finn-no-contact-ads
    else if (req.http.x-finn-apikey == "k3evuaOBBVaAUMQn") {
      std.log("vcs-key: client__finn-no-contact-ads");
      set req.http.x-client = "finn-no-contact-ads";
    if(((req.url ~ ".*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__finn-no-contact-ads_urldenied");
      std.log("TRACE: Valid client finn-no-contact-ads does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with finn-no-contact-ads
    # client: finn-notification
    else if (req.http.x-finn-apikey == "7D4cGD7Pkr1S69dn") {
      std.log("vcs-key: client__finn-notification");
      set req.http.x-client = "finn-notification";
    if(((req.url ~ ".*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__finn-notification_urldenied");
      std.log("TRACE: Valid client finn-notification does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with finn-notification
    # client: finn-pal-web
    else if (req.http.x-finn-apikey == "vOeJ5VQHQMAUxZGY") {
      std.log("vcs-key: client__finn-pal-web");
      set req.http.x-client = "finn-pal-web";
    if(((req.url ~ ".*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__finn-pal-web_urldenied");
      std.log("TRACE: Valid client finn-pal-web does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with finn-pal-web
    # client: finn-profile
    else if (req.http.x-finn-apikey == "xFW2EXCNY9SHNgDc") {
      std.log("vcs-key: client__finn-profile");
      set req.http.x-client = "finn-profile";
    if(((req.url ~ ".*") && req.method ~ "^(DELETE|GET|HEAD|POST|PUT)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__finn-profile_urldenied");
      std.log("TRACE: Valid client finn-profile does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with finn-profile
    # client: finn-reise-fhh
    else if (req.http.x-finn-apikey == "yAmXroYgCMdvqqro") {
      std.log("vcs-key: client__finn-reise-fhh");
      set req.http.x-client = "finn-reise-fhh";
    if(((req.url ~ ".*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__finn-reise-fhh_urldenied");
      std.log("TRACE: Valid client finn-reise-fhh does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with finn-reise-fhh
    # client: finn-relevantads
    else if (req.http.x-finn-apikey == "5e5ziW7uC33RPJGb") {
      std.log("vcs-key: client__finn-relevantads");
      set req.http.x-client = "finn-relevantads";
    if(((req.url ~ ".*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__finn-relevantads_urldenied");
      std.log("TRACE: Valid client finn-relevantads does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with finn-relevantads
    # client: finn-smaajobber
    else if (req.http.x-finn-apikey == "jsmLHW4VPCjd6ruj") {
      std.log("vcs-key: client__finn-smaajobber");
      set req.http.x-client = "finn-smaajobber";
    if(((req.url ~ ".*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__finn-smaajobber_urldenied");
      std.log("TRACE: Valid client finn-smaajobber does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with finn-smaajobber
    # client: finn-statistics-api
    else if (req.http.x-finn-apikey == "2RaN4EA19AgNf7Jy") {
      std.log("vcs-key: client__finn-statistics-api");
      set req.http.x-client = "finn-statistics-api";
    if(((req.url ~ ".*") && req.method ~ "^(DELETE|GET|HEAD|POST|PUT)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__finn-statistics-api_urldenied");
      std.log("TRACE: Valid client finn-statistics-api does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with finn-statistics-api
    # client: finn-stream
    else if (req.http.x-finn-apikey == "bvYF3d0jT1Wyk9pG") {
      std.log("vcs-key: client__finn-stream");
      set req.http.x-client = "finn-stream";
    if(((req.url ~ ".*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__finn-stream_urldenied");
      std.log("TRACE: Valid client finn-stream does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with finn-stream
    # client: finn-torget-trollweb
    else if (req.http.x-finn-apikey == "GpK634Ny1YVAJ01v") {
      std.log("vcs-key: client__finn-torget-trollweb");
      set req.http.x-client = "finn-torget-trollweb";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/bap.*" || req.url ~ "^/iad/ad/bap-webstore.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/bap.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/bap.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__finn-torget-trollweb_urldenied");
      std.log("TRACE: Valid client finn-torget-trollweb does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with finn-torget-trollweb
    # client: finn-tp-api
    else if (req.http.x-finn-apikey == "rgAkQRmawbwbajJg") {
      std.log("vcs-key: client__finn-tp-api");
      set req.http.x-client = "finn-tp-api";
    if(((req.url ~ ".*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__finn-tp-api_urldenied");
      std.log("TRACE: Valid client finn-tp-api does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with finn-tp-api
    # client: floridabolig
    else if (req.http.x-finn-apikey == "XDuQE3v9641ktohr") {
      std.log("vcs-key: client__floridabolig");
      set req.http.x-client = "floridabolig";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__floridabolig_urldenied");
      std.log("TRACE: Valid client floridabolig does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with floridabolig
    # client: follo-naeringsmegling
    else if (req.http.x-finn-apikey == "HVpAtuXW7He4odIb") {
      std.log("vcs-key: client__follo-naeringsmegling");
      set req.http.x-client = "follo-naeringsmegling";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__follo-naeringsmegling_urldenied");
      std.log("TRACE: Valid client follo-naeringsmegling does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with follo-naeringsmegling
    # client: fossco
    else if (req.http.x-finn-apikey == "JuaVmAGKlshZOP5u") {
      std.log("vcs-key: client__fossco");
      set req.http.x-client = "fossco";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__fossco_urldenied");
      std.log("TRACE: Valid client fossco does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with fossco
    # client: fram-eiendom
    else if (req.http.x-finn-apikey == "sOrjEhkWQE7edPxt") {
      std.log("vcs-key: client__fram-eiendom");
      set req.http.x-client = "fram-eiendom";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__fram-eiendom_urldenied");
      std.log("TRACE: Valid client fram-eiendom does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with fram-eiendom
    # client: fredensborg-norge
    else if (req.http.x-finn-apikey == "yV9V8fODyZv6CJm8") {
      std.log("vcs-key: client__fredensborg-norge");
      set req.http.x-client = "fredensborg-norge";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__fredensborg-norge_urldenied");
      std.log("TRACE: Valid client fredensborg-norge does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with fredensborg-norge
    # client: fredriksborg-eiendom-as
    else if (req.http.x-finn-apikey == "CjOhTe7qMqDStUCJ") {
      std.log("vcs-key: client__fredriksborg-eiendom-as");
      set req.http.x-client = "fredriksborg-eiendom-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__fredriksborg-eiendom-as_urldenied");
      std.log("TRACE: Valid client fredriksborg-eiendom-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with fredriksborg-eiendom-as
    # client: friluftsmagasinet
    else if (req.http.x-finn-apikey == "EwnVZFP9am40mCkY") {
      std.log("vcs-key: client__friluftsmagasinet");
      set req.http.x-client = "friluftsmagasinet";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/bap.*" || req.url ~ "^/iad/ad/bap-webstore.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/bap.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/bap.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__friluftsmagasinet_urldenied");
      std.log("TRACE: Valid client friluftsmagasinet does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with friluftsmagasinet
    # client: fritidssentret-as
    else if (req.http.x-finn-apikey == "cLO7ZIvtI01hoa5o") {
      std.log("vcs-key: client__fritidssentret-as");
      set req.http.x-client = "fritidssentret-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/(mobile-home|caravan).*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/(mobile-home|caravan).*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__fritidssentret-as_urldenied");
      std.log("TRACE: Valid client fritidssentret-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with fritidssentret-as
    # client: frognerbygg-as
    else if (req.http.x-finn-apikey == "NLNfdsDHAEdpBBdV") {
      std.log("vcs-key: client__frognerbygg-as");
      set req.http.x-client = "frognerbygg-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__frognerbygg-as_urldenied");
      std.log("TRACE: Valid client frognerbygg-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with frognerbygg-as
    # client: frost-eiendom-as
    else if (req.http.x-finn-apikey == "H10WsrFiZpxnoJZ9") {
      std.log("vcs-key: client__frost-eiendom-as");
      set req.http.x-client = "frost-eiendom-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__frost-eiendom-as_urldenied");
      std.log("TRACE: Valid client frost-eiendom-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with frost-eiendom-as
    # client: frydenboe-as
    else if (req.http.x-finn-apikey == "iepyvHAUh4MqKxVE") {
      std.log("vcs-key: client__frydenboe-as");
      set req.http.x-client = "frydenboe-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__frydenboe-as_urldenied");
      std.log("TRACE: Valid client frydenboe-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with frydenboe-as
    # client: fylkesnes-bil-as
    else if (req.http.x-finn-apikey == "PXuO4HXaFufH9RTc") {
      std.log("vcs-key: client__fylkesnes-bil-as");
      set req.http.x-client = "fylkesnes-bil-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__fylkesnes-bil-as_urldenied");
      std.log("TRACE: Valid client fylkesnes-bil-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with fylkesnes-bil-as
    # client: fyllingen-maskin-as
    else if (req.http.x-finn-apikey == "gUBU37od06Ght8cP") {
      std.log("vcs-key: client__fyllingen-maskin-as");
      set req.http.x-client = "fyllingen-maskin-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__fyllingen-maskin-as_urldenied");
      std.log("TRACE: Valid client fyllingen-maskin-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with fyllingen-maskin-as
    # client: galleri-normisjon
    else if (req.http.x-finn-apikey == "nCjjzIY92wIU2is0") {
      std.log("vcs-key: client__galleri-normisjon");
      set req.http.x-client = "galleri-normisjon";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/bap.*" || req.url ~ "^/iad/ad/bap-webstore.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/bap.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/bap.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__galleri-normisjon_urldenied");
      std.log("TRACE: Valid client galleri-normisjon does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with galleri-normisjon
    # client: gamle-danske
    else if (req.http.x-finn-apikey == "wSSAS5eKkILpOUKf") {
      std.log("vcs-key: client__gamle-danske");
      set req.http.x-client = "gamle-danske";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/bap.*" || req.url ~ "^/iad/ad/bap-webstore.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/bap.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/bap.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__gamle-danske_urldenied");
      std.log("TRACE: Valid client gamle-danske does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with gamle-danske
    # client: garanti-eiendomsmegling-nedre-buskerud-as
    else if (req.http.x-finn-apikey == "DWvAK4M3SxcN4WrY") {
      std.log("vcs-key: client__garanti-eiendomsmegling-nedre-buskerud-as");
      set req.http.x-client = "garanti-eiendomsmegling-nedre-buskerud-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__garanti-eiendomsmegling-nedre-buskerud-as_urldenied");
      std.log("TRACE: Valid client garanti-eiendomsmegling-nedre-buskerud-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with garanti-eiendomsmegling-nedre-buskerud-as
    # client: garanti-eiendomsmegling-norge-as
    else if (req.http.x-finn-apikey == "D7Pb6CM6wceG7vlB") {
      std.log("vcs-key: client__garanti-eiendomsmegling-norge-as");
      set req.http.x-client = "garanti-eiendomsmegling-norge-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__garanti-eiendomsmegling-norge-as_urldenied");
      std.log("TRACE: Valid client garanti-eiendomsmegling-norge-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with garanti-eiendomsmegling-norge-as
    # client: gc-rieber-eiendom
    else if (req.http.x-finn-apikey == "Dal1BTDJ86hhVwOy") {
      std.log("vcs-key: client__gc-rieber-eiendom");
      set req.http.x-client = "gc-rieber-eiendom";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__gc-rieber-eiendom_urldenied");
      std.log("TRACE: Valid client gc-rieber-eiendom does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with gc-rieber-eiendom
    # client: gjensidige
    else if (req.http.x-finn-apikey == "rEoiJ6ataFYDRUi6") {
      std.log("vcs-key: client__gjensidige");
      set req.http.x-client = "gjensidige";
    if(((req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/mc$" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-sale/description" || req.url ~ "^/iad/search/caravan/description" || req.url ~ "^/iad/search/car-norway/description" || req.url ~ "^/iad/search/mc/description" || req.url ~ "^/iad/search/mobile-home/description" || req.url ~ "^/tp[/]?$" || req.url ~ "^/tp/ad/boat-.*" || req.url ~ "^/tp/ad/car-.*" || req.url ~ "^/tp/ad/caravan.*" || req.url ~ "^/tp/ad/\d+/?$" || req.url ~ "^/tp/ad/mc.*" || req.url ~ "^/tp/ad/mobile-home.*" || req.url ~ "^/tp/search/boat-sale" || req.url ~ "^/tp/search/caravan" || req.url ~ "^/tp/search/car-norway" || req.url ~ "^/tp/search/mc" || req.url ~ "^/tp/search/mobile-home") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__gjensidige_urldenied");
      std.log("TRACE: Valid client gjensidige does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with gjensidige
    # client: gjensidige-bolighandel
    else if (req.http.x-finn-apikey == "obiRRZOfPmBxQrHM") {
      std.log("vcs-key: client__gjensidige-bolighandel");
      set req.http.x-client = "gjensidige-bolighandel";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__gjensidige-bolighandel_urldenied");
      std.log("TRACE: Valid client gjensidige-bolighandel does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with gjensidige-bolighandel
    # client: Gjensidige classified-product documentation access
    else if (req.http.x-finn-apikey == "y6yF9FGT7ZNnDdjt") {
      std.log("vcs-key: client__Gjensidige classified-product documentation access");
      set req.http.x-client = "Gjensidige classified-product documentation access";
    if(((req.url ~ "^/classified-product-commerce/docs/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__Gjensidige classified-product documentation access_urldenied");
      std.log("TRACE: Valid client Gjensidige classified-product documentation access does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with Gjensidige classified-product documentation access
    # client: gjermundsen-auto-partner
    else if (req.http.x-finn-apikey == "JOvcNeBxUd54blXd") {
      std.log("vcs-key: client__gjermundsen-auto-partner");
      set req.http.x-client = "gjermundsen-auto-partner";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__gjermundsen-auto-partner_urldenied");
      std.log("TRACE: Valid client gjermundsen-auto-partner does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with gjermundsen-auto-partner
    # client: glasspaper-as
    else if (req.http.x-finn-apikey == "S6VQReWkYFxl1Tfh") {
      std.log("vcs-key: client__glasspaper-as");
      set req.http.x-client = "glasspaper-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__glasspaper-as_urldenied");
      std.log("TRACE: Valid client glasspaper-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with glasspaper-as
    # client: gloss-cosmetics
    else if (req.http.x-finn-apikey == "Lm41gZwVU82WoQ1L") {
      std.log("vcs-key: client__gloss-cosmetics");
      set req.http.x-client = "gloss-cosmetics";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/bap.*" || req.url ~ "^/iad/ad/bap-webstore.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/bap.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/bap.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__gloss-cosmetics_urldenied");
      std.log("TRACE: Valid client gloss-cosmetics does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with gloss-cosmetics
    # client: glaamdal-bilsenter
    else if (req.http.x-finn-apikey == "NKUiERQZ6RL0Q2Vg") {
      std.log("vcs-key: client__glaamdal-bilsenter");
      set req.http.x-client = "glaamdal-bilsenter";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__glaamdal-bilsenter_urldenied");
      std.log("TRACE: Valid client glaamdal-bilsenter does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with glaamdal-bilsenter
    # client: gobb-eiendomsmegling-as
    else if (req.http.x-finn-apikey == "EKxLzLkElcf6JXSW") {
      std.log("vcs-key: client__gobb-eiendomsmegling-as");
      set req.http.x-client = "gobb-eiendomsmegling-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__gobb-eiendomsmegling-as_urldenied");
      std.log("TRACE: Valid client gobb-eiendomsmegling-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with gobb-eiendomsmegling-as
    # client: -grader-naeringsmegling-as
    else if (req.http.x-finn-apikey == "iD2SSNMm6ihTw1H3") {
      std.log("vcs-key: client__-grader-naeringsmegling-as");
      set req.http.x-client = "-grader-naeringsmegling-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__-grader-naeringsmegling-as_urldenied");
      std.log("TRACE: Valid client -grader-naeringsmegling-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with -grader-naeringsmegling-as
    # client: grandahl-bil
    else if (req.http.x-finn-apikey == "KKmh5Sd3NB26Vi6C") {
      std.log("vcs-key: client__grandahl-bil");
      set req.http.x-client = "grandahl-bil";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/bus.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/bus.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/truck.*" || req.url ~ "^/iad/ad/truck.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/bus.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/(mobile-home|caravan).*" || req.url ~ "^/iad/search/truck.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__grandahl-bil_urldenied");
      std.log("TRACE: Valid client grandahl-bil does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with grandahl-bil
    # client: gtm-partnergruppe
    else if (req.http.x-finn-apikey == "axMS47UemIwirTLz") {
      std.log("vcs-key: client__gtm-partnergruppe");
      set req.http.x-client = "gtm-partnergruppe";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__gtm-partnergruppe_urldenied");
      std.log("TRACE: Valid client gtm-partnergruppe does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with gtm-partnergruppe
    # client: gumpens-auto-vest
    else if (req.http.x-finn-apikey == "tIVVXrX7EjEAKHav") {
      std.log("vcs-key: client__gumpens-auto-vest");
      set req.http.x-client = "gumpens-auto-vest";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__gumpens-auto-vest_urldenied");
      std.log("TRACE: Valid client gumpens-auto-vest does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with gumpens-auto-vest
    # client: habberstad-as
    else if (req.http.x-finn-apikey == "MXaBf55zzpiOgYaw") {
      std.log("vcs-key: client__habberstad-as");
      set req.http.x-client = "habberstad-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__habberstad-as_urldenied");
      std.log("TRACE: Valid client habberstad-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with habberstad-as
    # client: harald-a-moller-as
    else if (req.http.x-finn-apikey == "bUCEgNH72xel2Wjv") {
      std.log("vcs-key: client__harald-a-moller-as");
      set req.http.x-client = "harald-a-moller-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__harald-a-moller-as_urldenied");
      std.log("TRACE: Valid client harald-a-moller-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with harald-a-moller-as
    # client: harald-hustad
    else if (req.http.x-finn-apikey == "5l2YMexI32dhVnWK") {
      std.log("vcs-key: client__harald-hustad");
      set req.http.x-client = "harald-hustad";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__harald-hustad_urldenied");
      std.log("TRACE: Valid client harald-hustad does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with harald-hustad
    # client: harila-gruppen
    else if (req.http.x-finn-apikey == "DDiL4Ui6iZ8onMMU") {
      std.log("vcs-key: client__harila-gruppen");
      set req.http.x-client = "harila-gruppen";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__harila-gruppen_urldenied");
      std.log("TRACE: Valid client harila-gruppen does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with harila-gruppen
    # client: harstad-tidende-bil
    else if (req.http.x-finn-apikey == "vex6p2qATu6nzC51") {
      std.log("vcs-key: client__harstad-tidende-bil");
      set req.http.x-client = "harstad-tidende-bil";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__harstad-tidende-bil_urldenied");
      std.log("TRACE: Valid client harstad-tidende-bil does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with harstad-tidende-bil
    # client: hartmark-executive
    else if (req.http.x-finn-apikey == "COCaq3ObbSuzTIIt") {
      std.log("vcs-key: client__hartmark-executive");
      set req.http.x-client = "hartmark-executive";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__hartmark-executive_urldenied");
      std.log("TRACE: Valid client hartmark-executive does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with hartmark-executive
    # client: haugesund-auto-as
    else if (req.http.x-finn-apikey == "8aNgq1m1hbuXhSQe") {
      std.log("vcs-key: client__haugesund-auto-as");
      set req.http.x-client = "haugesund-auto-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/bus.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/mc.*" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/bus.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/mc.*" || req.url ~ "^/iad/ad/model/truck.*" || req.url ~ "^/iad/ad/truck.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-.*" || req.url ~ "^/iad/search/bus.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/(mc|atv|snowmobile|moped-scooter).*" || req.url ~ "^/iad/search/truck.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__haugesund-auto-as_urldenied");
      std.log("TRACE: Valid client haugesund-auto-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with haugesund-auto-as
    # client: haukebo-rodseth
    else if (req.http.x-finn-apikey == "Q51MnwrreOyfqHXg") {
      std.log("vcs-key: client__haukebo-rodseth");
      set req.http.x-client = "haukebo-rodseth";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__haukebo-rodseth_urldenied");
      std.log("TRACE: Valid client haukebo-rodseth does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with haukebo-rodseth
    # client: hegh-eiendom-as
    else if (req.http.x-finn-apikey == "sHMRKWKKKWxfINdR") {
      std.log("vcs-key: client__hegh-eiendom-as");
      set req.http.x-client = "hegh-eiendom-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__hegh-eiendom-as_urldenied");
      std.log("TRACE: Valid client hegh-eiendom-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with hegh-eiendom-as
    # client: heimdal-eiendomsmegling
    else if (req.http.x-finn-apikey == "HniVxHkUQoYZ3hTE") {
      std.log("vcs-key: client__heimdal-eiendomsmegling");
      set req.http.x-client = "heimdal-eiendomsmegling";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__heimdal-eiendomsmegling_urldenied");
      std.log("TRACE: Valid client heimdal-eiendomsmegling does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with heimdal-eiendomsmegling
    # client: hellvikhus-job
    else if (req.http.x-finn-apikey == "w0U3Tn66xRj5jihu") {
      std.log("vcs-key: client__hellvikhus-job");
      set req.http.x-client = "hellvikhus-job";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__hellvikhus-job_urldenied");
      std.log("TRACE: Valid client hellvikhus-job does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with hellvikhus-job
    # client: henry-hammari-as
    else if (req.http.x-finn-apikey == "pqO5LXLiXi5B4pHS") {
      std.log("vcs-key: client__henry-hammari-as");
      set req.http.x-client = "henry-hammari-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__henry-hammari-as_urldenied");
      std.log("TRACE: Valid client henry-hammari-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with henry-hammari-as
    # client: h-h-maskin
    else if (req.http.x-finn-apikey == "2bxoWUPnACnT8Sff") {
      std.log("vcs-key: client__h-h-maskin");
      set req.http.x-client = "h-h-maskin";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/agriculture-.*" || req.url ~ "^/iad/ad/construction.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/agriculture-.*" || req.url ~ "^/iad/ad/model/construction.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/agriculture-.*" || req.url ~ "^/iad/search/construction.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__h-h-maskin_urldenied");
      std.log("TRACE: Valid client h-h-maskin does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with h-h-maskin
    # client: holmane-bil
    else if (req.http.x-finn-apikey == "un0oDU2NAqtdvUSq") {
      std.log("vcs-key: client__holmane-bil");
      set req.http.x-client = "holmane-bil";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__holmane-bil_urldenied");
      std.log("TRACE: Valid client holmane-bil does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with holmane-bil
    # client: holm-eiendomsforvaltning-as
    else if (req.http.x-finn-apikey == "nWpqJ0IAFpO2TNM8") {
      std.log("vcs-key: client__holm-eiendomsforvaltning-as");
      set req.http.x-client = "holm-eiendomsforvaltning-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__holm-eiendomsforvaltning-as_urldenied");
      std.log("TRACE: Valid client holm-eiendomsforvaltning-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with holm-eiendomsforvaltning-as
    # client: home-eiendomsmegler
    else if (req.http.x-finn-apikey == "rZ3xOGwvt2OYOQpt") {
      std.log("vcs-key: client__home-eiendomsmegler");
      set req.http.x-client = "home-eiendomsmegler";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__home-eiendomsmegler_urldenied");
      std.log("TRACE: Valid client home-eiendomsmegler does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with home-eiendomsmegler
    # client: hundholmen-byutvikling-as
    else if (req.http.x-finn-apikey == "ZxYX2TLIkE7OYnUD") {
      std.log("vcs-key: client__hundholmen-byutvikling-as");
      set req.http.x-client = "hundholmen-byutvikling-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__hundholmen-byutvikling-as_urldenied");
      std.log("TRACE: Valid client hundholmen-byutvikling-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with hundholmen-byutvikling-as
    # client: Hundholmen Byutvikling AS ny
    else if (req.http.x-finn-apikey == "xfPXS5IEzkHF6LZN") {
      std.log("vcs-key: client__Hundholmen Byutvikling AS ny");
      set req.http.x-client = "Hundholmen Byutvikling AS ny";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__Hundholmen Byutvikling AS ny_urldenied");
      std.log("TRACE: Valid client Hundholmen Byutvikling AS ny does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with Hundholmen Byutvikling AS ny
    # client: husleie
    else if (req.http.x-finn-apikey == "6tnFbNnIEzz4C3Vv") {
      std.log("vcs-key: client__husleie");
      set req.http.x-client = "husleie";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__husleie_urldenied");
      std.log("TRACE: Valid client husleie does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with husleie
    # client: hus-norge-as-mor
    else if (req.http.x-finn-apikey == "WsgwZ4S97J3mk5eL") {
      std.log("vcs-key: client__hus-norge-as-mor");
      set req.http.x-client = "hus-norge-as-mor";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__hus-norge-as-mor_urldenied");
      std.log("TRACE: Valid client hus-norge-as-mor does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with hus-norge-as-mor
    # client: hymax-as
    else if (req.http.x-finn-apikey == "IDchwoLIuxTGrORU") {
      std.log("vcs-key: client__hymax-as");
      set req.http.x-client = "hymax-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/agriculture-.*" || req.url ~ "^/iad/ad/construction.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/agriculture-.*" || req.url ~ "^/iad/ad/model/construction.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/agriculture-.*" || req.url ~ "^/iad/search/construction.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__hymax-as_urldenied");
      std.log("TRACE: Valid client hymax-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with hymax-as
    # client: hytech
    else if (req.http.x-finn-apikey == "m65KaQoUK1K6Nsdn") {
      std.log("vcs-key: client__hytech");
      set req.http.x-client = "hytech";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__hytech_urldenied");
      std.log("TRACE: Valid client hytech does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with hytech
    # client: hyundai-partnergruppe
    else if (req.http.x-finn-apikey == "tzlbEg0EM73wrvKt") {
      std.log("vcs-key: client__hyundai-partnergruppe");
      set req.http.x-client = "hyundai-partnergruppe";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__hyundai-partnergruppe_urldenied");
      std.log("TRACE: Valid client hyundai-partnergruppe does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with hyundai-partnergruppe
    # client: ibm-norge-as
    else if (req.http.x-finn-apikey == "zHPR9WnoVES5czVF") {
      std.log("vcs-key: client__ibm-norge-as");
      set req.http.x-client = "ibm-norge-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__ibm-norge-as_urldenied");
      std.log("TRACE: Valid client ibm-norge-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with ibm-norge-as
    # client: i-bolig-as
    else if (req.http.x-finn-apikey == "SEyxJyUn77Q2GYuc") {
      std.log("vcs-key: client__i-bolig-as");
      set req.http.x-client = "i-bolig-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__i-bolig-as_urldenied");
      std.log("TRACE: Valid client i-bolig-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with i-bolig-as
    # client: icaravan-as
    else if (req.http.x-finn-apikey == "8Dn1qRjc3Q9jsRKq") {
      std.log("vcs-key: client__icaravan-as");
      set req.http.x-client = "icaravan-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/(mobile-home|caravan).*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/(mobile-home|caravan).*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__icaravan-as_urldenied");
      std.log("TRACE: Valid client icaravan-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with icaravan-as
    # client: idehusgruppen-as-mor
    else if (req.http.x-finn-apikey == "ICw1ez0RCN7Hr2xX") {
      std.log("vcs-key: client__idehusgruppen-as-mor");
      set req.http.x-client = "idehusgruppen-as-mor";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__idehusgruppen-as-mor_urldenied");
      std.log("TRACE: Valid client idehusgruppen-as-mor does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with idehusgruppen-as-mor
    # client: if-skadeforsikring
    else if (req.http.x-finn-apikey == "XnSlnBOpLsvkrGPb") {
      std.log("vcs-key: client__if-skadeforsikring");
      set req.http.x-client = "if-skadeforsikring";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__if-skadeforsikring_urldenied");
      std.log("TRACE: Valid client if-skadeforsikring does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with if-skadeforsikring
    # client: ihus
    else if (req.http.x-finn-apikey == "Ac3S2xTXDWQO8Abf") {
      std.log("vcs-key: client__ihus");
      set req.http.x-client = "ihus";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__ihus_urldenied");
      std.log("TRACE: Valid client ihus does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with ihus
    # client: impact-as
    else if (req.http.x-finn-apikey == "07QNKWwwSNJVTOkF") {
      std.log("vcs-key: client__impact-as");
      set req.http.x-client = "impact-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__impact-as_urldenied");
      std.log("TRACE: Valid client impact-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with impact-as
    # client: importservice
    else if (req.http.x-finn-apikey == "O2i2H3bCXtlDsup7") {
      std.log("vcs-key: client__importservice");
      set req.http.x-client = "importservice";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__importservice_urldenied");
      std.log("TRACE: Valid client importservice does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with importservice
    # client: innlandet-naeringsmegling-as
    else if (req.http.x-finn-apikey == "gyBuMRnqVB9t04ID") {
      std.log("vcs-key: client__innlandet-naeringsmegling-as");
      set req.http.x-client = "innlandet-naeringsmegling-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__innlandet-naeringsmegling-as_urldenied");
      std.log("TRACE: Valid client innlandet-naeringsmegling-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with innlandet-naeringsmegling-as
    # client: insignia
    else if (req.http.x-finn-apikey == "Dv6DdxZIeLlNGB4K") {
      std.log("vcs-key: client__insignia");
      set req.http.x-client = "insignia";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__insignia_urldenied");
      std.log("TRACE: Valid client insignia does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with insignia
    # client: intility-as
    else if (req.http.x-finn-apikey == "YUQKXST6DihfsG1I") {
      std.log("vcs-key: client__intility-as");
      set req.http.x-client = "intility-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__intility-as_urldenied");
      std.log("TRACE: Valid client intility-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with intility-as
    # client: itera
    else if (req.http.x-finn-apikey == "P6ay7HsBRMO8gTj2") {
      std.log("vcs-key: client__itera");
      set req.http.x-client = "itera";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__itera_urldenied");
      std.log("TRACE: Valid client itera does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with itera
    # client: ivex-as
    else if (req.http.x-finn-apikey == "A6hO0IcjOpYFyRUE") {
      std.log("vcs-key: client__ivex-as");
      set req.http.x-client = "ivex-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__ivex-as_urldenied");
      std.log("TRACE: Valid client ivex-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with ivex-as
    # client: jaeren-storbil-senter-as
    else if (req.http.x-finn-apikey == "gVPR2644rK9xhMZM") {
      std.log("vcs-key: client__jaeren-storbil-senter-as");
      set req.http.x-client = "jaeren-storbil-senter-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/agriculture-.*" || req.url ~ "^/iad/ad/bus.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/construction.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/agriculture-.*" || req.url ~ "^/iad/ad/model/bus.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/construction.*" || req.url ~ "^/iad/ad/model/truck.*" || req.url ~ "^/iad/ad/truck.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/agriculture-.*" || req.url ~ "^/iad/search/bus.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/construction.*" || req.url ~ "^/iad/search/truck.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__jaeren-storbil-senter-as_urldenied");
      std.log("TRACE: Valid client jaeren-storbil-senter-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with jaeren-storbil-senter-as
    # client: jakhelln
    else if (req.http.x-finn-apikey == "ILVHVtdgnutFmbGb") {
      std.log("vcs-key: client__jakhelln");
      set req.http.x-client = "jakhelln";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/mc.*" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/mc.*" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/(mc|atv|snowmobile|moped-scooter).*" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/iad/search/van-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__jakhelln_urldenied");
      std.log("TRACE: Valid client jakhelln does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with jakhelln
    # client: jensen--scheele-auto-as
    else if (req.http.x-finn-apikey == "vBW0PBMNiydblOjr") {
      std.log("vcs-key: client__jensen--scheele-auto-as");
      set req.http.x-client = "jensen--scheele-auto-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__jensen--scheele-auto-as_urldenied");
      std.log("TRACE: Valid client jensen--scheele-auto-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with jensen--scheele-auto-as
    # client: jenssen-og-bolle-as
    else if (req.http.x-finn-apikey == "pC771CrNUGf8Igx8") {
      std.log("vcs-key: client__jenssen-og-bolle-as");
      set req.http.x-client = "jenssen-og-bolle-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__jenssen-og-bolle-as_urldenied");
      std.log("TRACE: Valid client jenssen-og-bolle-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with jenssen-og-bolle-as
    # client: jernbanedirektoratet
    else if (req.http.x-finn-apikey == "l7dbQRkxaRi0t5gT") {
      std.log("vcs-key: client__jernbanedirektoratet");
      set req.http.x-client = "jernbanedirektoratet";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__jernbanedirektoratet_urldenied");
      std.log("TRACE: Valid client jernbanedirektoratet does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with jernbanedirektoratet
    # client: jobbidrett-as
    else if (req.http.x-finn-apikey == "fcCVOQB5n74JubmL") {
      std.log("vcs-key: client__jobbidrett-as");
      set req.http.x-client = "jobbidrett-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__jobbidrett-as_urldenied");
      std.log("TRACE: Valid client jobbidrett-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with jobbidrett-as
    # client: joera-bygg-as
    else if (req.http.x-finn-apikey == "1QiJITAgKs7z169M") {
      std.log("vcs-key: client__joera-bygg-as");
      set req.http.x-client = "joera-bygg-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__joera-bygg-as_urldenied");
      std.log("TRACE: Valid client joera-bygg-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with joera-bygg-as
    # client: jorkjend-porsgrunn-as
    else if (req.http.x-finn-apikey == "L0U2q5lmYyxRyR3s") {
      std.log("vcs-key: client__jorkjend-porsgrunn-as");
      set req.http.x-client = "jorkjend-porsgrunn-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__jorkjend-porsgrunn-as_urldenied");
      std.log("TRACE: Valid client jorkjend-porsgrunn-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with jorkjend-porsgrunn-as
    # client: jorkjend-skien-as
    else if (req.http.x-finn-apikey == "Nia0e3Xowsvec1wM") {
      std.log("vcs-key: client__jorkjend-skien-as");
      set req.http.x-client = "jorkjend-skien-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__jorkjend-skien-as_urldenied");
      std.log("TRACE: Valid client jorkjend-skien-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with jorkjend-skien-as
    # client: jysk-as
    else if (req.http.x-finn-apikey == "oZS6e5poFxPNe9FL") {
      std.log("vcs-key: client__jysk-as");
      set req.http.x-client = "jysk-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__jysk-as_urldenied");
      std.log("TRACE: Valid client jysk-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with jysk-as
    # client: kaland-partners
    else if (req.http.x-finn-apikey == "NRMqTFL8nZMU6vjL") {
      std.log("vcs-key: client__kaland-partners");
      set req.http.x-client = "kaland-partners";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__kaland-partners_urldenied");
      std.log("TRACE: Valid client kaland-partners does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with kaland-partners
    # client: kaldnes-as
    else if (req.http.x-finn-apikey == "Tp4bn6V1EmG48ONE") {
      std.log("vcs-key: client__kaldnes-as");
      set req.http.x-client = "kaldnes-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__kaldnes-as_urldenied");
      std.log("TRACE: Valid client kaldnes-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with kaldnes-as
    # client: kantega-as
    else if (req.http.x-finn-apikey == "S2IxV5ORqFYx5AfH") {
      std.log("vcs-key: client__kantega-as");
      set req.http.x-client = "kantega-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__kantega-as_urldenied");
      std.log("TRACE: Valid client kantega-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with kantega-as
    # client: kbbl-eiendomsmegling
    else if (req.http.x-finn-apikey == "qXU2xsgAKOxArO7G") {
      std.log("vcs-key: client__kbbl-eiendomsmegling");
      set req.http.x-client = "kbbl-eiendomsmegling";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__kbbl-eiendomsmegling_urldenied");
      std.log("TRACE: Valid client kbbl-eiendomsmegling does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with kbbl-eiendomsmegling
    # client: K-Bil
    else if (req.http.x-finn-apikey == "k7uK0t4CyDeMXWEh") {
      std.log("vcs-key: client__K-Bil");
      set req.http.x-client = "K-Bil";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__K-Bil_urldenied");
      std.log("TRACE: Valid client K-Bil does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with K-Bil
    # client: ketil-koppang-landbruk-og-naeringsseiendom
    else if (req.http.x-finn-apikey == "WsJLg6vfepIB4T0E") {
      std.log("vcs-key: client__ketil-koppang-landbruk-og-naeringsseiendom");
      set req.http.x-client = "ketil-koppang-landbruk-og-naeringsseiendom";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__ketil-koppang-landbruk-og-naeringsseiendom_urldenied");
      std.log("TRACE: Valid client ketil-koppang-landbruk-og-naeringsseiendom does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with ketil-koppang-landbruk-og-naeringsseiendom
    # client: king-auto
    else if (req.http.x-finn-apikey == "mgdqPEqCnSrDkk5g") {
      std.log("vcs-key: client__king-auto");
      set req.http.x-client = "king-auto";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__king-auto_urldenied");
      std.log("TRACE: Valid client king-auto does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with king-auto
    # client: knowit-as
    else if (req.http.x-finn-apikey == "CMXB3S4meboDTLAt") {
      std.log("vcs-key: client__knowit-as");
      set req.http.x-client = "knowit-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__knowit-as_urldenied");
      std.log("TRACE: Valid client knowit-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with knowit-as
    # client: kommunal-landspensjonskasse
    else if (req.http.x-finn-apikey == "FjAdqcFxec0G34zf") {
      std.log("vcs-key: client__kommunal-landspensjonskasse");
      set req.http.x-client = "kommunal-landspensjonskasse";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__kommunal-landspensjonskasse_urldenied");
      std.log("TRACE: Valid client kommunal-landspensjonskasse does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with kommunal-landspensjonskasse
    # client: kongsberg-gruppen-asa
    else if (req.http.x-finn-apikey == "6g4mWSPnhHuyYXcR") {
      std.log("vcs-key: client__kongsberg-gruppen-asa");
      set req.http.x-client = "kongsberg-gruppen-asa";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__kongsberg-gruppen-asa_urldenied");
      std.log("TRACE: Valid client kongsberg-gruppen-asa does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with kongsberg-gruppen-asa
    # client: koppang-landbruk-og-naeringsmegling-as
    else if (req.http.x-finn-apikey == "HTPayS9PRtX3iv4V") {
      std.log("vcs-key: client__koppang-landbruk-og-naeringsmegling-as");
      set req.http.x-client = "koppang-landbruk-og-naeringsmegling-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__koppang-landbruk-og-naeringsmegling-as_urldenied");
      std.log("TRACE: Valid client koppang-landbruk-og-naeringsmegling-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with koppang-landbruk-og-naeringsmegling-as
    # client: kpmg-as-hovedkontor
    else if (req.http.x-finn-apikey == "cteNMF8LZCsGoegY") {
      std.log("vcs-key: client__kpmg-as-hovedkontor");
      set req.http.x-client = "kpmg-as-hovedkontor";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__kpmg-as-hovedkontor_urldenied");
      std.log("TRACE: Valid client kpmg-as-hovedkontor does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with kpmg-as-hovedkontor
    # client: krag-gruppen
    else if (req.http.x-finn-apikey == "hNvpUOc9XgU9Em86") {
      std.log("vcs-key: client__krag-gruppen");
      set req.http.x-client = "krag-gruppen";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__krag-gruppen_urldenied");
      std.log("TRACE: Valid client krag-gruppen does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with krag-gruppen
    # client: kramer-brygge
    else if (req.http.x-finn-apikey == "j6V0v4EGi0eQiOkx") {
      std.log("vcs-key: client__kramer-brygge");
      set req.http.x-client = "kramer-brygge";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__kramer-brygge_urldenied");
      std.log("TRACE: Valid client kramer-brygge does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with kramer-brygge
    # client: kverneland-bil-as--oslo
    else if (req.http.x-finn-apikey == "srcU4AHX2dlwcDpk") {
      std.log("vcs-key: client__kverneland-bil-as--oslo");
      set req.http.x-client = "kverneland-bil-as--oslo";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__kverneland-bil-as--oslo_urldenied");
      std.log("TRACE: Valid client kverneland-bil-as--oslo does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with kverneland-bil-as--oslo
    # client: kverneland-partnergruppe
    else if (req.http.x-finn-apikey == "aHvULY8PUPe1PpHH") {
      std.log("vcs-key: client__kverneland-partnergruppe");
      set req.http.x-client = "kverneland-partnergruppe";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__kverneland-partnergruppe_urldenied");
      std.log("TRACE: Valid client kverneland-partnergruppe does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with kverneland-partnergruppe
    # client: kynningsrud-eiendom-holding-as
    else if (req.http.x-finn-apikey == "UUFK6OIJtxCK4XWr") {
      std.log("vcs-key: client__kynningsrud-eiendom-holding-as");
      set req.http.x-client = "kynningsrud-eiendom-holding-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__kynningsrud-eiendom-holding-as_urldenied");
      std.log("TRACE: Valid client kynningsrud-eiendom-holding-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with kynningsrud-eiendom-holding-as
    # client: l-a-lund-as
    else if (req.http.x-finn-apikey == "QbmUXRvHOfbKtKSz") {
      std.log("vcs-key: client__l-a-lund-as");
      set req.http.x-client = "l-a-lund-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__l-a-lund-as_urldenied");
      std.log("TRACE: Valid client l-a-lund-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with l-a-lund-as
    # client: landrover-partnergruppe
    else if (req.http.x-finn-apikey == "dY4YPcdGaUEnlKwq") {
      std.log("vcs-key: client__landrover-partnergruppe");
      set req.http.x-client = "landrover-partnergruppe";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__landrover-partnergruppe_urldenied");
      std.log("TRACE: Valid client landrover-partnergruppe does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with landrover-partnergruppe
    # client: lazy-boyz-speed--custom-works-as
    else if (req.http.x-finn-apikey == "qPz3StmX4MKUmoAT") {
      std.log("vcs-key: client__lazy-boyz-speed--custom-works-as");
      set req.http.x-client = "lazy-boyz-speed--custom-works-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/mc.*" || req.url ~ "^/iad/ad/model/mc.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/(mc|atv|snowmobile|moped-scooter).*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__lazy-boyz-speed--custom-works-as_urldenied");
      std.log("TRACE: Valid client lazy-boyz-speed--custom-works-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with lazy-boyz-speed--custom-works-as
    # client: leie-bolig
    else if (req.http.x-finn-apikey == "vrV6P3zpv0JcWdxb") {
      std.log("vcs-key: client__leie-bolig");
      set req.http.x-client = "leie-bolig";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__leie-bolig_urldenied");
      std.log("TRACE: Valid client leie-bolig does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with leie-bolig
    # client: leiebolig-utleie-as
    else if (req.http.x-finn-apikey == "6LkfYlL7VxBlyoEv") {
      std.log("vcs-key: client__leiebolig-utleie-as");
      set req.http.x-client = "leiebolig-utleie-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__leiebolig-utleie-as_urldenied");
      std.log("TRACE: Valid client leiebolig-utleie-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with leiebolig-utleie-as
    # client: leinaes--partners
    else if (req.http.x-finn-apikey == "Jfq4bD2kxg4ibGfn") {
      std.log("vcs-key: client__leinaes--partners");
      set req.http.x-client = "leinaes--partners";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__leinaes--partners_urldenied");
      std.log("TRACE: Valid client leinaes--partners does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with leinaes--partners
    # client: lena-maskin
    else if (req.http.x-finn-apikey == "zZKus2TPEQvUfP00") {
      std.log("vcs-key: client__lena-maskin");
      set req.http.x-client = "lena-maskin";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/agriculture-.*" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/bus.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/construction.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/mc.*" || req.url ~ "^/iad/ad/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/agriculture-.*" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/bus.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/construction.*" || req.url ~ "^/iad/ad/model/mc.*" || req.url ~ "^/iad/ad/model/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/truck.*" || req.url ~ "^/iad/ad/truck.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/agriculture-.*" || req.url ~ "^/iad/search/boat-.*" || req.url ~ "^/iad/search/bus.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/construction.*" || req.url ~ "^/iad/search/(mc|atv|snowmobile|moped-scooter).*" || req.url ~ "^/iad/search/(mobile-home|caravan).*" || req.url ~ "^/iad/search/truck.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__lena-maskin_urldenied");
      std.log("TRACE: Valid client lena-maskin does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with lena-maskin
    # client: lians-caravan-as
    else if (req.http.x-finn-apikey == "XELM5w4IlPlfDGnh") {
      std.log("vcs-key: client__lians-caravan-as");
      set req.http.x-client = "lians-caravan-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/(mobile-home|caravan).*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/(mobile-home|caravan).*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__lians-caravan-as_urldenied");
      std.log("TRACE: Valid client lians-caravan-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with lians-caravan-as
    # client: lias-bilopphuggeri
    else if (req.http.x-finn-apikey == "z66iwdr273AuvMDU") {
      std.log("vcs-key: client__lias-bilopphuggeri");
      set req.http.x-client = "lias-bilopphuggeri";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/bap.*" || req.url ~ "^/iad/ad/bap-webstore.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/bap.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/bap.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__lias-bilopphuggeri_urldenied");
      std.log("TRACE: Valid client lias-bilopphuggeri does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with lias-bilopphuggeri
    # client: lindbakgruppen-as
    else if (req.http.x-finn-apikey == "VqdqWtD5x0kq7aQV") {
      std.log("vcs-key: client__lindbakgruppen-as");
      set req.http.x-client = "lindbakgruppen-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__lindbakgruppen-as_urldenied");
      std.log("TRACE: Valid client lindbakgruppen-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with lindbakgruppen-as
    # client: linstow
    else if (req.http.x-finn-apikey == "mB8aCvkeh1Ka7umv") {
      std.log("vcs-key: client__linstow");
      set req.http.x-client = "linstow";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__linstow_urldenied");
      std.log("TRACE: Valid client linstow does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with linstow
    # client: lumagate-as
    else if (req.http.x-finn-apikey == "2nLRhfCBG39Bc1HY") {
      std.log("vcs-key: client__lumagate-as");
      set req.http.x-client = "lumagate-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__lumagate-as_urldenied");
      std.log("TRACE: Valid client lumagate-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with lumagate-as
    # client: makestad-bil-as
    else if (req.http.x-finn-apikey == "uEiz19DWhRmaSmji") {
      std.log("vcs-key: client__makestad-bil-as");
      set req.http.x-client = "makestad-bil-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__makestad-bil-as_urldenied");
      std.log("TRACE: Valid client makestad-bil-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with makestad-bil-as
    # client: malling
    else if (req.http.x-finn-apikey == "kj2eO0ta9S1VRiRp") {
      std.log("vcs-key: client__malling");
      set req.http.x-client = "malling";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__malling_urldenied");
      std.log("TRACE: Valid client malling does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with malling
    # client: malmlaft-eiendom-as
    else if (req.http.x-finn-apikey == "KqMC4nV5zHxCvOr9") {
      std.log("vcs-key: client__malmlaft-eiendom-as");
      set req.http.x-client = "malmlaft-eiendom-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__malmlaft-eiendom-as_urldenied");
      std.log("TRACE: Valid client malmlaft-eiendom-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with malmlaft-eiendom-as
    # client: manpower
    else if (req.http.x-finn-apikey == "bt59bdpxQ5MmT8xC") {
      std.log("vcs-key: client__manpower");
      set req.http.x-client = "manpower";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__manpower_urldenied");
      std.log("TRACE: Valid client manpower does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with manpower
    # client: maritim-center
    else if (req.http.x-finn-apikey == "x2SfkFFeiNQvsPsp") {
      std.log("vcs-key: client__maritim-center");
      set req.http.x-client = "maritim-center";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/bap.*" || req.url ~ "^/iad/ad/bap-webstore.*" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/mc.*" || req.url ~ "^/iad/ad/model/bap.*" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/mc.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/bap.*" || req.url ~ "^/iad/search/boat-.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/(mc|atv|snowmobile|moped-scooter).*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__maritim-center_urldenied");
      std.log("TRACE: Valid client maritim-center does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with maritim-center
    # client: mascus
    else if (req.http.x-finn-apikey == "ZV8CuqJLr6szWf8n") {
      std.log("vcs-key: client__mascus");
      set req.http.x-client = "mascus";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/agriculture-.*" || req.url ~ "^/iad/ad/bus.*" || req.url ~ "^/iad/ad/construction.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/mc.*" || req.url ~ "^/iad/ad/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/agriculture-.*" || req.url ~ "^/iad/ad/model/bus.*" || req.url ~ "^/iad/ad/model/construction.*" || req.url ~ "^/iad/ad/model/mc.*" || req.url ~ "^/iad/ad/model/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/truck.*" || req.url ~ "^/iad/ad/truck.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/agriculture-.*" || req.url ~ "^/iad/search/bus.*" || req.url ~ "^/iad/search/construction.*" || req.url ~ "^/iad/search/(mc|atv|snowmobile|moped-scooter).*" || req.url ~ "^/iad/search/(mobile-home|caravan).*" || req.url ~ "^/iad/search/truck.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__mascus_urldenied");
      std.log("TRACE: Valid client mascus does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with mascus
    # client: maya-eiendom-as
    else if (req.http.x-finn-apikey == "iwqICv4oLD4vXqqJ") {
      std.log("vcs-key: client__maya-eiendom-as");
      set req.http.x-client = "maya-eiendom-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__maya-eiendom-as_urldenied");
      std.log("TRACE: Valid client maya-eiendom-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with maya-eiendom-as
    # client: mc-oslo
    else if (req.http.x-finn-apikey == "rCouQDCx1AVLF9ir") {
      std.log("vcs-key: client__mc-oslo");
      set req.http.x-client = "mc-oslo";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/mc.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/mc.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/(mc|atv|snowmobile|moped-scooter).*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__mc-oslo_urldenied");
      std.log("TRACE: Valid client mc-oslo does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with mc-oslo
    # client: mediabemanning-as
    else if (req.http.x-finn-apikey == "KThjMaHvnYVESPyZ") {
      std.log("vcs-key: client__mediabemanning-as");
      set req.http.x-client = "mediabemanning-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__mediabemanning-as_urldenied");
      std.log("TRACE: Valid client mediabemanning-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with mediabemanning-as
    # client: mediebruket-partnergruppe
    else if (req.http.x-finn-apikey == "SbTT6Podh5ZdLFGx") {
      std.log("vcs-key: client__mediebruket-partnergruppe");
      set req.http.x-client = "mediebruket-partnergruppe";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__mediebruket-partnergruppe_urldenied");
      std.log("TRACE: Valid client mediebruket-partnergruppe does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with mediebruket-partnergruppe
    # client: meglergaarden-as
    else if (req.http.x-finn-apikey == "jOIMfr7u1sXzcQWk") {
      std.log("vcs-key: client__meglergaarden-as");
      set req.http.x-client = "meglergaarden-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__meglergaarden-as_urldenied");
      std.log("TRACE: Valid client meglergaarden-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with meglergaarden-as
    # client: meglerhuset-bjerke
    else if (req.http.x-finn-apikey == "dAPedBuyVXGh0jVp") {
      std.log("vcs-key: client__meglerhuset-bjerke");
      set req.http.x-client = "meglerhuset-bjerke";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__meglerhuset-bjerke_urldenied");
      std.log("TRACE: Valid client meglerhuset-bjerke does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with meglerhuset-bjerke
    # client: meglerhuset-bodoe-as
    else if (req.http.x-finn-apikey == "7tsrVmzKQEIGbHEF") {
      std.log("vcs-key: client__meglerhuset-bodoe-as");
      set req.http.x-client = "meglerhuset-bodoe-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__meglerhuset-bodoe-as_urldenied");
      std.log("TRACE: Valid client meglerhuset-bodoe-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with meglerhuset-bodoe-as
    # client: meglerhuset-innlandet-as
    else if (req.http.x-finn-apikey == "nN3CiFb2CVZtjkXS") {
      std.log("vcs-key: client__meglerhuset-innlandet-as");
      set req.http.x-client = "meglerhuset-innlandet-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/iad/search/van-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__meglerhuset-innlandet-as_urldenied");
      std.log("TRACE: Valid client meglerhuset-innlandet-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with meglerhuset-innlandet-as
    # client: meglerhuset-nylander-avd-administrasjon
    else if (req.http.x-finn-apikey == "69XLpGmC6Upwzgow") {
      std.log("vcs-key: client__meglerhuset-nylander-avd-administrasjon");
      set req.http.x-client = "meglerhuset-nylander-avd-administrasjon";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__meglerhuset-nylander-avd-administrasjon_urldenied");
      std.log("TRACE: Valid client meglerhuset-nylander-avd-administrasjon does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with meglerhuset-nylander-avd-administrasjon
    # client: meglerhuset-nylander-partnergruppe
    else if (req.http.x-finn-apikey == "1ftt2nvNeqhgTLe5") {
      std.log("vcs-key: client__meglerhuset-nylander-partnergruppe");
      set req.http.x-client = "meglerhuset-nylander-partnergruppe";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__meglerhuset-nylander-partnergruppe_urldenied");
      std.log("TRACE: Valid client meglerhuset-nylander-partnergruppe does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with meglerhuset-nylander-partnergruppe
    # client: meglerhuset-oestlandet-as
    else if (req.http.x-finn-apikey == "0dT3dCm53iExpgCJ") {
      std.log("vcs-key: client__meglerhuset-oestlandet-as");
      set req.http.x-client = "meglerhuset-oestlandet-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__meglerhuset-oestlandet-as_urldenied");
      std.log("TRACE: Valid client meglerhuset-oestlandet-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with meglerhuset-oestlandet-as
    # client: meglerhuset-rele-as
    else if (req.http.x-finn-apikey == "H79DUaUv4DHSn233") {
      std.log("vcs-key: client__meglerhuset-rele-as");
      set req.http.x-client = "meglerhuset-rele-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__meglerhuset-rele-as_urldenied");
      std.log("TRACE: Valid client meglerhuset-rele-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with meglerhuset-rele-as
    # client: meglerhuset-saedberg-as
    else if (req.http.x-finn-apikey == "Da4FKCWqB02rrFQ6") {
      std.log("vcs-key: client__meglerhuset-saedberg-as");
      set req.http.x-client = "meglerhuset-saedberg-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__meglerhuset-saedberg-as_urldenied");
      std.log("TRACE: Valid client meglerhuset-saedberg-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with meglerhuset-saedberg-as
    # client: meglerhuset-selvaag
    else if (req.http.x-finn-apikey == "yoG94A1hRyVjPJOc") {
      std.log("vcs-key: client__meglerhuset-selvaag");
      set req.http.x-client = "meglerhuset-selvaag";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__meglerhuset-selvaag_urldenied");
      std.log("TRACE: Valid client meglerhuset-selvaag does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with meglerhuset-selvaag
    # client: mercuri-urval-as
    else if (req.http.x-finn-apikey == "llNSLwKx7OTxGe2W") {
      std.log("vcs-key: client__mercuri-urval-as");
      set req.http.x-client = "mercuri-urval-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__mercuri-urval-as_urldenied");
      std.log("TRACE: Valid client mercuri-urval-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with mercuri-urval-as
    # client: merisma-as
    else if (req.http.x-finn-apikey == "liF7ls9zb1A3Ozpi") {
      std.log("vcs-key: client__merisma-as");
      set req.http.x-client = "merisma-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__merisma-as_urldenied");
      std.log("TRACE: Valid client merisma-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with merisma-as
    # client: mestergruppen-as-mor
    else if (req.http.x-finn-apikey == "HAbn7XPFg91mdzy6") {
      std.log("vcs-key: client__mestergruppen-as-mor");
      set req.http.x-client = "mestergruppen-as-mor";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__mestergruppen-as-mor_urldenied");
      std.log("TRACE: Valid client mestergruppen-as-mor does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with mestergruppen-as-mor
    # client: mesterhus
    else if (req.http.x-finn-apikey == "Sfou8H0gdtEnScDP") {
      std.log("vcs-key: client__mesterhus");
      set req.http.x-client = "mesterhus";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__mesterhus_urldenied");
      std.log("TRACE: Valid client mesterhus does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with mesterhus
    # client: mesterhus2
    else if (req.http.x-finn-apikey == "99sHZkKQJpfAJx7e") {
      std.log("vcs-key: client__mesterhus2");
      set req.http.x-client = "mesterhus2";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__mesterhus2_urldenied");
      std.log("TRACE: Valid client mesterhus2 does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with mesterhus2
    # client: mesterhus-tonsberg
    else if (req.http.x-finn-apikey == "S119sZMomCTrbbWK") {
      std.log("vcs-key: client__mesterhus-tonsberg");
      set req.http.x-client = "mesterhus-tonsberg";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__mesterhus-tonsberg_urldenied");
      std.log("TRACE: Valid client mesterhus-tonsberg does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with mesterhus-tonsberg
    # client: microsoft-norge-as
    else if (req.http.x-finn-apikey == "os6QvcguNTjvCyY6") {
      std.log("vcs-key: client__microsoft-norge-as");
      set req.http.x-client = "microsoft-norge-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__microsoft-norge-as_urldenied");
      std.log("TRACE: Valid client microsoft-norge-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with microsoft-norge-as
    # client: midgaard-services-as
    else if (req.http.x-finn-apikey == "k4MqRCT7VyeamLvP") {
      std.log("vcs-key: client__midgaard-services-as");
      set req.http.x-client = "midgaard-services-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__midgaard-services-as_urldenied");
      std.log("TRACE: Valid client midgaard-services-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with midgaard-services-as
    # client: mobile-bergen-as
    else if (req.http.x-finn-apikey == "PGk7MWW1VVHpnkM5") {
      std.log("vcs-key: client__mobile-bergen-as");
      set req.http.x-client = "mobile-bergen-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__mobile-bergen-as_urldenied");
      std.log("TRACE: Valid client mobile-bergen-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with mobile-bergen-as
    # client: mobile-oslo-as
    else if (req.http.x-finn-apikey == "0UnbWjREkPNdl1tC") {
      std.log("vcs-key: client__mobile-oslo-as");
      set req.http.x-client = "mobile-oslo-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__mobile-oslo-as_urldenied");
      std.log("TRACE: Valid client mobile-oslo-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with mobile-oslo-as
    # client: moere-eiendomsmegling-as-avd-molde
    else if (req.http.x-finn-apikey == "dpur9zNrjmbFJWNn") {
      std.log("vcs-key: client__moere-eiendomsmegling-as-avd-molde");
      set req.http.x-client = "moere-eiendomsmegling-as-avd-molde";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__moere-eiendomsmegling-as-avd-molde_urldenied");
      std.log("TRACE: Valid client moere-eiendomsmegling-as-avd-molde does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with moere-eiendomsmegling-as-avd-molde
    # client: moere-eiendomsmegling-as-avd-aalesund
    else if (req.http.x-finn-apikey == "4hH0mdC5NJ5tT7YW") {
      std.log("vcs-key: client__moere-eiendomsmegling-as-avd-aalesund");
      set req.http.x-client = "moere-eiendomsmegling-as-avd-aalesund";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__moere-eiendomsmegling-as-avd-aalesund_urldenied");
      std.log("TRACE: Valid client moere-eiendomsmegling-as-avd-aalesund does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with moere-eiendomsmegling-as-avd-aalesund
    # client: morud
    else if (req.http.x-finn-apikey == "RHiHbh2vUwUvyZ99") {
      std.log("vcs-key: client__morud");
      set req.http.x-client = "morud";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__morud_urldenied");
      std.log("TRACE: Valid client morud does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with morud
    # client: motorforum-partnergruppe
    else if (req.http.x-finn-apikey == "NOSpUiHiZVJjwtY5") {
      std.log("vcs-key: client__motorforum-partnergruppe");
      set req.http.x-client = "motorforum-partnergruppe";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__motorforum-partnergruppe_urldenied");
      std.log("TRACE: Valid client motorforum-partnergruppe does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with motorforum-partnergruppe
    # client: motorgrossisten-as
    else if (req.http.x-finn-apikey == "3fqBzOAQtbvOoKjA") {
      std.log("vcs-key: client__motorgrossisten-as");
      set req.http.x-client = "motorgrossisten-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/(mobile-home|caravan).*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/(mobile-home|caravan).*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__motorgrossisten-as_urldenied");
      std.log("TRACE: Valid client motorgrossisten-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with motorgrossisten-as
    # client: motorpool-handel-as
    else if (req.http.x-finn-apikey == "OzuSsjEd0s4JS5ox") {
      std.log("vcs-key: client__motorpool-handel-as");
      set req.http.x-client = "motorpool-handel-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__motorpool-handel-as_urldenied");
      std.log("TRACE: Valid client motorpool-handel-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with motorpool-handel-as
    # client: motorpool-partnergruppe
    else if (req.http.x-finn-apikey == "KpjpQeGtFF6CiRHY") {
      std.log("vcs-key: client__motorpool-partnergruppe");
      set req.http.x-client = "motorpool-partnergruppe";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__motorpool-partnergruppe_urldenied");
      std.log("TRACE: Valid client motorpool-partnergruppe does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with motorpool-partnergruppe
    # client: movement-as
    else if (req.http.x-finn-apikey == "TFVmJBXzCerAXhn5") {
      std.log("vcs-key: client__movement-as");
      set req.http.x-client = "movement-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/bap.*" || req.url ~ "^/iad/ad/bap-webstore.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/bap.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/bap.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__movement-as_urldenied");
      std.log("TRACE: Valid client movement-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with movement-as
    # client: multiconsult-as
    else if (req.http.x-finn-apikey == "IOQphr1uV1i6SB8N") {
      std.log("vcs-key: client__multiconsult-as");
      set req.http.x-client = "multiconsult-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__multiconsult-as_urldenied");
      std.log("TRACE: Valid client multiconsult-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with multiconsult-as
    # client: mur-i-soer-eiendom-as
    else if (req.http.x-finn-apikey == "557BAxXIAguP0JnJ") {
      std.log("vcs-key: client__mur-i-soer-eiendom-as");
      set req.http.x-client = "mur-i-soer-eiendom-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__mur-i-soer-eiendom-as_urldenied");
      std.log("TRACE: Valid client mur-i-soer-eiendom-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with mur-i-soer-eiendom-as
    # client: mustad-eiendom-as
    else if (req.http.x-finn-apikey == "j5lXtrKAxpQSeuYX") {
      std.log("vcs-key: client__mustad-eiendom-as");
      set req.http.x-client = "mustad-eiendom-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__mustad-eiendom-as_urldenied");
      std.log("TRACE: Valid client mustad-eiendom-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with mustad-eiendom-as
    # client: naeringsmegleren-saedberg--hodne-as
    else if (req.http.x-finn-apikey == "gzEi95eTqgxCVEAQ") {
      std.log("vcs-key: client__naeringsmegleren-saedberg--hodne-as");
      set req.http.x-client = "naeringsmegleren-saedberg--hodne-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__naeringsmegleren-saedberg--hodne-as_urldenied");
      std.log("TRACE: Valid client naeringsmegleren-saedberg--hodne-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with naeringsmegleren-saedberg--hodne-as
    # client: NAF
    else if (req.http.x-finn-apikey == "NW8lmPcKbBxXNEah") {
      std.log("vcs-key: client__NAF");
      set req.http.x-client = "NAF";
    if(((req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/mc$" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-sale/description" || req.url ~ "^/iad/search/caravan/description" || req.url ~ "^/iad/search/car-norway/description" || req.url ~ "^/iad/search/mc/description" || req.url ~ "^/iad/search/mobile-home/description" || req.url ~ "^/tp[/]?$" || req.url ~ "^/tp/ad/boat-.*" || req.url ~ "^/tp/ad/car-.*" || req.url ~ "^/tp/ad/caravan.*" || req.url ~ "^/tp/ad/\d+/?$" || req.url ~ "^/tp/ad/mc.*" || req.url ~ "^/tp/ad/mobile-home.*" || req.url ~ "^/tp/search/boat-sale" || req.url ~ "^/tp/search/caravan" || req.url ~ "^/tp/search/car-norway" || req.url ~ "^/tp/search/mc" || req.url ~ "^/tp/search/mobile-home") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__NAF_urldenied");
      std.log("TRACE: Valid client NAF does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with NAF
    # client: nai-naeringsmegling
    else if (req.http.x-finn-apikey == "V9BvLuGEdnlIxuLf") {
      std.log("vcs-key: client__nai-naeringsmegling");
      set req.http.x-client = "nai-naeringsmegling";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__nai-naeringsmegling_urldenied");
      std.log("TRACE: Valid client nai-naeringsmegling does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with nai-naeringsmegling
    # client: nammo-raufoss-as
    else if (req.http.x-finn-apikey == "ia6c5eccVulOIHTr") {
      std.log("vcs-key: client__nammo-raufoss-as");
      set req.http.x-client = "nammo-raufoss-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__nammo-raufoss-as_urldenied");
      std.log("TRACE: Valid client nammo-raufoss-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with nammo-raufoss-as
    # client: NamsenAuto
    else if (req.http.x-finn-apikey == "shdTXnYiqOqyOVPZ") {
      std.log("vcs-key: client__NamsenAuto");
      set req.http.x-client = "NamsenAuto";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/(mobile-home|caravan).*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/(mobile-home|caravan).*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__NamsenAuto_urldenied");
      std.log("TRACE: Valid client NamsenAuto does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with NamsenAuto
    # client: namsos-fritid
    else if (req.http.x-finn-apikey == "iANGkFHGLIAU7Ljw") {
      std.log("vcs-key: client__namsos-fritid");
      set req.http.x-client = "namsos-fritid";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/(mobile-home|caravan).*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/(mobile-home|caravan).*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__namsos-fritid_urldenied");
      std.log("TRACE: Valid client namsos-fritid does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with namsos-fritid
    # client: nardo-bil-as
    else if (req.http.x-finn-apikey == "n8Z4GQxh8LzG5BRD") {
      std.log("vcs-key: client__nardo-bil-as");
      set req.http.x-client = "nardo-bil-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__nardo-bil-as_urldenied");
      std.log("TRACE: Valid client nardo-bil-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with nardo-bil-as
    # client: nardo-partnergruppe
    else if (req.http.x-finn-apikey == "Nd3FjzymCH5ugRyv") {
      std.log("vcs-key: client__nardo-partnergruppe");
      set req.http.x-client = "nardo-partnergruppe";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__nardo-partnergruppe_urldenied");
      std.log("TRACE: Valid client nardo-partnergruppe does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with nardo-partnergruppe
    # client: narvik-meglern-as
    else if (req.http.x-finn-apikey == "rRJ4v7dS40MqHIV1") {
      std.log("vcs-key: client__narvik-meglern-as");
      set req.http.x-client = "narvik-meglern-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__narvik-meglern-as_urldenied");
      std.log("TRACE: Valid client narvik-meglern-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with narvik-meglern-as
    # client: national-oilwell-varco
    else if (req.http.x-finn-apikey == "4X9aBLBjPl0qBt1a") {
      std.log("vcs-key: client__national-oilwell-varco");
      set req.http.x-client = "national-oilwell-varco";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__national-oilwell-varco_urldenied");
      std.log("TRACE: Valid client national-oilwell-varco does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with national-oilwell-varco
    # client: nav
    else if (req.http.x-finn-apikey == "soGbgSxHtQ6rN1vl") {
      std.log("vcs-key: client__nav");
      set req.http.x-client = "nav";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__nav_urldenied");
      std.log("TRACE: Valid client nav does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with nav
    # client: necon-as
    else if (req.http.x-finn-apikey == "EnExmTulzGMU5yFO") {
      std.log("vcs-key: client__necon-as");
      set req.http.x-client = "necon-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__necon-as_urldenied");
      std.log("TRACE: Valid client necon-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with necon-as
    # client: nerland-autosalg
    else if (req.http.x-finn-apikey == "dBY056P3yhrHXw6r") {
      std.log("vcs-key: client__nerland-autosalg");
      set req.http.x-client = "nerland-autosalg";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__nerland-autosalg_urldenied");
      std.log("TRACE: Valid client nerland-autosalg does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with nerland-autosalg
    # client: nes-advantage-solutions
    else if (req.http.x-finn-apikey == "aP8No9ksDRzVqYt0") {
      std.log("vcs-key: client__nes-advantage-solutions");
      set req.http.x-client = "nes-advantage-solutions";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__nes-advantage-solutions_urldenied");
      std.log("TRACE: Valid client nes-advantage-solutions does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with nes-advantage-solutions
    # client: nets-norway-as
    else if (req.http.x-finn-apikey == "AOE2hcJDMU71MNTw") {
      std.log("vcs-key: client__nets-norway-as");
      set req.http.x-client = "nets-norway-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__nets-norway-as_urldenied");
      std.log("TRACE: Valid client nets-norway-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with nets-norway-as
    # client: newsec
    else if (req.http.x-finn-apikey == "ZYHDcXWqBxB5U5zO") {
      std.log("vcs-key: client__newsec");
      set req.http.x-client = "newsec";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__newsec_urldenied");
      std.log("TRACE: Valid client newsec does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with newsec
    # client: newsec-as-partnergruppe
    else if (req.http.x-finn-apikey == "zyLsYxHke7R8uI9m") {
      std.log("vcs-key: client__newsec-as-partnergruppe");
      set req.http.x-client = "newsec-as-partnergruppe";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__newsec-as-partnergruppe_urldenied");
      std.log("TRACE: Valid client newsec-as-partnergruppe does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with newsec-as-partnergruppe
    # client: nitteberg-bil-as
    else if (req.http.x-finn-apikey == "QReds9ldTAWQee6x") {
      std.log("vcs-key: client__nitteberg-bil-as");
      set req.http.x-client = "nitteberg-bil-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__nitteberg-bil-as_urldenied");
      std.log("TRACE: Valid client nitteberg-bil-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with nitteberg-bil-as
    # client: nokas-jobb
    else if (req.http.x-finn-apikey == "VW67bXa692KTYqrV") {
      std.log("vcs-key: client__nokas-jobb");
      set req.http.x-client = "nokas-jobb";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__nokas-jobb_urldenied");
      std.log("TRACE: Valid client nokas-jobb does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with nokas-jobb
    # client: nor-bygg-as
    else if (req.http.x-finn-apikey == "L6BnE5uCHX50OEmx") {
      std.log("vcs-key: client__nor-bygg-as");
      set req.http.x-client = "nor-bygg-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__nor-bygg-as_urldenied");
      std.log("TRACE: Valid client nor-bygg-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with nor-bygg-as
    # client: nordbohus
    else if (req.http.x-finn-apikey == "NQyWQ0JunuXwEPLl") {
      std.log("vcs-key: client__nordbohus");
      set req.http.x-client = "nordbohus";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__nordbohus_urldenied");
      std.log("TRACE: Valid client nordbohus does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with nordbohus
    # client: nordbolig
    else if (req.http.x-finn-apikey == "shdlyzlNZ8FeeAV1") {
      std.log("vcs-key: client__nordbolig");
      set req.http.x-client = "nordbolig";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__nordbolig_urldenied");
      std.log("TRACE: Valid client nordbolig does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with nordbolig
    # client: nordic-bil-as
    else if (req.http.x-finn-apikey == "3LygCjzcyJKywyLo") {
      std.log("vcs-key: client__nordic-bil-as");
      set req.http.x-client = "nordic-bil-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__nordic-bil-as_urldenied");
      std.log("TRACE: Valid client nordic-bil-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with nordic-bil-as
    # client: nordic-france
    else if (req.http.x-finn-apikey == "KBFbcVZjoZyHKMQ3") {
      std.log("vcs-key: client__nordic-france");
      set req.http.x-client = "nordic-france";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__nordic-france_urldenied");
      std.log("TRACE: Valid client nordic-france does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with nordic-france
    # client: nordicsearch-as
    else if (req.http.x-finn-apikey == "FWVNGUBspDIbgbtG") {
      std.log("vcs-key: client__nordicsearch-as");
      set req.http.x-client = "nordicsearch-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__nordicsearch-as_urldenied");
      std.log("TRACE: Valid client nordicsearch-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with nordicsearch-as
    # client: nordvest-bil-molde
    else if (req.http.x-finn-apikey == "itQeqfbaTjxzGgpj") {
      std.log("vcs-key: client__nordvest-bil-molde");
      set req.http.x-client = "nordvest-bil-molde";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__nordvest-bil-molde_urldenied");
      std.log("TRACE: Valid client nordvest-bil-molde does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with nordvest-bil-molde
    # client: nordvik-fauske
    else if (req.http.x-finn-apikey == "MAg6xbCO6QRF04Yr") {
      std.log("vcs-key: client__nordvik-fauske");
      set req.http.x-client = "nordvik-fauske";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__nordvik-fauske_urldenied");
      std.log("TRACE: Valid client nordvik-fauske does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with nordvik-fauske
    # client: nordvik-partners
    else if (req.http.x-finn-apikey == "zQNmXV17DHiBGuGC") {
      std.log("vcs-key: client__nordvik-partners");
      set req.http.x-client = "nordvik-partners";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__nordvik-partners_urldenied");
      std.log("TRACE: Valid client nordvik-partners does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with nordvik-partners
    # client: norgeshus
    else if (req.http.x-finn-apikey == "CItd2axxmCdBbNEd") {
      std.log("vcs-key: client__norgeshus");
      set req.http.x-client = "norgeshus";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__norgeshus_urldenied");
      std.log("TRACE: Valid client norgeshus does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with norgeshus
    # client: norges-roede-kors
    else if (req.http.x-finn-apikey == "4LjwTXIp0GNfAT5J") {
      std.log("vcs-key: client__norges-roede-kors");
      set req.http.x-client = "norges-roede-kors";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__norges-roede-kors_urldenied");
      std.log("TRACE: Valid client norges-roede-kors does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with norges-roede-kors
    # client: norlandia-care-group-as
    else if (req.http.x-finn-apikey == "HJdzqzelawVlw9xt") {
      std.log("vcs-key: client__norlandia-care-group-as");
      set req.http.x-client = "norlandia-care-group-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__norlandia-care-group-as_urldenied");
      std.log("TRACE: Valid client norlandia-care-group-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with norlandia-care-group-as
    # client: norlandia-preschools-as
    else if (req.http.x-finn-apikey == "5EeNVuvTBdKDsBCL") {
      std.log("vcs-key: client__norlandia-preschools-as");
      set req.http.x-client = "norlandia-preschools-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__norlandia-preschools-as_urldenied");
      std.log("TRACE: Valid client norlandia-preschools-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with norlandia-preschools-as
    # client: norslep
    else if (req.http.x-finn-apikey == "ozbpq0xLDwc31vo8") {
      std.log("vcs-key: client__norslep");
      set req.http.x-client = "norslep";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/truck.*" || req.url ~ "^/iad/ad/truck.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/truck.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__norslep_urldenied");
      std.log("TRACE: Valid client norslep does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with norslep
    # client: north-bridge-eiendomsforvaltning-as
    else if (req.http.x-finn-apikey == "A1GEB97y4c2jTFPf") {
      std.log("vcs-key: client__north-bridge-eiendomsforvaltning-as");
      set req.http.x-client = "north-bridge-eiendomsforvaltning-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__north-bridge-eiendomsforvaltning-as_urldenied");
      std.log("TRACE: Valid client north-bridge-eiendomsforvaltning-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with north-bridge-eiendomsforvaltning-as
    # client: ntb-autosenteret
    else if (req.http.x-finn-apikey == "vXlkA7PeTA3sp75z") {
      std.log("vcs-key: client__ntb-autosenteret");
      set req.http.x-client = "ntb-autosenteret";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__ntb-autosenteret_urldenied");
      std.log("TRACE: Valid client ntb-autosenteret does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with ntb-autosenteret
    # client: nymo-bil-as
    else if (req.http.x-finn-apikey == "CrPWnvAA1OnZpdtV") {
      std.log("vcs-key: client__nymo-bil-as");
      set req.http.x-client = "nymo-bil-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__nymo-bil-as_urldenied");
      std.log("TRACE: Valid client nymo-bil-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with nymo-bil-as
    # client: obos
    else if (req.http.x-finn-apikey == "kD39vEGnMlTLO4a1") {
      std.log("vcs-key: client__obos");
      set req.http.x-client = "obos";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__obos_urldenied");
      std.log("TRACE: Valid client obos does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with obos
    # client: obos-bbl
    else if (req.http.x-finn-apikey == "kpNmk0TFEacrerUR") {
      std.log("vcs-key: client__obos-bbl");
      set req.http.x-client = "obos-bbl";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__obos-bbl_urldenied");
      std.log("TRACE: Valid client obos-bbl does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with obos-bbl
    # client: obos-forretningsbygg-as
    else if (req.http.x-finn-apikey == "3E2fGTAEwTntnjUj") {
      std.log("vcs-key: client__obos-forretningsbygg-as");
      set req.http.x-client = "obos-forretningsbygg-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__obos-forretningsbygg-as_urldenied");
      std.log("TRACE: Valid client obos-forretningsbygg-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with obos-forretningsbygg-as
    # client: oekern-bilauksjon-as
    else if (req.http.x-finn-apikey == "HhxCXc8BujNlLRsA") {
      std.log("vcs-key: client__oekern-bilauksjon-as");
      set req.http.x-client = "oekern-bilauksjon-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__oekern-bilauksjon-as_urldenied");
      std.log("TRACE: Valid client oekern-bilauksjon-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with oekern-bilauksjon-as
    # client: oestlandske-naeringsmegling
    else if (req.http.x-finn-apikey == "BzERSEX0xCtQqGuf") {
      std.log("vcs-key: client__oestlandske-naeringsmegling");
      set req.http.x-client = "oestlandske-naeringsmegling";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__oestlandske-naeringsmegling_urldenied");
      std.log("TRACE: Valid client oestlandske-naeringsmegling does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with oestlandske-naeringsmegling
    # client: og-eiendomsmegling-as
    else if (req.http.x-finn-apikey == "o3CzWVdI3PK7GqRv") {
      std.log("vcs-key: client__og-eiendomsmegling-as");
      set req.http.x-client = "og-eiendomsmegling-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__og-eiendomsmegling-as_urldenied");
      std.log("TRACE: Valid client og-eiendomsmegling-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with og-eiendomsmegling-as
    # client: optimera-as
    else if (req.http.x-finn-apikey == "oc0B6cHkoDCaVgOx") {
      std.log("vcs-key: client__optimera-as");
      set req.http.x-client = "optimera-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__optimera-as_urldenied");
      std.log("TRACE: Valid client optimera-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with optimera-as
    # client: opus-consulting-as
    else if (req.http.x-finn-apikey == "z7nlfLDiTt6QlMmi") {
      std.log("vcs-key: client__opus-consulting-as");
      set req.http.x-client = "opus-consulting-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__opus-consulting-as_urldenied");
      std.log("TRACE: Valid client opus-consulting-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with opus-consulting-as
    # client: orion--partners-as
    else if (req.http.x-finn-apikey == "xwzuQuqBwnoDNuaI") {
      std.log("vcs-key: client__orion--partners-as");
      set req.http.x-client = "orion--partners-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__orion--partners-as_urldenied");
      std.log("TRACE: Valid client orion--partners-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with orion--partners-as
    # client: orkelbog-bil
    else if (req.http.x-finn-apikey == "QwGewhzYKbiX9Bzg") {
      std.log("vcs-key: client__orkelbog-bil");
      set req.http.x-client = "orkelbog-bil";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__orkelbog-bil_urldenied");
      std.log("TRACE: Valid client orkelbog-bil does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with orkelbog-bil
    # client: orkla-asa
    else if (req.http.x-finn-apikey == "T6gVtaR5tTE1lnPq") {
      std.log("vcs-key: client__orkla-asa");
      set req.http.x-client = "orkla-asa";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__orkla-asa_urldenied");
      std.log("TRACE: Valid client orkla-asa does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with orkla-asa
    # client: osb-consulting
    else if (req.http.x-finn-apikey == "HO3hw6RPDKzJC0IY") {
      std.log("vcs-key: client__osb-consulting");
      set req.http.x-client = "osb-consulting";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__osb-consulting_urldenied");
      std.log("TRACE: Valid client osb-consulting does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with osb-consulting
    # client: oslo-areal-as
    else if (req.http.x-finn-apikey == "i1CFqmimD2Nrmo01") {
      std.log("vcs-key: client__oslo-areal-as");
      set req.http.x-client = "oslo-areal-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__oslo-areal-as_urldenied");
      std.log("TRACE: Valid client oslo-areal-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with oslo-areal-as
    # client: oslo-bilsenter
    else if (req.http.x-finn-apikey == "C8bdFcPVq3FjAkIk") {
      std.log("vcs-key: client__oslo-bilsenter");
      set req.http.x-client = "oslo-bilsenter";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__oslo-bilsenter_urldenied");
      std.log("TRACE: Valid client oslo-bilsenter does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with oslo-bilsenter
    # client: oves-yamaha-senter-as
    else if (req.http.x-finn-apikey == "ugmMHRDgyOHK5K1E") {
      std.log("vcs-key: client__oves-yamaha-senter-as");
      set req.http.x-client = "oves-yamaha-senter-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/mc.*" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/mc.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/(mc|atv|snowmobile|moped-scooter).*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__oves-yamaha-senter-as_urldenied");
      std.log("TRACE: Valid client oves-yamaha-senter-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with oves-yamaha-senter-as
    # client: oxer-eiendom
    else if (req.http.x-finn-apikey == "TrdeJeCVUhwW8rA5") {
      std.log("vcs-key: client__oxer-eiendom");
      set req.http.x-client = "oxer-eiendom";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__oxer-eiendom_urldenied");
      std.log("TRACE: Valid client oxer-eiendom does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with oxer-eiendom
    # client: oxer-management-as
    else if (req.http.x-finn-apikey == "ouUt0y2bk1eIQK9j") {
      std.log("vcs-key: client__oxer-management-as");
      set req.http.x-client = "oxer-management-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__oxer-management-as_urldenied");
      std.log("TRACE: Valid client oxer-management-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with oxer-management-as
    # client: partnergruppe-auto--
    else if (req.http.x-finn-apikey == "1IPRDJ5EYgGUaRrH") {
      std.log("vcs-key: client__partnergruppe-auto--");
      set req.http.x-client = "partnergruppe-auto--";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__partnergruppe-auto--_urldenied");
      std.log("TRACE: Valid client partnergruppe-auto-- does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with partnergruppe-auto--
    # client: partnergruppe-krogsveen-boligutleie
    else if (req.http.x-finn-apikey == "WdjY6ZIDWle73D1M") {
      std.log("vcs-key: client__partnergruppe-krogsveen-boligutleie");
      set req.http.x-client = "partnergruppe-krogsveen-boligutleie";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__partnergruppe-krogsveen-boligutleie_urldenied");
      std.log("TRACE: Valid client partnergruppe-krogsveen-boligutleie does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with partnergruppe-krogsveen-boligutleie
    # client: partnergruppe-malling
    else if (req.http.x-finn-apikey == "YpYDiBUnXUbnOMET") {
      std.log("vcs-key: client__partnergruppe-malling");
      set req.http.x-client = "partnergruppe-malling";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__partnergruppe-malling_urldenied");
      std.log("TRACE: Valid client partnergruppe-malling does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with partnergruppe-malling
    # client: partnergruppe-nordvik
    else if (req.http.x-finn-apikey == "PFMq72puBFMphihf") {
      std.log("vcs-key: client__partnergruppe-nordvik");
      set req.http.x-client = "partnergruppe-nordvik";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__partnergruppe-nordvik_urldenied");
      std.log("TRACE: Valid client partnergruppe-nordvik does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with partnergruppe-nordvik
    # client: partnergruppe-norsk-scania
    else if (req.http.x-finn-apikey == "em6JDSI0IB0qOO2k") {
      std.log("vcs-key: client__partnergruppe-norsk-scania");
      set req.http.x-client = "partnergruppe-norsk-scania";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/bus.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/bus.*" || req.url ~ "^/iad/ad/model/truck.*" || req.url ~ "^/iad/ad/truck.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/bus.*" || req.url ~ "^/iad/search/truck.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__partnergruppe-norsk-scania_urldenied");
      std.log("TRACE: Valid client partnergruppe-norsk-scania does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with partnergruppe-norsk-scania
    # client: partners-as
    else if (req.http.x-finn-apikey == "XIYKqEnzdxPppTeZ") {
      std.log("vcs-key: client__partners-as");
      set req.http.x-client = "partners-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__partners-as_urldenied");
      std.log("TRACE: Valid client partners-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with partners-as
    # client: pbbl
    else if (req.http.x-finn-apikey == "dvzXfTCAgKcloDF4") {
      std.log("vcs-key: client__pbbl");
      set req.http.x-client = "pbbl";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__pbbl_urldenied");
      std.log("TRACE: Valid client pbbl does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with pbbl
    # client: penger-lendo
    else if (req.http.x-finn-apikey == "N9iaSggzSQhi9QUY") {
      std.log("vcs-key: client__penger-lendo");
      set req.http.x-client = "penger-lendo";
    if(((req.url ~ ".*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__penger-lendo_urldenied");
      std.log("TRACE: Valid client penger-lendo does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with penger-lendo
    # client: pepsico-nordic-norway-as
    else if (req.http.x-finn-apikey == "01W7ZvB6YiMdtWPm") {
      std.log("vcs-key: client__pepsico-nordic-norway-as");
      set req.http.x-client = "pepsico-nordic-norway-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__pepsico-nordic-norway-as_urldenied");
      std.log("TRACE: Valid client pepsico-nordic-norway-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with pepsico-nordic-norway-as
    # client: personalhuset
    else if (req.http.x-finn-apikey == "hkLZAkBCx6i2IeiG") {
      std.log("vcs-key: client__personalhuset");
      set req.http.x-client = "personalhuset";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__personalhuset_urldenied");
      std.log("TRACE: Valid client personalhuset does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with personalhuset
    # client: personal-service-og-sikkerhet-as
    else if (req.http.x-finn-apikey == "QFBKKKW752xUu5aN") {
      std.log("vcs-key: client__personal-service-og-sikkerhet-as");
      set req.http.x-client = "personal-service-og-sikkerhet-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__personal-service-og-sikkerhet-as_urldenied");
      std.log("TRACE: Valid client personal-service-og-sikkerhet-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with personal-service-og-sikkerhet-as
    # client: personal-utvelgelse-as
    else if (req.http.x-finn-apikey == "KxsRiExP6YYhJAA3") {
      std.log("vcs-key: client__personal-utvelgelse-as");
      set req.http.x-client = "personal-utvelgelse-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__personal-utvelgelse-as_urldenied");
      std.log("TRACE: Valid client personal-utvelgelse-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with personal-utvelgelse-as
    # client: plustech-as
    else if (req.http.x-finn-apikey == "dMIXxEeWRM8DdQvn") {
      std.log("vcs-key: client__plustech-as");
      set req.http.x-client = "plustech-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/agriculture-.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/construction.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/agriculture-.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/construction.*" || req.url ~ "^/iad/ad/model/truck.*" || req.url ~ "^/iad/ad/truck.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/agriculture-.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/construction.*" || req.url ~ "^/iad/search/truck.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__plustech-as_urldenied");
      std.log("TRACE: Valid client plustech-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with plustech-as
    # client: porche-center-bergen
    else if (req.http.x-finn-apikey == "mCqtJ5ALdEEEWqlW") {
      std.log("vcs-key: client__porche-center-bergen");
      set req.http.x-client = "porche-center-bergen";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__porche-center-bergen_urldenied");
      std.log("TRACE: Valid client porche-center-bergen does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with porche-center-bergen
    # client: porsgrunn-bamble-borgestad-boligbyggelag
    else if (req.http.x-finn-apikey == "yDSCXAUBSGlfQXnD") {
      std.log("vcs-key: client__porsgrunn-bamble-borgestad-boligbyggelag");
      set req.http.x-client = "porsgrunn-bamble-borgestad-boligbyggelag";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__porsgrunn-bamble-borgestad-boligbyggelag_urldenied");
      std.log("TRACE: Valid client porsgrunn-bamble-borgestad-boligbyggelag does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with porsgrunn-bamble-borgestad-boligbyggelag
    # client: presis-utleie-as
    else if (req.http.x-finn-apikey == "xw4txM9YFGnxGe4b") {
      std.log("vcs-key: client__presis-utleie-as");
      set req.http.x-client = "presis-utleie-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__presis-utleie-as_urldenied");
      std.log("TRACE: Valid client presis-utleie-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with presis-utleie-as
    # client: prime-people-hr-solutions-as
    else if (req.http.x-finn-apikey == "rvb7rK7fsn63szth") {
      std.log("vcs-key: client__prime-people-hr-solutions-as");
      set req.http.x-client = "prime-people-hr-solutions-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__prime-people-hr-solutions-as_urldenied");
      std.log("TRACE: Valid client prime-people-hr-solutions-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with prime-people-hr-solutions-as
    # client: privatmegleren
    else if (req.http.x-finn-apikey == "GgqrudwV58aI3kex") {
      std.log("vcs-key: client__privatmegleren");
      set req.http.x-client = "privatmegleren";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__privatmegleren_urldenied");
      std.log("TRACE: Valid client privatmegleren does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with privatmegleren
    # client: privatmegleren-horten
    else if (req.http.x-finn-apikey == "YOBZox97QL8iKjlw") {
      std.log("vcs-key: client__privatmegleren-horten");
      set req.http.x-client = "privatmegleren-horten";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__privatmegleren-horten_urldenied");
      std.log("TRACE: Valid client privatmegleren-horten does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with privatmegleren-horten
    # client: proaktiv-as
    else if (req.http.x-finn-apikey == "n9J2VOaKKsMYCm0u") {
      std.log("vcs-key: client__proaktiv-as");
      set req.http.x-client = "proaktiv-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__proaktiv-as_urldenied");
      std.log("TRACE: Valid client proaktiv-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with proaktiv-as
    # client: proffice-norge-as
    else if (req.http.x-finn-apikey == "1roM2kaad44mUfyZ") {
      std.log("vcs-key: client__proffice-norge-as");
      set req.http.x-client = "proffice-norge-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__proffice-norge-as_urldenied");
      std.log("TRACE: Valid client proffice-norge-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with proffice-norge-as
    # client: pwc-accounting-as
    else if (req.http.x-finn-apikey == "9HbztQJDxv3Ac4dh") {
      std.log("vcs-key: client__pwc-accounting-as");
      set req.http.x-client = "pwc-accounting-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__pwc-accounting-as_urldenied");
      std.log("TRACE: Valid client pwc-accounting-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with pwc-accounting-as
    # client: q-naeringsmegling-as
    else if (req.http.x-finn-apikey == "HvrCHFUrI31f6q7t") {
      std.log("vcs-key: client__q-naeringsmegling-as");
      set req.http.x-client = "q-naeringsmegling-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__q-naeringsmegling-as_urldenied");
      std.log("TRACE: Valid client q-naeringsmegling-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with q-naeringsmegling-as
    # client: qualified-solutions-group-as
    else if (req.http.x-finn-apikey == "1Uqo5yxPNQVkg9KC") {
      std.log("vcs-key: client__qualified-solutions-group-as");
      set req.http.x-client = "qualified-solutions-group-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__qualified-solutions-group-as_urldenied");
      std.log("TRACE: Valid client qualified-solutions-group-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with qualified-solutions-group-as
    # client: rada-engineering
    else if (req.http.x-finn-apikey == "8BL0sqEobRm8zYfh") {
      std.log("vcs-key: client__rada-engineering");
      set req.http.x-client = "rada-engineering";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__rada-engineering_urldenied");
      std.log("TRACE: Valid client rada-engineering does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with rada-engineering
    # client: ragde-eiendom-as
    else if (req.http.x-finn-apikey == "SYRQOgerQGQny1b5") {
      std.log("vcs-key: client__ragde-eiendom-as");
      set req.http.x-client = "ragde-eiendom-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__ragde-eiendom-as_urldenied");
      std.log("TRACE: Valid client ragde-eiendom-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with ragde-eiendom-as
    # client: rainfall
    else if (req.http.x-finn-apikey == "Mw8KI05zLH8UK7VP") {
      std.log("vcs-key: client__rainfall");
      set req.http.x-client = "rainfall";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__rainfall_urldenied");
      std.log("TRACE: Valid client rainfall does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with rainfall
    # client: ramboell-norge
    else if (req.http.x-finn-apikey == "zaq8HKOSTKfpha1y") {
      std.log("vcs-key: client__ramboell-norge");
      set req.http.x-client = "ramboell-norge";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__ramboell-norge_urldenied");
      std.log("TRACE: Valid client ramboell-norge does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with ramboell-norge
    # client: randstad-as
    else if (req.http.x-finn-apikey == "WUCklXwfraK7Eldy") {
      std.log("vcs-key: client__randstad-as");
      set req.http.x-client = "randstad-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__randstad-as_urldenied");
      std.log("TRACE: Valid client randstad-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with randstad-as
    # client: randstad-norway-as
    else if (req.http.x-finn-apikey == "jJzv70CdfxAR7Xwj") {
      std.log("vcs-key: client__randstad-norway-as");
      set req.http.x-client = "randstad-norway-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__randstad-norway-as_urldenied");
      std.log("TRACE: Valid client randstad-norway-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with randstad-norway-as
    # client: reaktor-partnergruppe
    else if (req.http.x-finn-apikey == "DtXII9HTtUGEZRXh") {
      std.log("vcs-key: client__reaktor-partnergruppe");
      set req.http.x-client = "reaktor-partnergruppe";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__reaktor-partnergruppe_urldenied");
      std.log("TRACE: Valid client reaktor-partnergruppe does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with reaktor-partnergruppe
    # client: realist
    else if (req.http.x-finn-apikey == "DGdr6ZB46Z08dadZ") {
      std.log("vcs-key: client__realist");
      set req.http.x-client = "realist";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__realist_urldenied");
      std.log("TRACE: Valid client realist does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with realist
    # client: realist-naeringsmegling-as
    else if (req.http.x-finn-apikey == "eedMHPcSmJ7Cs8QV") {
      std.log("vcs-key: client__realist-naeringsmegling-as");
      set req.http.x-client = "realist-naeringsmegling-as";
    if(((req.url ~ ".*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__realist-naeringsmegling-as_urldenied");
      std.log("TRACE: Valid client realist-naeringsmegling-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with realist-naeringsmegling-as
    # client: real-naeringsmegling-as
    else if (req.http.x-finn-apikey == "JlDl8oIFpUwBnYwl") {
      std.log("vcs-key: client__real-naeringsmegling-as");
      set req.http.x-client = "real-naeringsmegling-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__real-naeringsmegling-as_urldenied");
      std.log("TRACE: Valid client real-naeringsmegling-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with real-naeringsmegling-as
    # client: rede-eiendomsmegling-as
    else if (req.http.x-finn-apikey == "h2sPdE2PDW4Vv9p7") {
      std.log("vcs-key: client__rede-eiendomsmegling-as");
      set req.http.x-client = "rede-eiendomsmegling-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__rede-eiendomsmegling-as_urldenied");
      std.log("TRACE: Valid client rede-eiendomsmegling-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with rede-eiendomsmegling-as
    # client: Redningsselskapet
    else if (req.http.x-finn-apikey == "vOqJKTSTYNITNGim") {
      std.log("vcs-key: client__Redningsselskapet");
      set req.http.x-client = "Redningsselskapet";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__Redningsselskapet_urldenied");
      std.log("TRACE: Valid client Redningsselskapet does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with Redningsselskapet
    # client: reetools
    else if (req.http.x-finn-apikey == "Ovxcu0fiGXmG48fI") {
      std.log("vcs-key: client__reetools");
      set req.http.x-client = "reetools";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/bap.*" || req.url ~ "^/iad/ad/bap-webstore.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/bap.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/bap.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__reetools_urldenied");
      std.log("TRACE: Valid client reetools does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with reetools
    # client: reviva-realforvaltning-as
    else if (req.http.x-finn-apikey == "qS3MVRnpItulfYWA") {
      std.log("vcs-key: client__reviva-realforvaltning-as");
      set req.http.x-client = "reviva-realforvaltning-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__reviva-realforvaltning-as_urldenied");
      std.log("TRACE: Valid client reviva-realforvaltning-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with reviva-realforvaltning-as
    # client: roa-autoco
    else if (req.http.x-finn-apikey == "nYAybvoVbhKrXcHg") {
      std.log("vcs-key: client__roa-autoco");
      set req.http.x-client = "roa-autoco";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__roa-autoco_urldenied");
      std.log("TRACE: Valid client roa-autoco does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with roa-autoco
    # client: rom-eiendom
    else if (req.http.x-finn-apikey == "qD5smRN9JXOkWuG9") {
      std.log("vcs-key: client__rom-eiendom");
      set req.http.x-client = "rom-eiendom";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__rom-eiendom_urldenied");
      std.log("TRACE: Valid client rom-eiendom does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with rom-eiendom
    # client: roomsketcher
    else if (req.http.x-finn-apikey == "W5aR12zGfccyxrHU") {
      std.log("vcs-key: client__roomsketcher");
      set req.http.x-client = "roomsketcher";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__roomsketcher_urldenied");
      std.log("TRACE: Valid client roomsketcher does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with roomsketcher
    # client: rustad-eiendomsmegling-as
    else if (req.http.x-finn-apikey == "gTLQmq5Uao7uBafp") {
      std.log("vcs-key: client__rustad-eiendomsmegling-as");
      set req.http.x-client = "rustad-eiendomsmegling-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__rustad-eiendomsmegling-as_urldenied");
      std.log("TRACE: Valid client rustad-eiendomsmegling-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with rustad-eiendomsmegling-as
    # client: raadgiverhuset-as
    else if (req.http.x-finn-apikey == "zANZyiRYO36fQMO1") {
      std.log("vcs-key: client__raadgiverhuset-as");
      set req.http.x-client = "raadgiverhuset-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__raadgiverhuset-as_urldenied");
      std.log("TRACE: Valid client raadgiverhuset-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with raadgiverhuset-as
    # client: sagmoen-prosjekt-as
    else if (req.http.x-finn-apikey == "B2QYe2a3PMnhxGZ3") {
      std.log("vcs-key: client__sagmoen-prosjekt-as");
      set req.http.x-client = "sagmoen-prosjekt-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__sagmoen-prosjekt-as_urldenied");
      std.log("TRACE: Valid client sagmoen-prosjekt-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with sagmoen-prosjekt-as
    # client: salespeople-selection-as
    else if (req.http.x-finn-apikey == "tjJl76yErdahrrnc") {
      std.log("vcs-key: client__salespeople-selection-as");
      set req.http.x-client = "salespeople-selection-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__salespeople-selection-as_urldenied");
      std.log("TRACE: Valid client salespeople-selection-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with salespeople-selection-as
    # client: saltdalshytta-no
    else if (req.http.x-finn-apikey == "liGBnehk04vJzz2j") {
      std.log("vcs-key: client__saltdalshytta-no");
      set req.http.x-client = "saltdalshytta-no";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__saltdalshytta-no_urldenied");
      std.log("TRACE: Valid client saltdalshytta-no does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with saltdalshytta-no
    # client: sandbox-utleieplassen
    else if (req.http.x-finn-apikey == "oem8rzhNaQh4VKxU") {
      std.log("vcs-key: client__sandbox-utleieplassen");
      set req.http.x-client = "sandbox-utleieplassen";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__sandbox-utleieplassen_urldenied");
      std.log("TRACE: Valid client sandbox-utleieplassen does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with sandbox-utleieplassen
    # client: sande-bil-partnergruppe
    else if (req.http.x-finn-apikey == "1n3SN4RxopwHVDS7") {
      std.log("vcs-key: client__sande-bil-partnergruppe");
      set req.http.x-client = "sande-bil-partnergruppe";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__sande-bil-partnergruppe_urldenied");
      std.log("TRACE: Valid client sande-bil-partnergruppe does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with sande-bil-partnergruppe
    # client: sandved-as
    else if (req.http.x-finn-apikey == "PrxNd2pBHLIVzka4") {
      std.log("vcs-key: client__sandved-as");
      set req.http.x-client = "sandved-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__sandved-as_urldenied");
      std.log("TRACE: Valid client sandved-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with sandved-as
    # client: sandven-partnergruppe
    else if (req.http.x-finn-apikey == "7h8nreyWFi0cGfS0") {
      std.log("vcs-key: client__sandven-partnergruppe");
      set req.http.x-client = "sandven-partnergruppe";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__sandven-partnergruppe_urldenied");
      std.log("TRACE: Valid client sandven-partnergruppe does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with sandven-partnergruppe
    # client: schenker-as
    else if (req.http.x-finn-apikey == "XCDeYpFCdjHE2V66") {
      std.log("vcs-key: client__schenker-as");
      set req.http.x-client = "schenker-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__schenker-as_urldenied");
      std.log("TRACE: Valid client schenker-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with schenker-as
    # client: schibsted-tech-polska
    else if (req.http.x-finn-apikey == "OzyoujPJdEpvGmvf") {
      std.log("vcs-key: client__schibsted-tech-polska");
      set req.http.x-client = "schibsted-tech-polska";
    if(((req.url ~ "^/order-payment/$" || req.url ~ "^/order-payment/accounting/company-invoice/pending.*$" || req.url ~ "^/order-payment/accounting/\d+/error$" || req.url ~ "^/order-payment/accounting/\d+/exported$" || req.url ~ "^/product-catalog/.*") && req.method ~ "^(DELETE|GET|HEAD|POST|PUT)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__schibsted-tech-polska_urldenied");
      std.log("TRACE: Valid client schibsted-tech-polska does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with schibsted-tech-polska
    # client: selg-privat
    else if (req.http.x-finn-apikey == "DowRNatiof62gV46") {
      std.log("vcs-key: client__selg-privat");
      set req.http.x-client = "selg-privat";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__selg-privat_urldenied");
      std.log("TRACE: Valid client selg-privat does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with selg-privat
    # client: selvaag-bolig
    else if (req.http.x-finn-apikey == "E3F6KYlKAbOjRDo7") {
      std.log("vcs-key: client__selvaag-bolig");
      set req.http.x-client = "selvaag-bolig";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__selvaag-bolig_urldenied");
      std.log("TRACE: Valid client selvaag-bolig does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with selvaag-bolig
    # client: sem--johnsen-eiendomsmegling
    else if (req.http.x-finn-apikey == "e6DSfj0nAvu7BUXt") {
      std.log("vcs-key: client__sem--johnsen-eiendomsmegling");
      set req.http.x-client = "sem--johnsen-eiendomsmegling";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__sem--johnsen-eiendomsmegling_urldenied");
      std.log("TRACE: Valid client sem--johnsen-eiendomsmegling does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with sem--johnsen-eiendomsmegling
    # client: sem-og-johnsen-eiendomsmegling-briskeby
    else if (req.http.x-finn-apikey == "y0g16Pr4eJUTZn2Y") {
      std.log("vcs-key: client__sem-og-johnsen-eiendomsmegling-briskeby");
      set req.http.x-client = "sem-og-johnsen-eiendomsmegling-briskeby";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__sem-og-johnsen-eiendomsmegling-briskeby_urldenied");
      std.log("TRACE: Valid client sem-og-johnsen-eiendomsmegling-briskeby does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with sem-og-johnsen-eiendomsmegling-briskeby
    # client: sentinel
    else if (req.http.x-finn-apikey == "a5j3UEWGu0Rhcy9E") {
      std.log("vcs-key: client__sentinel");
      set req.http.x-client = "sentinel";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/bus.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/construction.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/bus.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/construction.*" || req.url ~ "^/iad/ad/model/truck.*" || req.url ~ "^/iad/ad/truck.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/bus.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/construction.*" || req.url ~ "^/iad/search/truck.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__sentinel_urldenied");
      std.log("TRACE: Valid client sentinel does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with sentinel
    # client: sg-finans-as
    else if (req.http.x-finn-apikey == "LcbpwzjpjZ4HDkPn") {
      std.log("vcs-key: client__sg-finans-as");
      set req.http.x-client = "sg-finans-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/agriculture-.*" || req.url ~ "^/iad/ad/bus.*" || req.url ~ "^/iad/ad/construction.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/agriculture-.*" || req.url ~ "^/iad/ad/model/bus.*" || req.url ~ "^/iad/ad/model/construction.*" || req.url ~ "^/iad/ad/model/truck.*" || req.url ~ "^/iad/ad/truck.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/agriculture-.*" || req.url ~ "^/iad/search/bus.*" || req.url ~ "^/iad/search/construction.*" || req.url ~ "^/iad/search/truck.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__sg-finans-as_urldenied");
      std.log("TRACE: Valid client sg-finans-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with sg-finans-as
    # client: sjoe-sport-service-as
    else if (req.http.x-finn-apikey == "V74iXxfa03BqHS8l") {
      std.log("vcs-key: client__sjoe-sport-service-as");
      set req.http.x-client = "sjoe-sport-service-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__sjoe-sport-service-as_urldenied");
      std.log("TRACE: Valid client sjoe-sport-service-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with sjoe-sport-service-as
    # client: skien-bilsalg-as
    else if (req.http.x-finn-apikey == "EC4DPs5FQCafu0Hl") {
      std.log("vcs-key: client__skien-bilsalg-as");
      set req.http.x-client = "skien-bilsalg-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__skien-bilsalg-as_urldenied");
      std.log("TRACE: Valid client skien-bilsalg-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with skien-bilsalg-as
    # client: skien-boligbyggelag
    else if (req.http.x-finn-apikey == "1ElC6ujAXuiS1pm1") {
      std.log("vcs-key: client__skien-boligbyggelag");
      set req.http.x-client = "skien-boligbyggelag";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__skien-boligbyggelag_urldenied");
      std.log("TRACE: Valid client skien-boligbyggelag does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with skien-boligbyggelag
    # client: skifte-eiendom-admin
    else if (req.http.x-finn-apikey == "FnmKfxUr9ZdazuXn") {
      std.log("vcs-key: client__skifte-eiendom-admin");
      set req.http.x-client = "skifte-eiendom-admin";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__skifte-eiendom-admin_urldenied");
      std.log("TRACE: Valid client skifte-eiendom-admin does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with skifte-eiendom-admin
    # client: skotvedt
    else if (req.http.x-finn-apikey == "u51LzjW1tYEXLusb") {
      std.log("vcs-key: client__skotvedt");
      set req.http.x-client = "skotvedt";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__skotvedt_urldenied");
      std.log("TRACE: Valid client skotvedt does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with skotvedt
    # client: skuteviken
    else if (req.http.x-finn-apikey == "80njE6EvLW1BV4Nx") {
      std.log("vcs-key: client__skuteviken");
      set req.http.x-client = "skuteviken";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__skuteviken_urldenied");
      std.log("TRACE: Valid client skuteviken does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with skuteviken
    # client: slatlem-molde
    else if (req.http.x-finn-apikey == "3DGaQ6QR1uNpeoL9") {
      std.log("vcs-key: client__slatlem-molde");
      set req.http.x-client = "slatlem-molde";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__slatlem-molde_urldenied");
      std.log("TRACE: Valid client slatlem-molde does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with slatlem-molde
    # client: sne-eiendom-as-tromsoe
    else if (req.http.x-finn-apikey == "rv4WrkifRTJgvpmd") {
      std.log("vcs-key: client__sne-eiendom-as-tromsoe");
      set req.http.x-client = "sne-eiendom-as-tromsoe";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__sne-eiendom-as-tromsoe_urldenied");
      std.log("TRACE: Valid client sne-eiendom-as-tromsoe does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with sne-eiendom-as-tromsoe
    # client: soerlandet-caravansenter-as
    else if (req.http.x-finn-apikey == "wo027NOGEIksC3kY") {
      std.log("vcs-key: client__soerlandet-caravansenter-as");
      set req.http.x-client = "soerlandet-caravansenter-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/(mobile-home|caravan).*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/(mobile-home|caravan).*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__soerlandet-caravansenter-as_urldenied");
      std.log("TRACE: Valid client soerlandet-caravansenter-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with soerlandet-caravansenter-as
    # client: soermegleren-as-mor
    else if (req.http.x-finn-apikey == "ZEFU9LYuq52eH5M2") {
      std.log("vcs-key: client__soermegleren-as-mor");
      set req.http.x-client = "soermegleren-as-mor";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__soermegleren-as-mor_urldenied");
      std.log("TRACE: Valid client soermegleren-as-mor does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with soermegleren-as-mor
    # client: sola-bobil-as
    else if (req.http.x-finn-apikey == "fKMMhkwbN77utieo") {
      std.log("vcs-key: client__sola-bobil-as");
      set req.http.x-client = "sola-bobil-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/(mobile-home|caravan).*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/(mobile-home|caravan).*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__sola-bobil-as_urldenied");
      std.log("TRACE: Valid client sola-bobil-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with sola-bobil-as
    # client: solberg-bil-as
    else if (req.http.x-finn-apikey == "ecIPVLmlNFz7CKaF") {
      std.log("vcs-key: client__solberg-bil-as");
      set req.http.x-client = "solberg-bil-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/construction.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/construction.*" || req.url ~ "^/iad/ad/model/mc$" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-sale/description" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/caravan/description" || req.url ~ "^/iad/search/car-norway/description" || req.url ~ "^/iad/search/construction.*" || req.url ~ "^/iad/search/mc/description" || req.url ~ "^/iad/search/mobile-home/description" || req.url ~ "^/iad/search/van-.*" || req.url ~ "^/tp[/]?$" || req.url ~ "^/tp/ad/boat-.*" || req.url ~ "^/tp/ad/car-.*" || req.url ~ "^/tp/ad/caravan.*" || req.url ~ "^/tp/ad/\d+/?$" || req.url ~ "^/tp/ad/mc.*" || req.url ~ "^/tp/ad/mobile-home.*" || req.url ~ "^/tp/search/boat-sale" || req.url ~ "^/tp/search/caravan" || req.url ~ "^/tp/search/car-norway" || req.url ~ "^/tp/search/mc" || req.url ~ "^/tp/search/mobile-home") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__solberg-bil-as_urldenied");
      std.log("TRACE: Valid client solberg-bil-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with solberg-bil-as
    # client: solberg-bruktbil
    else if (req.http.x-finn-apikey == "tjt1qnlO6rH6S9et") {
      std.log("vcs-key: client__solberg-bruktbil");
      set req.http.x-client = "solberg-bruktbil";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__solberg-bruktbil_urldenied");
      std.log("TRACE: Valid client solberg-bruktbil does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with solberg-bruktbil
    # client: solberg-gruppen-partnergruppe
    else if (req.http.x-finn-apikey == "EpUaIFDeKFz9YBze") {
      std.log("vcs-key: client__solberg-gruppen-partnergruppe");
      set req.http.x-client = "solberg-gruppen-partnergruppe";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__solberg-gruppen-partnergruppe_urldenied");
      std.log("TRACE: Valid client solberg-gruppen-partnergruppe does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with solberg-gruppen-partnergruppe
    # client: solmegleren
    else if (req.http.x-finn-apikey == "6zEPGF9g9cF0zCYv") {
      std.log("vcs-key: client__solmegleren");
      set req.http.x-client = "solmegleren";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__solmegleren_urldenied");
      std.log("TRACE: Valid client solmegleren does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with solmegleren
    # client: solstrand-boliger-as
    else if (req.http.x-finn-apikey == "w6838rIujyMa0kyV") {
      std.log("vcs-key: client__solstrand-boliger-as");
      set req.http.x-client = "solstrand-boliger-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__solstrand-boliger-as_urldenied");
      std.log("TRACE: Valid client solstrand-boliger-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with solstrand-boliger-as
    # client: somme-as
    else if (req.http.x-finn-apikey == "RC95XXYQJD5IsLWh") {
      std.log("vcs-key: client__somme-as");
      set req.http.x-client = "somme-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__somme-as_urldenied");
      std.log("TRACE: Valid client somme-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with somme-as
    # client: sonans-karriere-as
    else if (req.http.x-finn-apikey == "D72okRVPdKziolRS") {
      std.log("vcs-key: client__sonans-karriere-as");
      set req.http.x-client = "sonans-karriere-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__sonans-karriere-as_urldenied");
      std.log("TRACE: Valid client sonans-karriere-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with sonans-karriere-as
    # client: sopra-steria-as
    else if (req.http.x-finn-apikey == "tC7uObrYrbfq4EUL") {
      std.log("vcs-key: client__sopra-steria-as");
      set req.http.x-client = "sopra-steria-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__sopra-steria-as_urldenied");
      std.log("TRACE: Valid client sopra-steria-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with sopra-steria-as
    # client: sor-bolig-as
    else if (req.http.x-finn-apikey == "6EUYN9Z3JHWwN2Ey") {
      std.log("vcs-key: client__sor-bolig-as");
      set req.http.x-client = "sor-bolig-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__sor-bolig-as_urldenied");
      std.log("TRACE: Valid client sor-bolig-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with sor-bolig-as
    # client: sormegleren
    else if (req.http.x-finn-apikey == "qb653MP27XcrgDyv") {
      std.log("vcs-key: client__sormegleren");
      set req.http.x-client = "sormegleren";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__sormegleren_urldenied");
      std.log("TRACE: Valid client sormegleren does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with sormegleren
    # client: soylen-eiendom
    else if (req.http.x-finn-apikey == "kF7rh7B9MwzsOBEV") {
      std.log("vcs-key: client__soylen-eiendom");
      set req.http.x-client = "soylen-eiendom";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__soylen-eiendom_urldenied");
      std.log("TRACE: Valid client soylen-eiendom does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with soylen-eiendom
    # client: spabo-eiendom
    else if (req.http.x-finn-apikey == "z7kMVESmQVCJZNl4") {
      std.log("vcs-key: client__spabo-eiendom");
      set req.http.x-client = "spabo-eiendom";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__spabo-eiendom_urldenied");
      std.log("TRACE: Valid client spabo-eiendom does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with spabo-eiendom
    # client: spabo-eiendom-partnergruppe
    else if (req.http.x-finn-apikey == "57UYJ6mjfDJiFnai") {
      std.log("vcs-key: client__spabo-eiendom-partnergruppe");
      set req.http.x-client = "spabo-eiendom-partnergruppe";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__spabo-eiendom-partnergruppe_urldenied");
      std.log("TRACE: Valid client spabo-eiendom-partnergruppe does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with spabo-eiendom-partnergruppe
    # client: spabo-naering
    else if (req.http.x-finn-apikey == "rdlGMG7JrTuqd6dS") {
      std.log("vcs-key: client__spabo-naering");
      set req.http.x-client = "spabo-naering";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__spabo-naering_urldenied");
      std.log("TRACE: Valid client spabo-naering does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with spabo-naering
    # client: sparebank1-sr-bank
    else if (req.http.x-finn-apikey == "epQzP5g50tjbCvkg") {
      std.log("vcs-key: client__sparebank1-sr-bank");
      set req.http.x-client = "sparebank1-sr-bank";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__sparebank1-sr-bank_urldenied");
      std.log("TRACE: Valid client sparebank1-sr-bank does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with sparebank1-sr-bank
    # client: speed-motorcenter-as
    else if (req.http.x-finn-apikey == "COtAKII31gO2NjCm") {
      std.log("vcs-key: client__speed-motorcenter-as");
      set req.http.x-client = "speed-motorcenter-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/mc.*" || req.url ~ "^/iad/ad/model/mc.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/(mc|atv|snowmobile|moped-scooter).*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__speed-motorcenter-as_urldenied");
      std.log("TRACE: Valid client speed-motorcenter-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with speed-motorcenter-as
    # client: spt-payment
    else if (req.http.x-finn-apikey == "2MzZ5iyyqgl4DVk9") {
      std.log("vcs-key: client__spt-payment");
      set req.http.x-client = "spt-payment";
    if(((req.url ~ "^/order-payment/payment/callback/.*" || req.url ~ "^/trade-callback-handler/.*") && req.method ~ "^(DELETE|GET|HEAD|POST|PUT)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__spt-payment_urldenied");
      std.log("TRACE: Valid client spt-payment does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with spt-payment
    # client: spz-bil
    else if (req.http.x-finn-apikey == "8P8UpCWZBZHKD0Mg") {
      std.log("vcs-key: client__spz-bil");
      set req.http.x-client = "spz-bil";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__spz-bil_urldenied");
      std.log("TRACE: Valid client spz-bil does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with spz-bil
    # client: stamsaas-fritid-as
    else if (req.http.x-finn-apikey == "IihVzkd8XvfLEeHO") {
      std.log("vcs-key: client__stamsaas-fritid-as");
      set req.http.x-client = "stamsaas-fritid-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/bap.*" || req.url ~ "^/iad/ad/bap-webstore.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/bap.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/(mobile-home|caravan).*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/bap.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/(mobile-home|caravan).*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__stamsaas-fritid-as_urldenied");
      std.log("TRACE: Valid client stamsaas-fritid-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with stamsaas-fritid-as
    # client: stamsaas-moss-as
    else if (req.http.x-finn-apikey == "ImDGpqfazrbllIes") {
      std.log("vcs-key: client__stamsaas-moss-as");
      set req.http.x-client = "stamsaas-moss-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__stamsaas-moss-as_urldenied");
      std.log("TRACE: Valid client stamsaas-moss-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with stamsaas-moss-as
    # client: stavanger-kommune
    else if (req.http.x-finn-apikey == "uTnfyJDqUP8xWMOP") {
      std.log("vcs-key: client__stavanger-kommune");
      set req.http.x-client = "stavanger-kommune";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__stavanger-kommune_urldenied");
      std.log("TRACE: Valid client stavanger-kommune does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with stavanger-kommune
    # client: stavlund-as
    else if (req.http.x-finn-apikey == "OfgpblaqWru6M1Il") {
      std.log("vcs-key: client__stavlund-as");
      set req.http.x-client = "stavlund-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__stavlund-as_urldenied");
      std.log("TRACE: Valid client stavlund-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with stavlund-as
    # client: stiftsstaden-boligutleie-as
    else if (req.http.x-finn-apikey == "aZw6AnbFgVLXBwYK") {
      std.log("vcs-key: client__stiftsstaden-boligutleie-as");
      set req.http.x-client = "stiftsstaden-boligutleie-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__stiftsstaden-boligutleie-as_urldenied");
      std.log("TRACE: Valid client stiftsstaden-boligutleie-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with stiftsstaden-boligutleie-as
    # client: storebrand-asset-management-as
    else if (req.http.x-finn-apikey == "FawfOjRd4iSnWwHa") {
      std.log("vcs-key: client__storebrand-asset-management-as");
      set req.http.x-client = "storebrand-asset-management-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__storebrand-asset-management-as_urldenied");
      std.log("TRACE: Valid client storebrand-asset-management-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with storebrand-asset-management-as
    # client: strand-autosalg-as
    else if (req.http.x-finn-apikey == "1qfAznmBoClr4mX6") {
      std.log("vcs-key: client__strand-autosalg-as");
      set req.http.x-client = "strand-autosalg-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__strand-autosalg-as_urldenied");
      std.log("TRACE: Valid client strand-autosalg-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with strand-autosalg-as
    # client: strandveien-auto-as
    else if (req.http.x-finn-apikey == "TMr2MLUq7jlPmPgG") {
      std.log("vcs-key: client__strandveien-auto-as");
      set req.http.x-client = "strandveien-auto-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__strandveien-auto-as_urldenied");
      std.log("TRACE: Valid client strandveien-auto-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with strandveien-auto-as
    # client: stray--co-eiendomsmegling-as
    else if (req.http.x-finn-apikey == "Uz9zK3COz5DzbVqZ") {
      std.log("vcs-key: client__stray--co-eiendomsmegling-as");
      set req.http.x-client = "stray--co-eiendomsmegling-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__stray--co-eiendomsmegling-as_urldenied");
      std.log("TRACE: Valid client stray--co-eiendomsmegling-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with stray--co-eiendomsmegling-as
    # client: studentconsulting-norge-as
    else if (req.http.x-finn-apikey == "DbswtPU0dMFfXgWq") {
      std.log("vcs-key: client__studentconsulting-norge-as");
      set req.http.x-client = "studentconsulting-norge-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__studentconsulting-norge-as_urldenied");
      std.log("TRACE: Valid client studentconsulting-norge-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with studentconsulting-norge-as
    # client: style-auto-as
    else if (req.http.x-finn-apikey == "jI4XjyoRoIoDbnc7") {
      std.log("vcs-key: client__style-auto-as");
      set req.http.x-client = "style-auto-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__style-auto-as_urldenied");
      std.log("TRACE: Valid client style-auto-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with style-auto-as
    # client: SullandPartnergruppe
    else if (req.http.x-finn-apikey == "tuokFPgdVNBxS5Og") {
      std.log("vcs-key: client__SullandPartnergruppe");
      set req.http.x-client = "SullandPartnergruppe";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__SullandPartnergruppe_urldenied");
      std.log("TRACE: Valid client SullandPartnergruppe does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with SullandPartnergruppe
    # client: sundal-yacht
    else if (req.http.x-finn-apikey == "ZFC3rpHgbPTxAJ5x") {
      std.log("vcs-key: client__sundal-yacht");
      set req.http.x-client = "sundal-yacht";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__sundal-yacht_urldenied");
      std.log("TRACE: Valid client sundal-yacht does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with sundal-yacht
    # client: sweco-norge-as
    else if (req.http.x-finn-apikey == "A83m73DhreXJtg0t") {
      std.log("vcs-key: client__sweco-norge-as");
      set req.http.x-client = "sweco-norge-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__sweco-norge-as_urldenied");
      std.log("TRACE: Valid client sweco-norge-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with sweco-norge-as
    # client: swiftcourt - digital kontrakt
    else if (req.http.x-finn-apikey == "AT9gdOGG7sGurj6d") {
      std.log("vcs-key: client__swiftcourt - digital kontrakt");
      set req.http.x-client = "swiftcourt - digital kontrakt";
    if(((req.url ~ "^/iad/ad/model/.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/minekjoretoy/.*" || req.url ~ "^/tp/.*") && req.method ~ "^(GET|HEAD|POST)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__swiftcourt - digital kontrakt_urldenied");
      std.log("TRACE: Valid client swiftcourt - digital kontrakt does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with swiftcourt - digital kontrakt
    # client: sykehuspartner
    else if (req.http.x-finn-apikey == "9dlHbx84wFSu1J8w") {
      std.log("vcs-key: client__sykehuspartner");
      set req.http.x-client = "sykehuspartner";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__sykehuspartner_urldenied");
      std.log("TRACE: Valid client sykehuspartner does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with sykehuspartner
    # client: synsam-norge-as
    else if (req.http.x-finn-apikey == "HiLt3fEzfR2eETVo") {
      std.log("vcs-key: client__synsam-norge-as");
      set req.http.x-client = "synsam-norge-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__synsam-norge-as_urldenied");
      std.log("TRACE: Valid client synsam-norge-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with synsam-norge-as
    # client: systemhus-norge-as-mor
    else if (req.http.x-finn-apikey == "UyjuZ7oW5zIA08eh") {
      std.log("vcs-key: client__systemhus-norge-as-mor");
      set req.http.x-client = "systemhus-norge-as-mor";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__systemhus-norge-as-mor_urldenied");
      std.log("TRACE: Valid client systemhus-norge-as-mor does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with systemhus-norge-as-mor
    # client: technogarden
    else if (req.http.x-finn-apikey == "zo8vyWVHvroAcBcA") {
      std.log("vcs-key: client__technogarden");
      set req.http.x-client = "technogarden";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__technogarden_urldenied");
      std.log("TRACE: Valid client technogarden does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with technogarden
    # client: technopolis-as
    else if (req.http.x-finn-apikey == "bElH6hSaaaFvdFhF") {
      std.log("vcs-key: client__technopolis-as");
      set req.http.x-client = "technopolis-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__technopolis-as_urldenied");
      std.log("TRACE: Valid client technopolis-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with technopolis-as
    # client: tekna-teknisk-naturvitenskapelig-forening
    else if (req.http.x-finn-apikey == "brufqYhRd9Qhpwj9") {
      std.log("vcs-key: client__tekna-teknisk-naturvitenskapelig-forening");
      set req.http.x-client = "tekna-teknisk-naturvitenskapelig-forening";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__tekna-teknisk-naturvitenskapelig-forening_urldenied");
      std.log("TRACE: Valid client tekna-teknisk-naturvitenskapelig-forening does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with tekna-teknisk-naturvitenskapelig-forening
    # client: teknisk-bureau-as
    else if (req.http.x-finn-apikey == "yB5RIssMkBAWJ0xg") {
      std.log("vcs-key: client__teknisk-bureau-as");
      set req.http.x-client = "teknisk-bureau-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/agriculture-.*" || req.url ~ "^/iad/ad/bus.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/construction.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/mc.*" || req.url ~ "^/iad/ad/model/agriculture-.*" || req.url ~ "^/iad/ad/model/bus.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/construction.*" || req.url ~ "^/iad/ad/model/mc.*" || req.url ~ "^/iad/ad/model/truck.*" || req.url ~ "^/iad/ad/truck.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/agriculture-.*" || req.url ~ "^/iad/search/bus.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/construction.*" || req.url ~ "^/iad/search/(mc|atv|snowmobile|moped-scooter).*" || req.url ~ "^/iad/search/truck.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__teknisk-bureau-as_urldenied");
      std.log("TRACE: Valid client teknisk-bureau-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with teknisk-bureau-as
    # client: telenor-norge-as
    else if (req.http.x-finn-apikey == "v5AkCCXNWzhw1gkE") {
      std.log("vcs-key: client__telenor-norge-as");
      set req.http.x-client = "telenor-norge-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__telenor-norge-as_urldenied");
      std.log("TRACE: Valid client telenor-norge-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with telenor-norge-as
    # client: tellus-eiendom
    else if (req.http.x-finn-apikey == "3SkjkYP9JLJyZUaP") {
      std.log("vcs-key: client__tellus-eiendom");
      set req.http.x-client = "tellus-eiendom";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__tellus-eiendom_urldenied");
      std.log("TRACE: Valid client tellus-eiendom does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with tellus-eiendom
    # client: tempo-bemanning
    else if (req.http.x-finn-apikey == "lqCbWg0R7jDoybss") {
      std.log("vcs-key: client__tempo-bemanning");
      set req.http.x-client = "tempo-bemanning";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__tempo-bemanning_urldenied");
      std.log("TRACE: Valid client tempo-bemanning does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with tempo-bemanning
    # client: thales-norway-as
    else if (req.http.x-finn-apikey == "0eWa9HamUwYnIuJV") {
      std.log("vcs-key: client__thales-norway-as");
      set req.http.x-client = "thales-norway-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__thales-norway-as_urldenied");
      std.log("TRACE: Valid client thales-norway-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with thales-norway-as
    # client: the-adecco-group
    else if (req.http.x-finn-apikey == "YxIxjkM2scN3Yw6p") {
      std.log("vcs-key: client__the-adecco-group");
      set req.http.x-client = "the-adecco-group";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__the-adecco-group_urldenied");
      std.log("TRACE: Valid client the-adecco-group does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with the-adecco-group
    # client: thon-eiendom
    else if (req.http.x-finn-apikey == "RGgYEFjRgu2PJHim") {
      std.log("vcs-key: client__thon-eiendom");
      set req.http.x-client = "thon-eiendom";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__thon-eiendom_urldenied");
      std.log("TRACE: Valid client thon-eiendom does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with thon-eiendom
    # client: tieto-norway-as
    else if (req.http.x-finn-apikey == "BpKaEY9SGI624BIq") {
      std.log("vcs-key: client__tieto-norway-as");
      set req.http.x-client = "tieto-norway-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__tieto-norway-as_urldenied");
      std.log("TRACE: Valid client tieto-norway-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with tieto-norway-as
    # client: tilhenger-spesialisten-as
    else if (req.http.x-finn-apikey == "iPQCRXKAEdcktzkq") {
      std.log("vcs-key: client__tilhenger-spesialisten-as");
      set req.http.x-client = "tilhenger-spesialisten-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/bap.*" || req.url ~ "^/iad/ad/bap-webstore.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/bap.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/bap.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__tilhenger-spesialisten-as_urldenied");
      std.log("TRACE: Valid client tilhenger-spesialisten-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with tilhenger-spesialisten-as
    # client: tinde-hytter-as
    else if (req.http.x-finn-apikey == "chukB9IQEJSm8hEt") {
      std.log("vcs-key: client__tinde-hytter-as");
      set req.http.x-client = "tinde-hytter-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__tinde-hytter-as_urldenied");
      std.log("TRACE: Valid client tinde-hytter-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with tinde-hytter-as
    # client: tinde-utvikling-as
    else if (req.http.x-finn-apikey == "MJZZ32vHdZ6Dw0ji") {
      std.log("vcs-key: client__tinde-utvikling-as");
      set req.http.x-client = "tinde-utvikling-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__tinde-utvikling-as_urldenied");
      std.log("TRACE: Valid client tinde-utvikling-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with tinde-utvikling-as
    # client: tk-motor
    else if (req.http.x-finn-apikey == "vjv2qSPhpIKSzcH5") {
      std.log("vcs-key: client__tk-motor");
      set req.http.x-client = "tk-motor";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/mc.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/mc.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/(mc|atv|snowmobile|moped-scooter).*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__tk-motor_urldenied");
      std.log("TRACE: Valid client tk-motor does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with tk-motor
    # client: toerset-trading-as
    else if (req.http.x-finn-apikey == "36imsu9fCRYjBL0p") {
      std.log("vcs-key: client__toerset-trading-as");
      set req.http.x-client = "toerset-trading-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/agriculture-.*" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/bus.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/construction.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/agriculture-.*" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/bus.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/construction.*" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/model/truck.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/ad/truck.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/agriculture-.*" || req.url ~ "^/iad/search/boat-.*" || req.url ~ "^/iad/search/bus.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/construction.*" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/iad/search/truck.*" || req.url ~ "^/iad/search/van-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__toerset-trading-as_urldenied");
      std.log("TRACE: Valid client toerset-trading-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with toerset-trading-as
    # client: topp-auto-as
    else if (req.http.x-finn-apikey == "cLYyNOWR9mhnFcLy") {
      std.log("vcs-key: client__topp-auto-as");
      set req.http.x-client = "topp-auto-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__topp-auto-as_urldenied");
      std.log("TRACE: Valid client topp-auto-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with topp-auto-as
    # client: top-temp-holding-as
    else if (req.http.x-finn-apikey == "Y6HJbefLjanJStxj") {
      std.log("vcs-key: client__top-temp-holding-as");
      set req.http.x-client = "top-temp-holding-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__top-temp-holding-as_urldenied");
      std.log("TRACE: Valid client top-temp-holding-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with top-temp-holding-as
    # client: torgallmenningen-eiendomsmegling
    else if (req.http.x-finn-apikey == "Tumf39MAAZwbN0TR") {
      std.log("vcs-key: client__torgallmenningen-eiendomsmegling");
      set req.http.x-client = "torgallmenningen-eiendomsmegling";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__torgallmenningen-eiendomsmegling_urldenied");
      std.log("TRACE: Valid client torgallmenningen-eiendomsmegling does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with torgallmenningen-eiendomsmegling
    # client: totaleiendom
    else if (req.http.x-finn-apikey == "hj8bHGTEUo0BHvPb") {
      std.log("vcs-key: client__totaleiendom");
      set req.http.x-client = "totaleiendom";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__totaleiendom_urldenied");
      std.log("TRACE: Valid client totaleiendom does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with totaleiendom
    # client: totalplan
    else if (req.http.x-finn-apikey == "fzVb2MxuIjQjtOls") {
      std.log("vcs-key: client__totalplan");
      set req.http.x-client = "totalplan";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__totalplan_urldenied");
      std.log("TRACE: Valid client totalplan does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with totalplan
    # client: toyota-bauda-partnergruppe
    else if (req.http.x-finn-apikey == "VUL3Y0mLZNRL6CVI") {
      std.log("vcs-key: client__toyota-bauda-partnergruppe");
      set req.http.x-client = "toyota-bauda-partnergruppe";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__toyota-bauda-partnergruppe_urldenied");
      std.log("TRACE: Valid client toyota-bauda-partnergruppe does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with toyota-bauda-partnergruppe
    # client: toyota-oslo
    else if (req.http.x-finn-apikey == "mBtonVOs1O48NTBf") {
      std.log("vcs-key: client__toyota-oslo");
      set req.http.x-client = "toyota-oslo";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__toyota-oslo_urldenied");
      std.log("TRACE: Valid client toyota-oslo does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with toyota-oslo
    # client: toyota-partnergruppe
    else if (req.http.x-finn-apikey == "dbUSVjkz4B2QihWB") {
      std.log("vcs-key: client__toyota-partnergruppe");
      set req.http.x-client = "toyota-partnergruppe";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__toyota-partnergruppe_urldenied");
      std.log("TRACE: Valid client toyota-partnergruppe does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with toyota-partnergruppe
    # client: toyota-soervest-as
    else if (req.http.x-finn-apikey == "R5h2nj7LWVX9WypV") {
      std.log("vcs-key: client__toyota-soervest-as");
      set req.http.x-client = "toyota-soervest-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__toyota-soervest-as_urldenied");
      std.log("TRACE: Valid client toyota-soervest-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with toyota-soervest-as
    # client: tp-brage-finans
    else if (req.http.x-finn-apikey == "NTQ57v9OAxgvByk5") {
      std.log("vcs-key: client__tp-brage-finans");
      set req.http.x-client = "tp-brage-finans";
    if(((req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/mc$" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-sale/description" || req.url ~ "^/iad/search/caravan/description" || req.url ~ "^/iad/search/car-norway/description" || req.url ~ "^/iad/search/mc/description" || req.url ~ "^/iad/search/mobile-home/description" || req.url ~ "^/tp[/]?$" || req.url ~ "^/tp/ad/boat-.*" || req.url ~ "^/tp/ad/car-.*" || req.url ~ "^/tp/ad/caravan.*" || req.url ~ "^/tp/ad/\d+/?$" || req.url ~ "^/tp/ad/mc.*" || req.url ~ "^/tp/ad/mobile-home.*" || req.url ~ "^/tp/search/boat-sale" || req.url ~ "^/tp/search/caravan" || req.url ~ "^/tp/search/car-norway" || req.url ~ "^/tp/search/mc" || req.url ~ "^/tp/search/mobile-home") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__tp-brage-finans_urldenied");
      std.log("TRACE: Valid client tp-brage-finans does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with tp-brage-finans
    # client: tp-dnb
    else if (req.http.x-finn-apikey == "qbOStHvRwf4VnaAV") {
      std.log("vcs-key: client__tp-dnb");
      set req.http.x-client = "tp-dnb";
    if(((req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/mc$" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-sale/description" || req.url ~ "^/iad/search/caravan/description" || req.url ~ "^/iad/search/car-norway/description" || req.url ~ "^/iad/search/mc/description" || req.url ~ "^/iad/search/mobile-home/description" || req.url ~ "^/tp[/]?$" || req.url ~ "^/tp/ad/boat-.*" || req.url ~ "^/tp/ad/car-.*" || req.url ~ "^/tp/ad/caravan.*" || req.url ~ "^/tp/ad/\d+/?$" || req.url ~ "^/tp/ad/mc.*" || req.url ~ "^/tp/ad/mobile-home.*" || req.url ~ "^/tp/search/boat-sale" || req.url ~ "^/tp/search/caravan" || req.url ~ "^/tp/search/car-norway" || req.url ~ "^/tp/search/mc" || req.url ~ "^/tp/search/mobile-home") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__tp-dnb_urldenied");
      std.log("TRACE: Valid client tp-dnb does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with tp-dnb
    # client: tp-eiendomsmegling
    else if (req.http.x-finn-apikey == "Dr0IqdOTI3g8EcRg") {
      std.log("vcs-key: client__tp-eiendomsmegling");
      set req.http.x-client = "tp-eiendomsmegling";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__tp-eiendomsmegling_urldenied");
      std.log("TRACE: Valid client tp-eiendomsmegling does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with tp-eiendomsmegling
    # client: tp-if-forsikring
    else if (req.http.x-finn-apikey == "FBkavetKgzzz7xZX") {
      std.log("vcs-key: client__tp-if-forsikring");
      set req.http.x-client = "tp-if-forsikring";
    if(((req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/mc$" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-sale/description" || req.url ~ "^/iad/search/caravan/description" || req.url ~ "^/iad/search/car-norway/description" || req.url ~ "^/iad/search/mc/description" || req.url ~ "^/iad/search/mobile-home/description" || req.url ~ "^/tp[/]?$" || req.url ~ "^/tp/ad/boat-.*" || req.url ~ "^/tp/ad/car-.*" || req.url ~ "^/tp/ad/caravan.*" || req.url ~ "^/tp/ad/\d+/?$" || req.url ~ "^/tp/ad/mc.*" || req.url ~ "^/tp/ad/mobile-home.*" || req.url ~ "^/tp/search/boat-sale" || req.url ~ "^/tp/search/caravan" || req.url ~ "^/tp/search/car-norway" || req.url ~ "^/tp/search/mc" || req.url ~ "^/tp/search/mobile-home") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__tp-if-forsikring_urldenied");
      std.log("TRACE: Valid client tp-if-forsikring does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with tp-if-forsikring
    # client: tp-santander
    else if (req.http.x-finn-apikey == "XoHScGOI9R2DrrYX") {
      std.log("vcs-key: client__tp-santander");
      set req.http.x-client = "tp-santander";
    if(((req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/mc$" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-sale/description" || req.url ~ "^/iad/search/caravan/description" || req.url ~ "^/iad/search/car-norway/description" || req.url ~ "^/iad/search/mc/description" || req.url ~ "^/iad/search/mobile-home/description" || req.url ~ "^/tp[/]?$" || req.url ~ "^/tp/ad/boat-.*" || req.url ~ "^/tp/ad/car-.*" || req.url ~ "^/tp/ad/caravan.*" || req.url ~ "^/tp/ad/\d+/?$" || req.url ~ "^/tp/ad/mc.*" || req.url ~ "^/tp/ad/mobile-home.*" || req.url ~ "^/tp/search/boat-sale" || req.url ~ "^/tp/search/caravan" || req.url ~ "^/tp/search/car-norway" || req.url ~ "^/tp/search/mc" || req.url ~ "^/tp/search/mobile-home") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__tp-santander_urldenied");
      std.log("TRACE: Valid client tp-santander does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with tp-santander
    # client: tp-skandiabanken
    else if (req.http.x-finn-apikey == "RmlGgPgU09s6ENkD") {
      std.log("vcs-key: client__tp-skandiabanken");
      set req.http.x-client = "tp-skandiabanken";
    if(((req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/mc$" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-sale/description" || req.url ~ "^/iad/search/caravan/description" || req.url ~ "^/iad/search/car-norway/description" || req.url ~ "^/iad/search/mc/description" || req.url ~ "^/iad/search/mobile-home/description" || req.url ~ "^/tp[/]?$" || req.url ~ "^/tp/ad/boat-.*" || req.url ~ "^/tp/ad/car-.*" || req.url ~ "^/tp/ad/caravan.*" || req.url ~ "^/tp/ad/\d+/?$" || req.url ~ "^/tp/ad/mc.*" || req.url ~ "^/tp/ad/mobile-home.*" || req.url ~ "^/tp/search/boat-sale" || req.url ~ "^/tp/search/caravan" || req.url ~ "^/tp/search/car-norway" || req.url ~ "^/tp/search/mc" || req.url ~ "^/tp/search/mobile-home") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__tp-skandiabanken_urldenied");
      std.log("TRACE: Valid client tp-skandiabanken does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with tp-skandiabanken
    # client: translift
    else if (req.http.x-finn-apikey == "lEd7C2XHJC6GHnV0") {
      std.log("vcs-key: client__translift");
      set req.http.x-client = "translift";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/bap.*" || req.url ~ "^/iad/ad/bap-webstore.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/bap.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/bap.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__translift_urldenied");
      std.log("TRACE: Valid client translift does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with translift
    # client: trn-baat
    else if (req.http.x-finn-apikey == "6LRLAmH1pxhI5Xuv") {
      std.log("vcs-key: client__trn-baat");
      set req.http.x-client = "trn-baat";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__trn-baat_urldenied");
      std.log("TRACE: Valid client trn-baat does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with trn-baat
    # client: troendelag-trucksenter
    else if (req.http.x-finn-apikey == "RTFPor3hNLAo1hOo") {
      std.log("vcs-key: client__troendelag-trucksenter");
      set req.http.x-client = "troendelag-trucksenter";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/agriculture-.*" || req.url ~ "^/iad/ad/bus.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/construction.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/agriculture-.*" || req.url ~ "^/iad/ad/model/bus.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/construction.*" || req.url ~ "^/iad/ad/model/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/truck.*" || req.url ~ "^/iad/ad/truck.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/agriculture-.*" || req.url ~ "^/iad/search/bus.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/construction.*" || req.url ~ "^/iad/search/(mobile-home|caravan).*" || req.url ~ "^/iad/search/truck.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__troendelag-trucksenter_urldenied");
      std.log("TRACE: Valid client troendelag-trucksenter does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with troendelag-trucksenter
    # client: trucknor-partnergruppe
    else if (req.http.x-finn-apikey == "5Av76OOwbNAxfM2d") {
      std.log("vcs-key: client__trucknor-partnergruppe");
      set req.http.x-client = "trucknor-partnergruppe";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/truck.*" || req.url ~ "^/iad/ad/truck.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/truck.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__trucknor-partnergruppe_urldenied");
      std.log("TRACE: Valid client trucknor-partnergruppe does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with trucknor-partnergruppe
    # client: try-apt-alle-markeder
    else if (req.http.x-finn-apikey == "ispZcO0LAxNvKzAv") {
      std.log("vcs-key: client__try-apt-alle-markeder");
      set req.http.x-client = "try-apt-alle-markeder";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/agriculture-.*" || req.url ~ "^/iad/ad/bap.*" || req.url ~ "^/iad/ad/bap-webstore.*" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/bus.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/construction.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/mc.*" || req.url ~ "^/iad/ad/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/agriculture-.*" || req.url ~ "^/iad/ad/model/bap.*" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/bus.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/construction.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/ad/model/mc.*" || req.url ~ "^/iad/ad/model/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/model/truck.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/ad/truck.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/agriculture-.*" || req.url ~ "^/iad/search/bap.*" || req.url ~ "^/iad/search/boat-.*" || req.url ~ "^/iad/search/bus.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/construction.*" || req.url ~ "^/iad/search/job-.*" || req.url ~ "^/iad/search/(mc|atv|snowmobile|moped-scooter).*" || req.url ~ "^/iad/search/(mobile-home|caravan).*" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/iad/search/truck.*" || req.url ~ "^/iad/search/van-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__try-apt-alle-markeder_urldenied");
      std.log("TRACE: Valid client try-apt-alle-markeder does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with try-apt-alle-markeder
    # client: tt-bilmegling-as
    else if (req.http.x-finn-apikey == "BjrgPhAFzUhNIdG0") {
      std.log("vcs-key: client__tt-bilmegling-as");
      set req.http.x-client = "tt-bilmegling-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__tt-bilmegling-as_urldenied");
      std.log("TRACE: Valid client tt-bilmegling-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with tt-bilmegling-as
    # client: union
    else if (req.http.x-finn-apikey == "heOdbLzUcDaZucXJ") {
      std.log("vcs-key: client__union");
      set req.http.x-client = "union";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__union_urldenied");
      std.log("TRACE: Valid client union does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with union
    # client: unit-as
    else if (req.http.x-finn-apikey == "xjovOYs08ra1q551") {
      std.log("vcs-key: client__unit-as");
      set req.http.x-client = "unit-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__unit-as_urldenied");
      std.log("TRACE: Valid client unit-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with unit-as
    # client: upsource
    else if (req.http.x-finn-apikey == "KP7QGeoJmTz2TynA") {
      std.log("vcs-key: client__upsource");
      set req.http.x-client = "upsource";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__upsource_urldenied");
      std.log("TRACE: Valid client upsource does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with upsource
    # client: utleiemegleren-bergen-as
    else if (req.http.x-finn-apikey == "Re1T0ENfGBYUkvYV") {
      std.log("vcs-key: client__utleiemegleren-bergen-as");
      set req.http.x-client = "utleiemegleren-bergen-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__utleiemegleren-bergen-as_urldenied");
      std.log("TRACE: Valid client utleiemegleren-bergen-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with utleiemegleren-bergen-as
    # client: utleiemegleren-frogner-as
    else if (req.http.x-finn-apikey == "oowSeaMZrWbFoEDN") {
      std.log("vcs-key: client__utleiemegleren-frogner-as");
      set req.http.x-client = "utleiemegleren-frogner-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__utleiemegleren-frogner-as_urldenied");
      std.log("TRACE: Valid client utleiemegleren-frogner-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with utleiemegleren-frogner-as
    # client: utleiemeglingen-as
    else if (req.http.x-finn-apikey == "oDlGwZXQUNnEd84G") {
      std.log("vcs-key: client__utleiemeglingen-as");
      set req.http.x-client = "utleiemeglingen-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__utleiemeglingen-as_urldenied");
      std.log("TRACE: Valid client utleiemeglingen-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with utleiemeglingen-as
    # client: utleieplassen
    else if (req.http.x-finn-apikey == "WsmJPSaoxSao3m2O") {
      std.log("vcs-key: client__utleieplassen");
      set req.http.x-client = "utleieplassen";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__utleieplassen_urldenied");
      std.log("TRACE: Valid client utleieplassen does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with utleieplassen
    # client: valuation-nettbil
    else if (req.http.x-finn-apikey == "44RqmpOe65atn5um") {
      std.log("vcs-key: client__valuation-nettbil");
      set req.http.x-client = "valuation-nettbil";
    if(((req.url ~ "^/finn-valuation-suggestor/suggest$") && req.method ~ "^(DELETE|GET|HEAD|POST|PUT)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__valuation-nettbil_urldenied");
      std.log("TRACE: Valid client valuation-nettbil does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with valuation-nettbil
    # client: varde-kapital
    else if (req.http.x-finn-apikey == "NQZBEfFnYhBFrllw") {
      std.log("vcs-key: client__varde-kapital");
      set req.http.x-client = "varde-kapital";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__varde-kapital_urldenied");
      std.log("TRACE: Valid client varde-kapital does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with varde-kapital
    # client: vesteraalen-bil
    else if (req.http.x-finn-apikey == "0B8SBEb19LGXCx3R") {
      std.log("vcs-key: client__vesteraalen-bil");
      set req.http.x-client = "vesteraalen-bil";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__vesteraalen-bil_urldenied");
      std.log("TRACE: Valid client vesteraalen-bil does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with vesteraalen-bil
    # client: vestfold-auto-as
    else if (req.http.x-finn-apikey == "x3ylHaRs9WqNqyxt") {
      std.log("vcs-key: client__vestfold-auto-as");
      set req.http.x-client = "vestfold-auto-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__vestfold-auto-as_urldenied");
      std.log("TRACE: Valid client vestfold-auto-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with vestfold-auto-as
    # client: vestlandshus-as
    else if (req.http.x-finn-apikey == "HN5NczpG7xErHHGj") {
      std.log("vcs-key: client__vestlandshus-as");
      set req.http.x-client = "vestlandshus-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__vestlandshus-as_urldenied");
      std.log("TRACE: Valid client vestlandshus-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with vestlandshus-as
    # client: vg-lykkespill
    else if (req.http.x-finn-apikey == "lvA7w8F1UEbU8CM7") {
      std.log("vcs-key: client__vg-lykkespill");
      set req.http.x-client = "vg-lykkespill";
    if(((req.url ~ ".*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__vg-lykkespill_urldenied");
      std.log("TRACE: Valid client vg-lykkespill does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with vg-lykkespill
    # client: vika-eiendomsforvaltning-as
    else if (req.http.x-finn-apikey == "dzJJSbCG79MPxHkt") {
      std.log("vcs-key: client__vika-eiendomsforvaltning-as");
      set req.http.x-client = "vika-eiendomsforvaltning-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__vika-eiendomsforvaltning-as_urldenied");
      std.log("TRACE: Valid client vika-eiendomsforvaltning-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with vika-eiendomsforvaltning-as
    # client: visindi-oslo-as
    else if (req.http.x-finn-apikey == "LpVNFMkqEYPukYTF") {
      std.log("vcs-key: client__visindi-oslo-as");
      set req.http.x-client = "visindi-oslo-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__visindi-oslo-as_urldenied");
      std.log("TRACE: Valid client visindi-oslo-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with visindi-oslo-as
    # client: visma-as
    else if (req.http.x-finn-apikey == "8U599eVfFE0CERyt") {
      std.log("vcs-key: client__visma-as");
      set req.http.x-client = "visma-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__visma-as_urldenied");
      std.log("TRACE: Valid client visma-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with visma-as
    # client: vizir
    else if (req.http.x-finn-apikey == "MZIr4d5dh3R3J3Zf") {
      std.log("vcs-key: client__vizir");
      set req.http.x-client = "vizir";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__vizir_urldenied");
      std.log("TRACE: Valid client vizir does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with vizir
    # client: vs-auto-as
    else if (req.http.x-finn-apikey == "K7vQp1tU3nlXhbXI") {
      std.log("vcs-key: client__vs-auto-as");
      set req.http.x-client = "vs-auto-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/(mobile-home|caravan).*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/(mobile-home|caravan).*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__vs-auto-as_urldenied");
      std.log("TRACE: Valid client vs-auto-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with vs-auto-as
    # client: watchcom_slett_1_jul_2016
    else if (req.http.x-finn-apikey == "9CqxVOcLdw6pMHtP") {
      std.log("vcs-key: client__watchcom_slett_1_jul_2016");
      set req.http.x-client = "watchcom_slett_1_jul_2016";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__watchcom_slett_1_jul_2016_urldenied");
      std.log("TRACE: Valid client watchcom_slett_1_jul_2016 does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with watchcom_slett_1_jul_2016
    # client: weeno
    else if (req.http.x-finn-apikey == "kc0bDBPl0gK8acVR") {
      std.log("vcs-key: client__weeno");
      set req.http.x-client = "weeno";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/agriculture-.*" || req.url ~ "^/iad/ad/bap.*" || req.url ~ "^/iad/ad/bap-webstore.*" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/bus.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/construction.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/mc.*" || req.url ~ "^/iad/ad/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/agriculture-.*" || req.url ~ "^/iad/ad/model/bap.*" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/bus.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/construction.*" || req.url ~ "^/iad/ad/model/mc.*" || req.url ~ "^/iad/ad/model/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/truck.*" || req.url ~ "^/iad/ad/truck.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/agriculture-.*" || req.url ~ "^/iad/search/bap.*" || req.url ~ "^/iad/search/boat-.*" || req.url ~ "^/iad/search/bus.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/construction.*" || req.url ~ "^/iad/search/(mc|atv|snowmobile|moped-scooter).*" || req.url ~ "^/iad/search/(mobile-home|caravan).*" || req.url ~ "^/iad/search/truck.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__weeno_urldenied");
      std.log("TRACE: Valid client weeno does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with weeno
    # client: wf-bil-as
    else if (req.http.x-finn-apikey == "skFsCrdCI7q1Ri17") {
      std.log("vcs-key: client__wf-bil-as");
      set req.http.x-client = "wf-bil-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__wf-bil-as_urldenied");
      std.log("TRACE: Valid client wf-bil-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with wf-bil-as
    # client: wist-last--buss
    else if (req.http.x-finn-apikey == "86egQ1StqMlCKY3J") {
      std.log("vcs-key: client__wist-last--buss");
      set req.http.x-client = "wist-last--buss";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/bus.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/bus.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/truck.*" || req.url ~ "^/iad/ad/truck.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/bus.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/truck.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__wist-last--buss_urldenied");
      std.log("TRACE: Valid client wist-last--buss does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with wist-last--buss
    # client: worktube-as
    else if (req.http.x-finn-apikey == "1wFteSMiQcVL7ZBF") {
      std.log("vcs-key: client__worktube-as");
      set req.http.x-client = "worktube-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__worktube-as_urldenied");
      std.log("TRACE: Valid client worktube-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with worktube-as
    # client: wps-naeringsmegling-as
    else if (req.http.x-finn-apikey == "tVeKN9B7o4AlLGe8") {
      std.log("vcs-key: client__wps-naeringsmegling-as");
      set req.http.x-client = "wps-naeringsmegling-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__wps-naeringsmegling-as_urldenied");
      std.log("TRACE: Valid client wps-naeringsmegling-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with wps-naeringsmegling-as
    # client: z-eiendom-as
    else if (req.http.x-finn-apikey == "eHVNj3rtOaNH7Tkj") {
      std.log("vcs-key: client__z-eiendom-as");
      set req.http.x-client = "z-eiendom-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__z-eiendom-as_urldenied");
      std.log("TRACE: Valid client z-eiendom-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with z-eiendom-as
    # client: aaby-auto-as
    else if (req.http.x-finn-apikey == "CDERtunyxG5kWo3e") {
      std.log("vcs-key: client__aaby-auto-as");
      set req.http.x-client = "aaby-auto-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__aaby-auto-as_urldenied");
      std.log("TRACE: Valid client aaby-auto-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with aaby-auto-as
    # client: aadalen-truck
    else if (req.http.x-finn-apikey == "3YdREbKyR49Gxd8m") {
      std.log("vcs-key: client__aadalen-truck");
      set req.http.x-client = "aadalen-truck";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/construction.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/construction.*" || req.url ~ "^/iad/ad/model/truck.*" || req.url ~ "^/iad/ad/truck.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/construction.*" || req.url ~ "^/iad/search/truck.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__aadalen-truck_urldenied");
      std.log("TRACE: Valid client aadalen-truck does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with aadalen-truck
    # client: aakra-bil-as
    else if (req.http.x-finn-apikey == "F4xOXDApuV2cfomc") {
      std.log("vcs-key: client__aakra-bil-as");
      set req.http.x-client = "aakra-bil-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__aakra-bil-as_urldenied");
      std.log("TRACE: Valid client aakra-bil-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with aakra-bil-as
    # client: aalgaards-auto-as
    else if (req.http.x-finn-apikey == "EjsEtan952LlYrEp") {
      std.log("vcs-key: client__aalgaards-auto-as");
      set req.http.x-client = "aalgaards-auto-as";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__aalgaards-auto-as_urldenied");
      std.log("TRACE: Valid client aalgaards-auto-as does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with aalgaards-auto-as
    # client: aaro-bil
    else if (req.http.x-finn-apikey == "YrBFqoCP45B7RdbS") {
      std.log("vcs-key: client__aaro-bil");
      set req.http.x-client = "aaro-bil";
    if(((req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*") && req.method ~ "^(GET|HEAD)$")) {
      # NOOP
    } else {
      std.log("vcs-key: client__aaro-bil_urldenied");
      std.log("TRACE: Valid client aaro-bil does not have access to this URL and/or method");
      return(synth(403, "Forbidden"));
    }
    } # done with aaro-bil

    else {
      std.log("TRACE: DENIED. Key was not recognised.");
      std.log("vcs-key:invalid_key");
      std.log("vcs-key:invalid_key__" + client.ip);
      return(synth(403, "Forbidden"));
    }
  }
  
  sub policy_deliver {
    if (!req.http.x-client) {
      std.log("DENIED: Unknown client.");
      std.log("Unknown key used was " + req.http.x-finn-apikey);
      set req.http.x-forbid-please = "true";
      return(restart);
    }

    else if (req.http.x-client == "abb-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1444156934,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "abcenter-eiendom") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",4294963516,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "aberdeen-asset") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",720887070,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "academic-work-norway-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1114028426,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "accenture-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",662412188,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "accountor-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",264778522,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "acea-development") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",208841985,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "ac-nor") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1085275298,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "add-persona") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1063032359,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "adresseavisen-bil") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",421," || req.http.x-tmp ~ ",1001959594,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "adserobil") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1864418256,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "adseroe-bil-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1864418256,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "advokatfirmaet-gjesdahl--co-ans") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",857684162,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "af-gruppen-norge-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",978170067,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "aftenposten") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "aha-eiendom") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1485239840,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "aker-yachts") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",400970272,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "a-k-maskiner") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/agriculture-.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/agriculture-.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/agriculture-.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",941203268,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "aktiv-bamble-porsgrunn") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",2075544855,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "aktiv-eiendomsmegling") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",120429277," || req.http.x-tmp ~ ",566091582,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "aktiv-telemark---partnergruppe") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",291545641,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "alanyahus") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1524542955,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "ald-automotive") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1927071870,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "alfa-bilsenter-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1415916669,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "a-meglerne") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1073647409," || req.http.x-tmp ~ ",1266513914," || req.http.x-tmp ~ ",2010950250,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "andenaes-eiendom") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1924853713,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "arealpartner-naeringsmegling-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",905124474,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "arena-personal-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",747215894,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "arnulf-hansen--co-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",744537349,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "arpi-holding-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",451246285,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "arve-opsahl-partnergruppe") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",242984573,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "AS Financiering") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "aspelin-ramm-eiendom-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",644009687,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "aspiro-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",2023554643,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "asplan-viak-as-avd-sandvika") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1873808551,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "atea") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",4294964189,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "auksjonen") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/agriculture-.*" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/bus.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/construction.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/mc.*" || req.url ~ "^/iad/ad/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/agriculture-.*" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/bus.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/construction.*" || req.url ~ "^/iad/ad/model/mc.*" || req.url ~ "^/iad/ad/model/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/truck.*" || req.url ~ "^/iad/ad/truck.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/agriculture-.*" || req.url ~ "^/iad/search/boat-.*" || req.url ~ "^/iad/search/bus.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/construction.*" || req.url ~ "^/iad/search/(mc|atv|snowmobile|moped-scooter).*" || req.url ~ "^/iad/search/(mobile-home|caravan).*" || req.url ~ "^/iad/search/truck.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",376400426,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "auto-2010-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1981888014,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "auto-23") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1740973168,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "auto-8-8-eide") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",545192221,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "autocenteret-sport") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",2056717462,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "autogruppen-partnergruppe") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1792016042,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "autoital") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1210918800," || req.http.x-tmp ~ ",1249024439,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "autoland-rogaland-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1346437951,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "automegler-bergen-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",419371230,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "automobil-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1001579," || req.http.x-tmp ~ ",106269198,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "auto-nord-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1695218669,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "autopartner-fredrikstad-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",800472423,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "auto-plan-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",903287496,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "autoria") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",735447911," || req.http.x-tmp ~ ",966766749," || req.http.x-tmp ~ ",1536532914," || req.http.x-tmp ~ ",1729853862,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "autoservice-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1581145,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "autostrada-oslo") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",959629891,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "autostrada-partnergruppe") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1736837275,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "autostrada-skien") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1306738," || req.http.x-tmp ~ ",637401754," || req.http.x-tmp ~ ",1079061417,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "autostrada-sport") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1187182442,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "auto-tjuvholmen") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",2137522847,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "autotuning-aka-porsche-center-son") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1699403341,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "autoxl-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",601817740,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "autoxo") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",355130476,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "avantor") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1579003355,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "azets-people-management") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",612528286,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "bachelorgruppe OsloMet") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-full-time/description" || req.url ~ "^/iad/search/job-management/description" || req.url ~ "^/iad/search/job-part-time/description" || req.url ~ "^/tp[/]?$" || req.url ~ "^/tp/ad/\d+/?$" || req.url ~ "^/tp/ad/job-.*" || req.url ~ "^/tp/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",3,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "backer-skeie-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1864019169,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "bakken-motor-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/mc.*" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/mc.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-.*" || req.url ~ "^/iad/search/(mc|atv|snowmobile|moped-scooter).*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1259100975,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "bane-nor-sf") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",2110898869,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "basale") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",634064591," || req.http.x-tmp ~ ",1263570288,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "bauge-auto") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",882810258,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "bauge-auto-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",882810258,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "bavaria-oslo-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1793269972,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "bavaria-partnergruppe") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",556877712,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "bdo-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1616365920,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "berge-co-partnergruppe") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1031213083,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "berge-motorsenter") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1674007467,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "bergen-caravan-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/(mobile-home|caravan).*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/(mobile-home|caravan).*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",521761292,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "bergenkommune") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1864419277,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "bergen-marinesenter") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",810253343,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "bergensgruppen-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",923331299,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "berge-sag-trelast") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1688388434,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "bertel-o-steen-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",919203903,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "bertel-o-steen-molde") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",97724745,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "bertel-o-steen-vare-last-buss-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/bus.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/bus.*" || req.url ~ "^/iad/ad/model/truck.*" || req.url ~ "^/iad/ad/truck.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/bus.*" || req.url ~ "^/iad/search/truck.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1527759840,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "best-eiendomsmegler") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",349520077,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "bilbutikk1-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",889439024,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "bilbutikk--as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/mc.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/mc.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/(mc|atv|snowmobile|moped-scooter).*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",21757935," || req.http.x-tmp ~ ",170793312," || req.http.x-tmp ~ ",693999866," || req.http.x-tmp ~ ",889439024," || req.http.x-tmp ~ ",1067176575," || req.http.x-tmp ~ ",1191609459," || req.http.x-tmp ~ ",2109944925,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "bilbutikken-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",78223751,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "bilbyen-molde-partnergruppe") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",118311181,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "bilco-honefoss") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1750111298,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "bilfinger-industrial-services-norway-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",393231177,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "bilhallen-ulsteinvik-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1991515352,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "Bilia") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1001213,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "bil-i-nord-as-svolvaer") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/mc.*" || req.url ~ "^/iad/ad/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/mc.*" || req.url ~ "^/iad/ad/model/(mobile-home|caravan).*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/(mc|atv|snowmobile|moped-scooter).*" || req.url ~ "^/iad/search/(mobile-home|caravan).*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",6053935," || req.http.x-tmp ~ ",498722402," || req.http.x-tmp ~ ",861984129," || req.http.x-tmp ~ ",1027439705," || req.http.x-tmp ~ ",1111738130," || req.http.x-tmp ~ ",1555823341," || req.http.x-tmp ~ ",1620740452," || req.http.x-tmp ~ ",1703330236," || req.http.x-tmp ~ ",1732221003," || req.http.x-tmp ~ ",1744006520," || req.http.x-tmp ~ ",1842650838," || req.http.x-tmp ~ ",1861871502,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "billa") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1623002272,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "bilpaviljongen-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",4294965706,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "bilsalg-kokstad") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",705304039,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "bilsalongen-skien") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",607128827,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "bilsenteret-stavanger") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",4294964415,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "bilsenteret-stavanger-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",4294964415,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "bil-service-personbiler") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",505516," || req.http.x-tmp ~ ",369663192," || req.http.x-tmp ~ ",398906463," || req.http.x-tmp ~ ",932296683," || req.http.x-tmp ~ ",1015627294,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "biltrend") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/mc.*" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/mc.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/(mc|atv|snowmobile|moped-scooter).*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",889954673,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "birger-n-haug-partnergruppe") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/bap.*" || req.url ~ "^/iad/ad/bap-webstore.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/bap.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/bap.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1283878521,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "bjerke-eiendom-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",6087667,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "bjoergvin-eiendomsmegling-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",465770179,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "blink-hus") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1523172546,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "blink-hus--berge-sag-eiendom") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1688388434,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "blocket") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "bn-bank-asa") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/mc$" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-sale/description" || req.url ~ "^/iad/search/caravan/description" || req.url ~ "^/iad/search/car-norway/description" || req.url ~ "^/iad/search/mc/description" || req.url ~ "^/iad/search/mobile-home/description" || req.url ~ "^/tp[/]?$" || req.url ~ "^/tp/ad/boat-.*" || req.url ~ "^/tp/ad/car-.*" || req.url ~ "^/tp/ad/caravan.*" || req.url ~ "^/tp/ad/\d+/?$" || req.url ~ "^/tp/ad/mc.*" || req.url ~ "^/tp/ad/mobile-home.*" || req.url ~ "^/tp/search/boat-sale" || req.url ~ "^/tp/search/caravan" || req.url ~ "^/tp/search/car-norway" || req.url ~ "^/tp/search/mc" || req.url ~ "^/tp/search/mobile-home" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1880343991,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "bn-bolig-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/classified-product-commerce/.*" || req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*" || req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",734839254,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "boa-eiendomsmegling-moss-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1446968074,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "bobilnord-fauske") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/(mobile-home|caravan).*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/(mobile-home|caravan).*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",658037813,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "bobilnord-troms") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/bap.*" || req.url ~ "^/iad/ad/bap-webstore.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/bap.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/bap.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",518577423,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "bogstadveien-franchise-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",618871166,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "boli-eiendomsmegling-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1951274512,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "boligbygg-moere-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1595921669,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "boligpartner-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",2006037161,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "boligpartner---gjoevik") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",664292904,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "boost-ai-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",603884,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "borg-eiendomsmegling") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1860810711,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "brankos-auto-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",272035330,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "bravida-norge-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1536398680,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "brennes-auto-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",401538368," || req.http.x-tmp ~ ",884500298,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "broom-bil-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",690593336,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "bruktbil-sunnmore-partnergruppe") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",163005733,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "bryn-eiendom") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1172792116,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "budrunder-partnergruppe") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",49783723,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "buen-gruppen-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1844871800,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "buholmen-baat-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1901177626,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "buskerud-naeringsmegling-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",132715186,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "bybroen-bolig-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",654887043,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "capgemini-norge-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1985911817,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "capus-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1627379952,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "cbp-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/mc.*" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/mc.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/(mc|atv|snowmobile|moped-scooter).*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",568560177,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "centric-finance-professionals-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1295510387,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "centric-it-professionals-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",973223138,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "cgi-norge-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1353511424,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "ciber-norge-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1444575067,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "coca-cola-european-partners") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",173218499,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "conduct-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1001619156,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "coop-norge-sa") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",805100991,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "cowi-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",917445034,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "cramo-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1068341864,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "cruit-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",232763845,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "cyprus-living") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",944235697,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "dahles-auto") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",615847696," || req.http.x-tmp ~ ",833686747," || req.http.x-tmp ~ ",834810694," || req.http.x-tmp ~ ",1809605937," || req.http.x-tmp ~ ",1889249988,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "dalane-bil-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",571268895,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "delego") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",942992509,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "deleks-deuchland-gmbh") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/bap.*" || req.url ~ "^/iad/ad/bap-webstore.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/bap.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/bap.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1029672355,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "deloitte-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1960387727,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "departementene") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1002246,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "dfind-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",255617156,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "din-eiendom-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1030440445,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "dnb-eiendom") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",4294967293,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "dnb-eiendom-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",4294967293,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "dnb-eiendom-test") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",4270604,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "dnbleietaker") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",2044230407,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "drammen-kommune") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1919023789,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "drive-adventures-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",975726828,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "drommebil-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1009435621,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "drs-direct-response-services-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1191941447,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "dynamic-people-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",989762288,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "e24") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "easy-ad") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "easy-ad-distribution") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/distribution/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",122," || req.http.x-tmp ~ ",566091582,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "ec-dahls-eiendom") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1948799074,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "ecit-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",4850053,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "ecn") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1238282332,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "eic-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1137114638,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "eie-franchise-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",618871166,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "eiendomshuset-malling--co") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1547366027,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "eiendomsmegler1") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",807793863,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "eiendomsmegler1-bennett") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/classified-product-commerce/.*" || req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",247655581," || req.http.x-tmp ~ ",721943978," || req.http.x-tmp ~ ",807793863," || req.http.x-tmp ~ ",944814355," || req.http.x-tmp ~ ",1859631270," || req.http.x-tmp ~ ",2141709129,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "eiendomsmegler1-buskerudvestfold") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",2141709129,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "eiendomsmegler1-haugesund") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",718164905,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "eiendomsmegler1-midtnorge") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",247655581,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "eiendomsmegler1-partnergruppe") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || req.url ~ "^/statistics/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1859631270,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "eiendomsmegler1-sr-eiendom") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",721943978,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "eiendomsmegler-dahl-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",287316441,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "eiendomsmegler-krogsveen-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",634342484,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "eiendomsmegler--naering-bergen") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",746451294,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "eiendomsmegler--ringerike-hadeland-as-mor") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",2028062097,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "eiendomsmegler-vest") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",389171103,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "eiendomsprofil") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "eiendomsverdi") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "eigedomsmekling-sogn-fjordane") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",351941420,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "eigedomsmekling-sogn-og-fjordane-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",351941420,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "eika-kredittbank-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1365784129,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "eik-senteret-midt-norge") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/agriculture-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/agriculture-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/agriculture-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",717521624,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "elkjoep-norge-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1345041903,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "entra-eiendom") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",77736077,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "erik-arnesen-bryn-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",16857401,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "essen-bil-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1316269272,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "estate-meglerne-meglerhuset-leinaes-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",672529031,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "evry-norge-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1892267668,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "exbo-soerlandet-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",74598619,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "experis-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",4294966738,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "ey") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1817181494,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "eye-share-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",2089989334,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "fabi") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1000736,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "fana-sparebank-eiendom") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",2066434206,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "felleskjoepet-agri-sa") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",541724271,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "feriebolig-utland") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1642208239,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "finance-people-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1790699139,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "fine-biler-forus-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",4613826," || req.http.x-tmp ~ ",387559925," || req.http.x-tmp ~ ",692579824,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "finn-adswitch-konsept-og-prod-utvikling") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "finn-api-admin") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ ".*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",3,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "finn-api-cache-purger") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "finn-api-iad") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ ".*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",3,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "finn-apps") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "finn-beta") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "finn-candidate-profile") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "finn-classified-review-management") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "finn-communication") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "finn-component-server") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ ".*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",3,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "finn-distribution-api") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "finn-effekt") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "finn-eiendom-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",122,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "finn-finnbox-ad-info") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "finn-haproxy-health") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "finn-iad") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "finn-image-explore") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/recommendation-rest-api/recommender/[^/]+/moreLikeThisFromVector.*$" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",3,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "finn-import-admodel") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ ".*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",3,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "finn-innfinn") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "finn-innscreen-dash") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "finn-io-load-balancer-testing") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/agriculture-.*" || req.url ~ "^/iad/ad/bap.*" || req.url ~ "^/iad/ad/bap-webstore.*" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/bus.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/construction.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/mc.*" || req.url ~ "^/iad/ad/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/agriculture-.*" || req.url ~ "^/iad/ad/model/bap.*" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/bus.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/construction.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/ad/model/mc.*" || req.url ~ "^/iad/ad/model/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/model/truck.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/ad/truck.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/agriculture-.*" || req.url ~ "^/iad/search/bap.*" || req.url ~ "^/iad/search/boat-.*" || req.url ~ "^/iad/search/bus.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/construction.*" || req.url ~ "^/iad/search/job-.*" || req.url ~ "^/iad/search/(mc|atv|snowmobile|moped-scooter).*" || req.url ~ "^/iad/search/(mobile-home|caravan).*" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/iad/search/truck.*" || req.url ~ "^/iad/search/van-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",3,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "finn-match-ad-search") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "finn-mfinn") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "finn-no-contact-ads") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "finn-notification") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "finn-pal-web") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "finn-profile") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "finn-reise-fhh") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "finn-relevantads") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "finn-smaajobber") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "finn-statistics-api") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "finn-stream") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "finn-torget-trollweb") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "finn-tp-api") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "floridabolig") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",399334804,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "follo-naeringsmegling") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",993937636,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "fossco") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",551506630," || req.http.x-tmp ~ ",1441191694,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "fram-eiendom") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",560136951,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "fredensborg-norge") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",900228254,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "fredriksborg-eiendom-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1785573465,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "friluftsmagasinet") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/bap.*" || req.url ~ "^/iad/ad/bap-webstore.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/bap.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/bap.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",690588493,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "fritidssentret-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/(mobile-home|caravan).*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/(mobile-home|caravan).*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",472176977,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "frognerbygg-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",242525635,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "frost-eiendom-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1482554095,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "frydenboe-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",2055207587,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "fylkesnes-bil-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",2143025729,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "fyllingen-maskin-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1167956,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "galleri-normisjon") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/bap.*" || req.url ~ "^/iad/ad/bap-webstore.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/bap.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/bap.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1744197523,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "gamle-danske") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/bap.*" || req.url ~ "^/iad/ad/bap-webstore.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/bap.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/bap.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1820214946,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "garanti-eiendomsmegling-nedre-buskerud-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",2012531688,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "garanti-eiendomsmegling-norge-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",11208491,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "gc-rieber-eiendom") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1330128821,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "gjensidige") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "gjensidige-bolighandel") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",2276504,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "Gjensidige classified-product documentation access") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/classified-product-commerce/docs/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",2276504,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "gjermundsen-auto-partner") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",646581087," || req.http.x-tmp ~ ",722067848," || req.http.x-tmp ~ ",989323467," || req.http.x-tmp ~ ",1098224506," || req.http.x-tmp ~ ",1415891538,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "glasspaper-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1860582999,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "gloss-cosmetics") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/bap.*" || req.url ~ "^/iad/ad/bap-webstore.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/bap.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/bap.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",773270874,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "glaamdal-bilsenter") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",981124275,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "gobb-eiendomsmegling-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",441147344,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "-grader-naeringsmegling-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1754257912,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "grandahl-bil") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/bus.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/bus.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/truck.*" || req.url ~ "^/iad/ad/truck.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/bus.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/(mobile-home|caravan).*" || req.url ~ "^/iad/search/truck.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",230502256,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "gtm-partnergruppe") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",301042048,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "gumpens-auto-vest") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",7977405," || req.http.x-tmp ~ ",81299788," || req.http.x-tmp ~ ",163835032," || req.http.x-tmp ~ ",347856564," || req.http.x-tmp ~ ",416550119," || req.http.x-tmp ~ ",1134923453," || req.http.x-tmp ~ ",1337640777," || req.http.x-tmp ~ ",1695748017," || req.http.x-tmp ~ ",1862158772," || req.http.x-tmp ~ ",1882539642,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "habberstad-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1001720,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "harald-a-moller-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",65005551," || req.http.x-tmp ~ ",631597076," || req.http.x-tmp ~ ",1539474154,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "harald-hustad") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1286927404,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "harila-gruppen") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",457113402,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "harstad-tidende-bil") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1074571877,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "hartmark-executive") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",896867070,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "haugesund-auto-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/bus.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/mc.*" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/bus.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/mc.*" || req.url ~ "^/iad/ad/model/truck.*" || req.url ~ "^/iad/ad/truck.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-.*" || req.url ~ "^/iad/search/bus.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/(mc|atv|snowmobile|moped-scooter).*" || req.url ~ "^/iad/search/truck.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1899349348,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "haukebo-rodseth") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",304602878,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "hegh-eiendom-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",189038205,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "heimdal-eiendomsmegling") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",4294966895," || req.http.x-tmp ~ ",95044569," || req.http.x-tmp ~ ",341021936," || req.http.x-tmp ~ ",476840469," || req.http.x-tmp ~ ",718628686," || req.http.x-tmp ~ ",749261087," || req.http.x-tmp ~ ",834592787," || req.http.x-tmp ~ ",994527299," || req.http.x-tmp ~ ",1363913250,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "hellvikhus-job") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",2038291617,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "henry-hammari-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1239940126,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "h-h-maskin") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/agriculture-.*" || req.url ~ "^/iad/ad/construction.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/agriculture-.*" || req.url ~ "^/iad/ad/model/construction.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/agriculture-.*" || req.url ~ "^/iad/search/construction.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",319656344,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "holmane-bil") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",595215254,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "holm-eiendomsforvaltning-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",398601318,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "home-eiendomsmegler") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",967713657,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "hundholmen-byutvikling-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",992092647,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "Hundholmen Byutvikling AS ny") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",5602873,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "husleie") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "hus-norge-as-mor") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",314863428,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "hymax-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/agriculture-.*" || req.url ~ "^/iad/ad/construction.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/agriculture-.*" || req.url ~ "^/iad/ad/model/construction.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/agriculture-.*" || req.url ~ "^/iad/search/construction.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",549354023,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "hytech") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1134229023,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "hyundai-partnergruppe") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",401538368," || req.http.x-tmp ~ ",441556680,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "ibm-norge-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1301310335,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "i-bolig-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1896283537,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "icaravan-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/(mobile-home|caravan).*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/(mobile-home|caravan).*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1470126," || req.http.x-tmp ~ ",301823153,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "idehusgruppen-as-mor") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",542315830,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "if-skadeforsikring") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",678940029,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "ihus") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",287933002,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "impact-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",299015415,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "importservice") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",706939412,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "innlandet-naeringsmegling-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1304732918,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "insignia") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",152698117,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "intility-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",287880705,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "itera") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1069543283,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "ivex-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",710804745,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "jaeren-storbil-senter-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/agriculture-.*" || req.url ~ "^/iad/ad/bus.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/construction.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/agriculture-.*" || req.url ~ "^/iad/ad/model/bus.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/construction.*" || req.url ~ "^/iad/ad/model/truck.*" || req.url ~ "^/iad/ad/truck.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/agriculture-.*" || req.url ~ "^/iad/search/bus.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/construction.*" || req.url ~ "^/iad/search/truck.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",741991086,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "jakhelln") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/mc.*" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/mc.*" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/(mc|atv|snowmobile|moped-scooter).*" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/iad/search/van-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",408696414," || req.http.x-tmp ~ ",445568226," || req.http.x-tmp ~ ",498722402," || req.http.x-tmp ~ ",1111738130," || req.http.x-tmp ~ ",1620740452," || req.http.x-tmp ~ ",1987108198,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "jensen--scheele-auto-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",815138832," || req.http.x-tmp ~ ",1856826453," || req.http.x-tmp ~ ",2028623755,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "jenssen-og-bolle-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",307599302,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "jernbanedirektoratet") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1004549856,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "jobbidrett-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",509736959,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "joera-bygg-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",740045805,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "jorkjend-porsgrunn-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",506150697,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "jorkjend-skien-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1930791876,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "jysk-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",861301479,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "kaland-partners") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1728194105,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "kaldnes-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1085275298,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "kantega-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1197003156,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "kbbl-eiendomsmegling") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1353678917,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "K-Bil") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",2117419764,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "ketil-koppang-landbruk-og-naeringsseiendom") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1079308376,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "king-auto") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1946897486,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "knowit-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",578146465,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "kommunal-landspensjonskasse") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1592476084,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "kongsberg-gruppen-asa") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",4294964243,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "koppang-landbruk-og-naeringsmegling-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1748278970,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "kpmg-as-hovedkontor") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",566815442,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "krag-gruppen") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1556488273,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "kramer-brygge") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",217464642,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "kverneland-bil-as--oslo") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1792315,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "kverneland-partnergruppe") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1700642550,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "kynningsrud-eiendom-holding-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1198619070,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "l-a-lund-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",9858421,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "landrover-partnergruppe") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",692765922,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "lazy-boyz-speed--custom-works-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/mc.*" || req.url ~ "^/iad/ad/model/mc.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/(mc|atv|snowmobile|moped-scooter).*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1169661891,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "leie-bolig") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1025536049,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "leiebolig-utleie-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1025536049,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "leinaes--partners") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",672529031,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "lena-maskin") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/agriculture-.*" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/bus.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/construction.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/mc.*" || req.url ~ "^/iad/ad/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/agriculture-.*" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/bus.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/construction.*" || req.url ~ "^/iad/ad/model/mc.*" || req.url ~ "^/iad/ad/model/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/truck.*" || req.url ~ "^/iad/ad/truck.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/agriculture-.*" || req.url ~ "^/iad/search/boat-.*" || req.url ~ "^/iad/search/bus.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/construction.*" || req.url ~ "^/iad/search/(mc|atv|snowmobile|moped-scooter).*" || req.url ~ "^/iad/search/(mobile-home|caravan).*" || req.url ~ "^/iad/search/truck.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",180473140,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "lians-caravan-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/(mobile-home|caravan).*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/(mobile-home|caravan).*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",679820547,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "lias-bilopphuggeri") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/bap.*" || req.url ~ "^/iad/ad/bap-webstore.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/bap.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/bap.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",616775077,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "lindbakgruppen-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",12176160,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "linstow") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",2070212928,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "lumagate-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",9498805,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "makestad-bil-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",53464263,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "malling") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1816823029,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "malmlaft-eiendom-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1017686731,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "manpower") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1000203,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "maritim-center") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/bap.*" || req.url ~ "^/iad/ad/bap-webstore.*" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/mc.*" || req.url ~ "^/iad/ad/model/bap.*" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/mc.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/bap.*" || req.url ~ "^/iad/search/boat-.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/(mc|atv|snowmobile|moped-scooter).*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",370688700," || req.http.x-tmp ~ ",1234030440,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "mascus") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/agriculture-.*" || req.url ~ "^/iad/ad/bus.*" || req.url ~ "^/iad/ad/construction.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/mc.*" || req.url ~ "^/iad/ad/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/agriculture-.*" || req.url ~ "^/iad/ad/model/bus.*" || req.url ~ "^/iad/ad/model/construction.*" || req.url ~ "^/iad/ad/model/mc.*" || req.url ~ "^/iad/ad/model/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/truck.*" || req.url ~ "^/iad/ad/truck.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/agriculture-.*" || req.url ~ "^/iad/search/bus.*" || req.url ~ "^/iad/search/construction.*" || req.url ~ "^/iad/search/(mc|atv|snowmobile|moped-scooter).*" || req.url ~ "^/iad/search/(mobile-home|caravan).*" || req.url ~ "^/iad/search/truck.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",9825999," || req.http.x-tmp ~ ",44967889," || req.http.x-tmp ~ ",175456435," || req.http.x-tmp ~ ",189855931," || req.http.x-tmp ~ ",214396457," || req.http.x-tmp ~ ",241075514," || req.http.x-tmp ~ ",247610599," || req.http.x-tmp ~ ",250189483," || req.http.x-tmp ~ ",312059976," || req.http.x-tmp ~ ",319777389," || req.http.x-tmp ~ ",412533475," || req.http.x-tmp ~ ",453712427," || req.http.x-tmp ~ ",504269524," || req.http.x-tmp ~ ",553982955," || req.http.x-tmp ~ ",699285223," || req.http.x-tmp ~ ",715178495," || req.http.x-tmp ~ ",764747174," || req.http.x-tmp ~ ",786467619," || req.http.x-tmp ~ ",801948708," || req.http.x-tmp ~ ",818310223," || req.http.x-tmp ~ ",824643658," || req.http.x-tmp ~ ",849587217," || req.http.x-tmp ~ ",920541577," || req.http.x-tmp ~ ",941203268," || req.http.x-tmp ~ ",972406699," || req.http.x-tmp ~ ",1061979981," || req.http.x-tmp ~ ",1118319976," || req.http.x-tmp ~ ",1138985227," || req.http.x-tmp ~ ",1182834445," || req.http.x-tmp ~ ",1203562713," || req.http.x-tmp ~ ",1248057393," || req.http.x-tmp ~ ",1258655729," || req.http.x-tmp ~ ",1323117576," || req.http.x-tmp ~ ",1391625940," || req.http.x-tmp ~ ",1433110135," || req.http.x-tmp ~ ",1450490660," || req.http.x-tmp ~ ",1601456504," || req.http.x-tmp ~ ",1675633408," || req.http.x-tmp ~ ",1689897438," || req.http.x-tmp ~ ",1702685327," || req.http.x-tmp ~ ",1756613454," || req.http.x-tmp ~ ",1785002146," || req.http.x-tmp ~ ",1797700365," || req.http.x-tmp ~ ",1915394836," || req.http.x-tmp ~ ",1978547675," || req.http.x-tmp ~ ",1998921695," || req.http.x-tmp ~ ",2006413003," || req.http.x-tmp ~ ",2093560394,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "maya-eiendom-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1415684244,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "mc-oslo") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/mc.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/mc.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/(mc|atv|snowmobile|moped-scooter).*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1255008," || req.http.x-tmp ~ ",1246576649,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "mediabemanning-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",828642673,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "mediebruket-partnergruppe") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1969000846,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "meglergaarden-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",547385218,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "meglerhuset-bjerke") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",481702946,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "meglerhuset-bodoe-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",576525427,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "meglerhuset-innlandet-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/iad/search/van-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",962540," || req.http.x-tmp ~ ",481702946," || req.http.x-tmp ~ ",2127098618,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "meglerhuset-nylander-avd-administrasjon") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1903283727,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "meglerhuset-nylander-partnergruppe") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1903283727,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "meglerhuset-oestlandet-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1457726,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "meglerhuset-rele-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1774895779,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "meglerhuset-saedberg-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",94,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "meglerhuset-selvaag") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1036945013,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "mercuri-urval-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1172534358,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "merisma-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1674722933,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "mestergruppen-as-mor") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",514801063,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "mesterhus") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",4294967293," || req.http.x-tmp ~ ",177495922," || req.http.x-tmp ~ ",441147344," || req.http.x-tmp ~ ",514801063," || req.http.x-tmp ~ ",547385218," || req.http.x-tmp ~ ",567533090," || req.http.x-tmp ~ ",650105772," || req.http.x-tmp ~ ",897223036," || req.http.x-tmp ~ ",1070566873," || req.http.x-tmp ~ ",1320813922,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "mesterhus2") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",514801063,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "mesterhus-tonsberg") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1028745564,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "microsoft-norge-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1482240173,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "midgaard-services-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",6305352,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "mobile-bergen-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1423446615,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "mobile-oslo-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",628175365,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "moere-eiendomsmegling-as-avd-molde") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1991559224,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "moere-eiendomsmegling-as-avd-aalesund") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",4294965224,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "morud") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1496351489,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "motorforum-partnergruppe") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1982876616,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "motorgrossisten-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/(mobile-home|caravan).*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/(mobile-home|caravan).*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",178157011,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "motorpool-handel-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",519559594,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "motorpool-partnergruppe") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1067844896,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "movement-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/bap.*" || req.url ~ "^/iad/ad/bap-webstore.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/bap.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/bap.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",2060939298,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "multiconsult-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",766981522,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "mur-i-soer-eiendom-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1576165384,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "mustad-eiendom-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",668574346,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "naeringsmegleren-saedberg--hodne-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",365953479,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "NAF") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/mc$" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-sale/description" || req.url ~ "^/iad/search/caravan/description" || req.url ~ "^/iad/search/car-norway/description" || req.url ~ "^/iad/search/mc/description" || req.url ~ "^/iad/search/mobile-home/description" || req.url ~ "^/tp[/]?$" || req.url ~ "^/tp/ad/boat-.*" || req.url ~ "^/tp/ad/car-.*" || req.url ~ "^/tp/ad/caravan.*" || req.url ~ "^/tp/ad/\d+/?$" || req.url ~ "^/tp/ad/mc.*" || req.url ~ "^/tp/ad/mobile-home.*" || req.url ~ "^/tp/search/boat-sale" || req.url ~ "^/tp/search/caravan" || req.url ~ "^/tp/search/car-norway" || req.url ~ "^/tp/search/mc" || req.url ~ "^/tp/search/mobile-home" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",3,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "nai-naeringsmegling") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",27444021,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "nammo-raufoss-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1149591502,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "NamsenAuto") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/(mobile-home|caravan).*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/(mobile-home|caravan).*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",442957829," || req.http.x-tmp ~ ",1407948843,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "namsos-fritid") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/(mobile-home|caravan).*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/(mobile-home|caravan).*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",2017150737,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "nardo-bil-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",115852351,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "nardo-partnergruppe") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",355828110,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "narvik-meglern-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1616867579,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "national-oilwell-varco") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1278253251,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "nav") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "necon-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",216106374,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "nerland-autosalg") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1001959594,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "nes-advantage-solutions") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1153710301,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "nets-norway-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",2127935927,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "newsec") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",6871325,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "newsec-as-partnergruppe") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",148739212,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "nitteberg-bil-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",624797554,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "nokas-jobb") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",963065119,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "nor-bygg-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1995634799,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "nordbohus") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",782523868,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "nordbolig") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1960329527,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "nordic-bil-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1245118608," || req.http.x-tmp ~ ",1357437952," || req.http.x-tmp ~ ",2056697960,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "nordic-france") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",682079400,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "nordicsearch-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1805765694,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "nordvest-bil-molde") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",126446411,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "nordvik-fauske") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",137489143," || req.http.x-tmp ~ ",138448135," || req.http.x-tmp ~ ",225545969," || req.http.x-tmp ~ ",311313482," || req.http.x-tmp ~ ",702893036," || req.http.x-tmp ~ ",769373211," || req.http.x-tmp ~ ",772987692," || req.http.x-tmp ~ ",955536255," || req.http.x-tmp ~ ",1006815752," || req.http.x-tmp ~ ",1266150969," || req.http.x-tmp ~ ",1812153563," || req.http.x-tmp ~ ",1827160317," || req.http.x-tmp ~ ",1855342245,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "nordvik-partners") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",777093317,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "norgeshus") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1382440422,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "norges-roede-kors") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",123427517,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "norlandia-care-group-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",589563141,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "norlandia-preschools-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",994659,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "norslep") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/truck.*" || req.url ~ "^/iad/ad/truck.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/truck.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",45913883,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "north-bridge-eiendomsforvaltning-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",368973078,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "ntb-autosenteret") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",2008802831,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "nymo-bil-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",34280192,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "obos") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1027794777,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "obos-bbl") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",4678898," || req.http.x-tmp ~ ",251319861," || req.http.x-tmp ~ ",428199921," || req.http.x-tmp ~ ",984607049," || req.http.x-tmp ~ ",1051361278," || req.http.x-tmp ~ ",1290446256," || req.http.x-tmp ~ ",1350887499," || req.http.x-tmp ~ ",2032882265,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "obos-forretningsbygg-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",19787009,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "oekern-bilauksjon-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1705301077,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "oestlandske-naeringsmegling") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1077278875,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "og-eiendomsmegling-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",288469209,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "optimera-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1550536466,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "opus-consulting-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1203484901,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "orion--partners-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1293843990,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "orkelbog-bil") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",523835787,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "orkla-asa") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",226954,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "osb-consulting") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",918458497,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "oslo-areal-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1320550197,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "oslo-bilsenter") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",788420956,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "oves-yamaha-senter-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/mc.*" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/mc.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/(mc|atv|snowmobile|moped-scooter).*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1560037780,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "oxer-eiendom") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1276809387,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "oxer-management-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",255429163,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "partnergruppe-auto--") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1959078787,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "partnergruppe-krogsveen-boligutleie") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1348564574,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "partnergruppe-malling") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1790135671,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "partnergruppe-nordvik") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",4933121,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "partnergruppe-norsk-scania") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/bus.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/bus.*" || req.url ~ "^/iad/ad/model/truck.*" || req.url ~ "^/iad/ad/truck.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/bus.*" || req.url ~ "^/iad/search/truck.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",902405435,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "partners-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",933984,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "pbbl") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1320813922,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "penger-lendo") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "pepsico-nordic-norway-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",478134686,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "personalhuset") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1117069714,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "personal-service-og-sikkerhet-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",676151750,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "personal-utvelgelse-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",597861192,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "plustech-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/agriculture-.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/construction.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/agriculture-.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/construction.*" || req.url ~ "^/iad/ad/model/truck.*" || req.url ~ "^/iad/ad/truck.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/agriculture-.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/construction.*" || req.url ~ "^/iad/search/truck.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1970641383,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "porche-center-bergen") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",860567616,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "porsgrunn-bamble-borgestad-boligbyggelag") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1320813922,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "presis-utleie-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",2849956,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "prime-people-hr-solutions-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1777686213,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "privatmegleren") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",4591085," || req.http.x-tmp ~ ",160053799," || req.http.x-tmp ~ ",1602109739,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "privatmegleren-horten") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",848854617,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "proaktiv-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",159813377,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "proffice-norge-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",255617156," || req.http.x-tmp ~ ",471697161,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "pwc-accounting-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1334686584,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "q-naeringsmegling-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1496501466,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "qualified-solutions-group-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",2040810194,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "rada-engineering") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1747409103," || req.http.x-tmp ~ ",2010845260,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "ragde-eiendom-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1165121869,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "rainfall") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",900048804,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "ramboell-norge") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1798234845,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "randstad-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",2010257596,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "randstad-norway-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",4294962782," || req.http.x-tmp ~ ",4294962783," || req.http.x-tmp ~ ",4294962784," || req.http.x-tmp ~ ",4294962785," || req.http.x-tmp ~ ",4294962786," || req.http.x-tmp ~ ",4294962787," || req.http.x-tmp ~ ",4294962791," || req.http.x-tmp ~ ",4294962792," || req.http.x-tmp ~ ",4294962793," || req.http.x-tmp ~ ",4294962794," || req.http.x-tmp ~ ",4294962795," || req.http.x-tmp ~ ",4294962796," || req.http.x-tmp ~ ",4294963787," || req.http.x-tmp ~ ",255617156," || req.http.x-tmp ~ ",266790405," || req.http.x-tmp ~ ",343688808," || req.http.x-tmp ~ ",349362175," || req.http.x-tmp ~ ",471697161," || req.http.x-tmp ~ ",475853253," || req.http.x-tmp ~ ",500428006," || req.http.x-tmp ~ ",805614038," || req.http.x-tmp ~ ",924393643," || req.http.x-tmp ~ ",973356184," || req.http.x-tmp ~ ",1006680721," || req.http.x-tmp ~ ",1012277446," || req.http.x-tmp ~ ",1028308601," || req.http.x-tmp ~ ",1038693511," || req.http.x-tmp ~ ",1296484203," || req.http.x-tmp ~ ",1342584125," || req.http.x-tmp ~ ",1352426399," || req.http.x-tmp ~ ",1371994867," || req.http.x-tmp ~ ",1640293806," || req.http.x-tmp ~ ",1783513883," || req.http.x-tmp ~ ",1925560034," || req.http.x-tmp ~ ",2010257596," || req.http.x-tmp ~ ",2072177570,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "reaktor-partnergruppe") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",4294962885," || req.http.x-tmp ~ ",4294963326," || req.http.x-tmp ~ ",4294964837," || req.http.x-tmp ~ ",4294965719," || req.http.x-tmp ~ ",88559," || req.http.x-tmp ~ ",505516," || req.http.x-tmp ~ ",1191525," || req.http.x-tmp ~ ",1306738," || req.http.x-tmp ~ ",3758786," || req.http.x-tmp ~ ",4272530," || req.http.x-tmp ~ ",4392640," || req.http.x-tmp ~ ",4440468," || req.http.x-tmp ~ ",5460544," || req.http.x-tmp ~ ",5674603," || req.http.x-tmp ~ ",6425054," || req.http.x-tmp ~ ",7057735," || req.http.x-tmp ~ ",8425614," || req.http.x-tmp ~ ",8838681," || req.http.x-tmp ~ ",9803049," || req.http.x-tmp ~ ",11541674," || req.http.x-tmp ~ ",18686347," || req.http.x-tmp ~ ",23751915," || req.http.x-tmp ~ ",34084482," || req.http.x-tmp ~ ",35441399," || req.http.x-tmp ~ ",51402968," || req.http.x-tmp ~ ",67134841," || req.http.x-tmp ~ ",69547348," || req.http.x-tmp ~ ",70923716," || req.http.x-tmp ~ ",78223751," || req.http.x-tmp ~ ",115852351," || req.http.x-tmp ~ ",127699871," || req.http.x-tmp ~ ",152698117," || req.http.x-tmp ~ ",166717613," || req.http.x-tmp ~ ",167948238," || req.http.x-tmp ~ ",176410059," || req.http.x-tmp ~ ",178157011," || req.http.x-tmp ~ ",185558665," || req.http.x-tmp ~ ",193082510," || req.http.x-tmp ~ ",200833834," || req.http.x-tmp ~ ",223647211," || req.http.x-tmp ~ ",224257596," || req.http.x-tmp ~ ",244680154," || req.http.x-tmp ~ ",244897120," || req.http.x-tmp ~ ",263110544," || req.http.x-tmp ~ ",263212152," || req.http.x-tmp ~ ",277296333," || req.http.x-tmp ~ ",284362650," || req.http.x-tmp ~ ",286418339," || req.http.x-tmp ~ ",290647035," || req.http.x-tmp ~ ",300541237," || req.http.x-tmp ~ ",304602878," || req.http.x-tmp ~ ",305971041," || req.http.x-tmp ~ ",308744202," || req.http.x-tmp ~ ",339905974," || req.http.x-tmp ~ ",376699073," || req.http.x-tmp ~ ",378134738," || req.http.x-tmp ~ ",379791951," || req.http.x-tmp ~ ",398862173," || req.http.x-tmp ~ ",398906463," || req.http.x-tmp ~ ",416550119," || req.http.x-tmp ~ ",424558772," || req.http.x-tmp ~ ",424662208," || req.http.x-tmp ~ ",456952575," || req.http.x-tmp ~ ",461391785," || req.http.x-tmp ~ ",468109326," || req.http.x-tmp ~ ",468646497," || req.http.x-tmp ~ ",476918332," || req.http.x-tmp ~ ",480761643," || req.http.x-tmp ~ ",481052379," || req.http.x-tmp ~ ",491754007," || req.http.x-tmp ~ ",498722402," || req.http.x-tmp ~ ",512217889," || req.http.x-tmp ~ ",516894996," || req.http.x-tmp ~ ",528126853," || req.http.x-tmp ~ ",529600284," || req.http.x-tmp ~ ",538317656," || req.http.x-tmp ~ ",543629845," || req.http.x-tmp ~ ",543893582," || req.http.x-tmp ~ ",545532686," || req.http.x-tmp ~ ",557079464," || req.http.x-tmp ~ ",584621913," || req.http.x-tmp ~ ",587261805," || req.http.x-tmp ~ ",595044072," || req.http.x-tmp ~ ",605289571," || req.http.x-tmp ~ ",607128827," || req.http.x-tmp ~ ",615847696," || req.http.x-tmp ~ ",624797554," || req.http.x-tmp ~ ",636809029," || req.http.x-tmp ~ ",637401754," || req.http.x-tmp ~ ",645014040," || req.http.x-tmp ~ ",649816213," || req.http.x-tmp ~ ",662547444," || req.http.x-tmp ~ ",681120208," || req.http.x-tmp ~ ",681321367," || req.http.x-tmp ~ ",690593336," || req.http.x-tmp ~ ",706939412," || req.http.x-tmp ~ ",714281593," || req.http.x-tmp ~ ",720792352," || req.http.x-tmp ~ ",727259926," || req.http.x-tmp ~ ",727650547," || req.http.x-tmp ~ ",729499857," || req.http.x-tmp ~ ",734548206," || req.http.x-tmp ~ ",735447911," || req.http.x-tmp ~ ",741296654," || req.http.x-tmp ~ ",746597683," || req.http.x-tmp ~ ",753956126," || req.http.x-tmp ~ ",788420956," || req.http.x-tmp ~ ",788974191," || req.http.x-tmp ~ ",809412144," || req.http.x-tmp ~ ",811459462," || req.http.x-tmp ~ ",834810694," || req.http.x-tmp ~ ",847366960," || req.http.x-tmp ~ ",851766984," || req.http.x-tmp ~ ",858768946," || req.http.x-tmp ~ ",860739293," || req.http.x-tmp ~ ",861984129," || req.http.x-tmp ~ ",865992366," || req.http.x-tmp ~ ",874968061," || req.http.x-tmp ~ ",889439024," || req.http.x-tmp ~ ",898948523," || req.http.x-tmp ~ ",908754699," || req.http.x-tmp ~ ",914324286," || req.http.x-tmp ~ ",921673062," || req.http.x-tmp ~ ",927595379," || req.http.x-tmp ~ ",944863621," || req.http.x-tmp ~ ",956268680," || req.http.x-tmp ~ ",959205545," || req.http.x-tmp ~ ",961926177," || req.http.x-tmp ~ ",965035751," || req.http.x-tmp ~ ",966766749," || req.http.x-tmp ~ ",988825631," || req.http.x-tmp ~ ",989323467," || req.http.x-tmp ~ ",989404839," || req.http.x-tmp ~ ",1002634159," || req.http.x-tmp ~ ",1004252500," || req.http.x-tmp ~ ",1027439705," || req.http.x-tmp ~ ",1030622932," || req.http.x-tmp ~ ",1046208845," || req.http.x-tmp ~ ",1067901699," || req.http.x-tmp ~ ",1071507469," || req.http.x-tmp ~ ",1116139343," || req.http.x-tmp ~ ",1117518778," || req.http.x-tmp ~ ",1128324406," || req.http.x-tmp ~ ",1129653140," || req.http.x-tmp ~ ",1134923453," || req.http.x-tmp ~ ",1141139163," || req.http.x-tmp ~ ",1145632954," || req.http.x-tmp ~ ",1158498499," || req.http.x-tmp ~ ",1163600286," || req.http.x-tmp ~ ",1166360552," || req.http.x-tmp ~ ",1166693151," || req.http.x-tmp ~ ",1168731404," || req.http.x-tmp ~ ",1176581736," || req.http.x-tmp ~ ",1187182442," || req.http.x-tmp ~ ",1205829960," || req.http.x-tmp ~ ",1224226381," || req.http.x-tmp ~ ",1224760996," || req.http.x-tmp ~ ",1229989619," || req.http.x-tmp ~ ",1234668241," || req.http.x-tmp ~ ",1237149319," || req.http.x-tmp ~ ",1239940126," || req.http.x-tmp ~ ",1251088720," || req.http.x-tmp ~ ",1253965923," || req.http.x-tmp ~ ",1291437999," || req.http.x-tmp ~ ",1295201404," || req.http.x-tmp ~ ",1299217797," || req.http.x-tmp ~ ",1315523865," || req.http.x-tmp ~ ",1317633128," || req.http.x-tmp ~ ",1329371345," || req.http.x-tmp ~ ",1337640777," || req.http.x-tmp ~ ",1346437951," || req.http.x-tmp ~ ",1350621660," || req.http.x-tmp ~ ",1353612316," || req.http.x-tmp ~ ",1359864336," || req.http.x-tmp ~ ",1362620055," || req.http.x-tmp ~ ",1368611283," || req.http.x-tmp ~ ",1374401721," || req.http.x-tmp ~ ",1379278477," || req.http.x-tmp ~ ",1398948710," || req.http.x-tmp ~ ",1399067711," || req.http.x-tmp ~ ",1401679938," || req.http.x-tmp ~ ",1405166934," || req.http.x-tmp ~ ",1405272329," || req.http.x-tmp ~ ",1408717931," || req.http.x-tmp ~ ",1413762781," || req.http.x-tmp ~ ",1413831951," || req.http.x-tmp ~ ",1424307082," || req.http.x-tmp ~ ",1436780094," || req.http.x-tmp ~ ",1455317460," || req.http.x-tmp ~ ",1474623054," || req.http.x-tmp ~ ",1485796832," || req.http.x-tmp ~ ",1513863448," || req.http.x-tmp ~ ",1521076299," || req.http.x-tmp ~ ",1551137562," || req.http.x-tmp ~ ",1555823341," || req.http.x-tmp ~ ",1561441519," || req.http.x-tmp ~ ",1575165780," || req.http.x-tmp ~ ",1578911912," || req.http.x-tmp ~ ",1579335762," || req.http.x-tmp ~ ",1582870570," || req.http.x-tmp ~ ",1584226905," || req.http.x-tmp ~ ",1598054805," || req.http.x-tmp ~ ",1604738463," || req.http.x-tmp ~ ",1623002272," || req.http.x-tmp ~ ",1638891527," || req.http.x-tmp ~ ",1644383549," || req.http.x-tmp ~ ",1645723002," || req.http.x-tmp ~ ",1662802020," || req.http.x-tmp ~ ",1664304377," || req.http.x-tmp ~ ",1699403341," || req.http.x-tmp ~ ",1703330236," || req.http.x-tmp ~ ",1705212842," || req.http.x-tmp ~ ",1717308846," || req.http.x-tmp ~ ",1721192084," || req.http.x-tmp ~ ",1726088776," || req.http.x-tmp ~ ",1732221003," || req.http.x-tmp ~ ",1744006520," || req.http.x-tmp ~ ",1759104730," || req.http.x-tmp ~ ",1770392935," || req.http.x-tmp ~ ",1784917547," || req.http.x-tmp ~ ",1788493240," || req.http.x-tmp ~ ",1789177861," || req.http.x-tmp ~ ",1803961899," || req.http.x-tmp ~ ",1809605937," || req.http.x-tmp ~ ",1818762875," || req.http.x-tmp ~ ",1825945660," || req.http.x-tmp ~ ",1842650838," || req.http.x-tmp ~ ",1849388879," || req.http.x-tmp ~ ",1850401120," || req.http.x-tmp ~ ",1854193362," || req.http.x-tmp ~ ",1854792711," || req.http.x-tmp ~ ",1861871502," || req.http.x-tmp ~ ",1870372900," || req.http.x-tmp ~ ",1875494792," || req.http.x-tmp ~ ",1888415271," || req.http.x-tmp ~ ",1889249988," || req.http.x-tmp ~ ",1897978166," || req.http.x-tmp ~ ",1911269734," || req.http.x-tmp ~ ",1916252720," || req.http.x-tmp ~ ",1930791876," || req.http.x-tmp ~ ",1939326028," || req.http.x-tmp ~ ",1992879189," || req.http.x-tmp ~ ",1998960969," || req.http.x-tmp ~ ",2006438350," || req.http.x-tmp ~ ",2008802831," || req.http.x-tmp ~ ",2031279507," || req.http.x-tmp ~ ",2036931219," || req.http.x-tmp ~ ",2038393302," || req.http.x-tmp ~ ",2041205673," || req.http.x-tmp ~ ",2042919943," || req.http.x-tmp ~ ",2046338370," || req.http.x-tmp ~ ",2053776448," || req.http.x-tmp ~ ",2056717462," || req.http.x-tmp ~ ",2061719148," || req.http.x-tmp ~ ",2066248237," || req.http.x-tmp ~ ",2075668569," || req.http.x-tmp ~ ",2079591757," || req.http.x-tmp ~ ",2085233746," || req.http.x-tmp ~ ",2085469774," || req.http.x-tmp ~ ",2096923695," || req.http.x-tmp ~ ",2097367028," || req.http.x-tmp ~ ",2102320519," || req.http.x-tmp ~ ",2114532604," || req.http.x-tmp ~ ",2115524957," || req.http.x-tmp ~ ",2116670563," || req.http.x-tmp ~ ",2117639321," || req.http.x-tmp ~ ",2122699599," || req.http.x-tmp ~ ",2124850242," || req.http.x-tmp ~ ",2127795148," || req.http.x-tmp ~ ",2137522847," || req.http.x-tmp ~ ",2144906646,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "realist") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",838764569,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "realist-naeringsmegling-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ ".*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1304772300,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "real-naeringsmegling-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",697456594,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "rede-eiendomsmegling-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1328051668,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "Redningsselskapet") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1736557282,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "reetools") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/bap.*" || req.url ~ "^/iad/ad/bap-webstore.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/bap.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/bap.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1772826952,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "reviva-realforvaltning-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",212750048,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "roa-autoco") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1474031050,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "rom-eiendom") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1029971674,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "roomsketcher") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "rustad-eiendomsmegling-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",9664624,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "raadgiverhuset-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1195757171,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "sagmoen-prosjekt-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1521369106,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "salespeople-selection-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1363335106,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "saltdalshytta-no") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1735953152,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "sandbox-utleieplassen") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "sande-bil-partnergruppe") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1295823065,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "sandved-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1485796832,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "sandven-partnergruppe") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",427554128,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "schenker-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",585314256,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "schibsted-tech-polska") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "selg-privat") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1300326793,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "selvaag-bolig") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",318255631,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "sem--johnsen-eiendomsmegling") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",287957051,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "sem-og-johnsen-eiendomsmegling-briskeby") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1207636091,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "sentinel") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "sg-finans-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/agriculture-.*" || req.url ~ "^/iad/ad/bus.*" || req.url ~ "^/iad/ad/construction.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/agriculture-.*" || req.url ~ "^/iad/ad/model/bus.*" || req.url ~ "^/iad/ad/model/construction.*" || req.url ~ "^/iad/ad/model/truck.*" || req.url ~ "^/iad/ad/truck.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/agriculture-.*" || req.url ~ "^/iad/search/bus.*" || req.url ~ "^/iad/search/construction.*" || req.url ~ "^/iad/search/truck.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1100263058,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "sjoe-sport-service-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1027865012,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "skien-bilsalg-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",7862183,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "skien-boligbyggelag") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",758337687,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "skifte-eiendom-admin") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",93623530,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "skotvedt") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",452688160,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "skuteviken") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",352275763,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "slatlem-molde") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",2029204532,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "sne-eiendom-as-tromsoe") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",531661514,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "soerlandet-caravansenter-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/(mobile-home|caravan).*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/(mobile-home|caravan).*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",33595196," || req.http.x-tmp ~ ",63221649," || req.http.x-tmp ~ ",292241434," || req.http.x-tmp ~ ",468106670," || req.http.x-tmp ~ ",469307142," || req.http.x-tmp ~ ",1482905706," || req.http.x-tmp ~ ",1543809390," || req.http.x-tmp ~ ",1797066951," || req.http.x-tmp ~ ",2053804504,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "soermegleren-as-mor") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",611143938,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "sola-bobil-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/(mobile-home|caravan).*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/(mobile-home|caravan).*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1174661051,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "solberg-bil-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/construction.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/construction.*" || req.url ~ "^/iad/ad/model/mc$" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-sale/description" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/caravan/description" || req.url ~ "^/iad/search/car-norway/description" || req.url ~ "^/iad/search/construction.*" || req.url ~ "^/iad/search/mc/description" || req.url ~ "^/iad/search/mobile-home/description" || req.url ~ "^/iad/search/van-.*" || req.url ~ "^/tp[/]?$" || req.url ~ "^/tp/ad/boat-.*" || req.url ~ "^/tp/ad/car-.*" || req.url ~ "^/tp/ad/caravan.*" || req.url ~ "^/tp/ad/\d+/?$" || req.url ~ "^/tp/ad/mc.*" || req.url ~ "^/tp/ad/mobile-home.*" || req.url ~ "^/tp/search/boat-sale" || req.url ~ "^/tp/search/caravan" || req.url ~ "^/tp/search/car-norway" || req.url ~ "^/tp/search/mc" || req.url ~ "^/tp/search/mobile-home" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1128324406,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "solberg-bruktbil") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",788974191," || req.http.x-tmp ~ ",1128324406,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "solberg-gruppen-partnergruppe") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",2084988653,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "solmegleren") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",995007061,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "solstrand-boliger-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",2128218745,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "somme-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",803549249,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "sonans-karriere-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1177485901,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "sopra-steria-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",789464926,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "sor-bolig-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1623265962,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "sormegleren") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1320996379,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "soylen-eiendom") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1468553357," || req.http.x-tmp ~ ",1911471096,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "spabo-eiendom") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1387971818,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "spabo-eiendom-partnergruppe") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",784699647,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "spabo-naering") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1933686797,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "sparebank1-sr-bank") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",888335051,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "speed-motorcenter-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/mc.*" || req.url ~ "^/iad/ad/model/mc.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/(mc|atv|snowmobile|moped-scooter).*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1593034774,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "spt-payment") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/order-payment/payment/callback/.*" || req.url ~ "^/trade-callback-handler/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",3,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "spz-bil") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1071507469,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "stamsaas-fritid-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/bap.*" || req.url ~ "^/iad/ad/bap-webstore.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/bap.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/(mobile-home|caravan).*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/bap.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/(mobile-home|caravan).*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1092224576," || req.http.x-tmp ~ ",1987815595,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "stamsaas-moss-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",488095918,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "stavanger-kommune") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",2081866908,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "stavlund-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",224998275,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "stiftsstaden-boligutleie-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",435494421,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "storebrand-asset-management-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",197943626,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "strand-autosalg-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",918469257,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "strandveien-auto-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",200833834," || req.http.x-tmp ~ ",636809029,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "stray--co-eiendomsmegling-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",4294966285,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "studentconsulting-norge-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",712849803,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "style-auto-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1455317460,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "SullandPartnergruppe") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",95434651," || req.http.x-tmp ~ ",1173146937,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "sundal-yacht") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1527432311,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "sweco-norge-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",496195526,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "swiftcourt - digital kontrakt") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad/ad/model/.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/minekjoretoy/.*" || req.url ~ "^/tp/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",3,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "sykehuspartner") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",402270510,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "synsam-norge-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1545273203,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "systemhus-norge-as-mor") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",324337426,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "technogarden") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",2140805303,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "technopolis-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1529992669,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "tekna-teknisk-naturvitenskapelig-forening") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",133356940,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "teknisk-bureau-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/agriculture-.*" || req.url ~ "^/iad/ad/bus.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/construction.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/mc.*" || req.url ~ "^/iad/ad/model/agriculture-.*" || req.url ~ "^/iad/ad/model/bus.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/construction.*" || req.url ~ "^/iad/ad/model/mc.*" || req.url ~ "^/iad/ad/model/truck.*" || req.url ~ "^/iad/ad/truck.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/agriculture-.*" || req.url ~ "^/iad/search/bus.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/construction.*" || req.url ~ "^/iad/search/(mc|atv|snowmobile|moped-scooter).*" || req.url ~ "^/iad/search/truck.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1191282618,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "telenor-norge-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",550336865,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "tellus-eiendom") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1848050348,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "tempo-bemanning") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1684969536,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "thales-norway-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",122450717,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "the-adecco-group") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1878014,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "thon-eiendom") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",970942976,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "tieto-norway-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1389525318,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "tilhenger-spesialisten-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/bap.*" || req.url ~ "^/iad/ad/bap-webstore.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/bap.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/bap.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1307345803,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "tinde-hytter-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",427421453,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "tinde-utvikling-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",400722249,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "tk-motor") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/mc.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/mc.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/(mc|atv|snowmobile|moped-scooter).*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",881273272,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "toerset-trading-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/agriculture-.*" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/bus.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/construction.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/agriculture-.*" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/bus.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/construction.*" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/model/truck.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/ad/truck.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/agriculture-.*" || req.url ~ "^/iad/search/boat-.*" || req.url ~ "^/iad/search/bus.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/construction.*" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/iad/search/truck.*" || req.url ~ "^/iad/search/van-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",646959377,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "topp-auto-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1262145983,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "top-temp-holding-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",104124884,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "torgallmenningen-eiendomsmegling") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1728194105,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "totaleiendom") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",477667489,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "totalplan") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1522903260,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "toyota-bauda-partnergruppe") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",4294963326," || req.http.x-tmp ~ ",360784213,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "toyota-oslo") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",602291918,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "toyota-partnergruppe") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",30041456," || req.http.x-tmp ~ ",137489143," || req.http.x-tmp ~ ",138448135," || req.http.x-tmp ~ ",225545969," || req.http.x-tmp ~ ",311313482," || req.http.x-tmp ~ ",378134738," || req.http.x-tmp ~ ",528126853," || req.http.x-tmp ~ ",605289571," || req.http.x-tmp ~ ",619827310," || req.http.x-tmp ~ ",699050018," || req.http.x-tmp ~ ",702893036," || req.http.x-tmp ~ ",769373211," || req.http.x-tmp ~ ",772987692," || req.http.x-tmp ~ ",809412144," || req.http.x-tmp ~ ",812543889," || req.http.x-tmp ~ ",955536255," || req.http.x-tmp ~ ",1006815752," || req.http.x-tmp ~ ",1038964871," || req.http.x-tmp ~ ",1176581736," || req.http.x-tmp ~ ",1266150969," || req.http.x-tmp ~ ",1325061031," || req.http.x-tmp ~ ",1474623054," || req.http.x-tmp ~ ",1598409260," || req.http.x-tmp ~ ",1708229693," || req.http.x-tmp ~ ",1812153563," || req.http.x-tmp ~ ",1827160317," || req.http.x-tmp ~ ",1835159617," || req.http.x-tmp ~ ",1855342245," || req.http.x-tmp ~ ",2073146187,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "toyota-soervest-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",768038173,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "tp-brage-finans") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "tp-dnb") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "tp-eiendomsmegling") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1920038352,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "tp-if-forsikring") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/mc$" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-sale/description" || req.url ~ "^/iad/search/caravan/description" || req.url ~ "^/iad/search/car-norway/description" || req.url ~ "^/iad/search/mc/description" || req.url ~ "^/iad/search/mobile-home/description" || req.url ~ "^/tp[/]?$" || req.url ~ "^/tp/ad/boat-.*" || req.url ~ "^/tp/ad/car-.*" || req.url ~ "^/tp/ad/caravan.*" || req.url ~ "^/tp/ad/\d+/?$" || req.url ~ "^/tp/ad/mc.*" || req.url ~ "^/tp/ad/mobile-home.*" || req.url ~ "^/tp/search/boat-sale" || req.url ~ "^/tp/search/caravan" || req.url ~ "^/tp/search/car-norway" || req.url ~ "^/tp/search/mc" || req.url ~ "^/tp/search/mobile-home" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",865630193,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "tp-santander") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "tp-skandiabanken") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "translift") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/bap.*" || req.url ~ "^/iad/ad/bap-webstore.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/bap.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/bap.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1985179254,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "trn-baat") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",768215221,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "troendelag-trucksenter") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/agriculture-.*" || req.url ~ "^/iad/ad/bus.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/construction.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/agriculture-.*" || req.url ~ "^/iad/ad/model/bus.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/construction.*" || req.url ~ "^/iad/ad/model/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/truck.*" || req.url ~ "^/iad/ad/truck.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/agriculture-.*" || req.url ~ "^/iad/search/bus.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/construction.*" || req.url ~ "^/iad/search/(mobile-home|caravan).*" || req.url ~ "^/iad/search/truck.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",901182362,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "trucknor-partnergruppe") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/truck.*" || req.url ~ "^/iad/ad/truck.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/truck.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",415031388,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "try-apt-alle-markeder") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "tt-bilmegling-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",944863621,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "union") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1700007021," || req.http.x-tmp ~ ",2140965092,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "unit-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",698865561,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "upsource") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1616690290," || req.http.x-tmp ~ ",2085167334,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "utleiemegleren-bergen-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1429151888,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "utleiemegleren-frogner-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1238006632,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "utleiemeglingen-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1602319774,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "utleieplassen") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1743504380,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "valuation-nettbil") {
      # NOOP, client has no orgIds and access to everything
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "varde-kapital") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",430006657,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "vesteraalen-bil") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1486233700,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "vestfold-auto-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1195610121,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "vestlandshus-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",2048445191,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "vg-lykkespill") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ ".*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",3,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "vika-eiendomsforvaltning-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1430665219,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "visindi-oslo-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",838084751,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "visma-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",84809227,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "vizir") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1361976545,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "vs-auto-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/(mobile-home|caravan).*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/(mobile-home|caravan).*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1005701889,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "watchcom_slett_1_jul_2016") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1001213,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "weeno") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/agriculture-.*" || req.url ~ "^/iad/ad/bap.*" || req.url ~ "^/iad/ad/bap-webstore.*" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/bus.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/construction.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/mc.*" || req.url ~ "^/iad/ad/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/agriculture-.*" || req.url ~ "^/iad/ad/model/bap.*" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/bus.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/construction.*" || req.url ~ "^/iad/ad/model/mc.*" || req.url ~ "^/iad/ad/model/(mobile-home|caravan).*" || req.url ~ "^/iad/ad/model/truck.*" || req.url ~ "^/iad/ad/truck.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/agriculture-.*" || req.url ~ "^/iad/search/bap.*" || req.url ~ "^/iad/search/boat-.*" || req.url ~ "^/iad/search/bus.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/construction.*" || req.url ~ "^/iad/search/(mc|atv|snowmobile|moped-scooter).*" || req.url ~ "^/iad/search/(mobile-home|caravan).*" || req.url ~ "^/iad/search/truck.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1491541134,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "wf-bil-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",239417615,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "wist-last--buss") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/bus.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/bus.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/truck.*" || req.url ~ "^/iad/ad/truck.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/bus.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/truck.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",615118993,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "worktube-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/job-.*" || req.url ~ "^/iad/ad/model/job-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/job-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",9997651,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "wps-naeringsmegling-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",9822712,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "z-eiendom-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/realestate-.*" || req.url ~ "^/iad/ad/realestate-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/realestate-.*" || req.url ~ "^/realestate/neighborhood/.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",501779836,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "aaby-auto-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1662802020,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "aadalen-truck") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/construction.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/ad/model/construction.*" || req.url ~ "^/iad/ad/model/truck.*" || req.url ~ "^/iad/ad/truck.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/construction.*" || req.url ~ "^/iad/search/truck.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",1659498869,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "aakra-bil-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/boat-.*" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/boat-.*" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/boat-.*" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",108549119," || req.http.x-tmp ~ ",978151337," || req.http.x-tmp ~ ",1592803158,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "aalgaards-auto-as") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",4294964590,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    else if (req.http.x-client == "aaro-bil") {
      # Client has orgIds
      if ((req.method == "GET") && (req.url ~ "^/iad[/]?$" || req.url ~ "^/iad/ad/car-.*" || req.url ~ "^/iad/ad/\d+/?$" || req.url ~ "^/iad/ad/model/car-.*" || req.url ~ "^/iad/image/size$" || req.url ~ "^/iad/search/car-.*" || req.url ~ "^/iad/search/van-.*" || (req.url ~ "^/iad/ad/[^(model|\\d)].*") || (req.url ~ "^/iad/search/[^/]+[/]?$") || (req.url ~ "^/classified-product-commerce/organisations/\\d+/classifieds.*") || (req.url ~ "^/statistics/.*") || (req.url ~ "^/distribution/.*"))) {
        if (!resp.http.RESOURCE-OWNERS && resp.status < 400) {
          std.log("TRACE: DENIED. Client has orgId, but no R-O in backend response");
          set req.http.x-forbid-please = "resp-has-no-RO";
          return(restart);
        }
        if (!resp.http.RESOURCE-OWNERS && resp.status >= 400) {
          return(synth(resp.status, resp.reason));
        }
        set req.http.x-tmp = ","+resp.http.RESOURCE-OWNERS+",";
        if (!(req.http.x-tmp ~ ",637543784,")) {
          std.log("TRACE: DENIED. Client doesn't have access");
          set req.http.x-forbid-please = "notowner";
          return(restart);
        }
      }
      
      std.log("TRACE: ACCEPT. Client has access.");
    }
    
    else {
      std.log("DENIED: Unknown client.");
      std.log("Unknown key used was " + req.http.x-finn-apikey);
      set req.http.x-forbid-please = "true";
      return(restart);
    }
    std.log("TRACE: ACCEPT. Client has access.");
  }

  |]